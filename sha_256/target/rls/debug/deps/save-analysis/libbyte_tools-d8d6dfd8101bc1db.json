{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3","program":"/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","byte_tools","/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d8d6dfd8101bc1db","-C","extra-filename=-d8d6dfd8101bc1db","--out-dir","/home/santiago/Repositories/rust-projects/sha_256/target/rls/debug/deps","-L","dependency=/home/santiago/Repositories/rust-projects/sha_256/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/santiago/Repositories/rust-projects/sha_256/target/rls/debug/deps/libbyte_tools-d8d6dfd8101bc1db.rmeta"},"prelude":{"crate_id":{"name":"byte_tools","disambiguator":[16329623374278786819,3960530299174311381]},"crate_root":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src","external_crates":[{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}}],"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":0,"byte_end":11388,"line_start":1,"line_end":325,"column_start":1,"column_end":15}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":0,"byte_end":11388,"line_start":1,"line_end":325,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":147,"byte_end":159,"line_start":6,"line_end":6,"column_start":8,"column_end":20},"name":"write_u64_be","qualname":"::write_u64_be","value":"pub fn write_u64_be(&mut [u8], u64)","parent":null,"children":[],"decl_id":null,"docs":" Write a u64 into a vector, which must be 8 bytes long. The value is written\n in big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u64 into a vector, which must be 8 bytes long. The value is written","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":34,"byte_end":113,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ in big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":114,"byte_end":139,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":507,"byte_end":519,"line_start":17,"line_end":17,"column_start":8,"column_end":20},"name":"write_u64_le","qualname":"::write_u64_le","value":"pub fn write_u64_le(&mut [u8], u64)","parent":null,"children":[],"decl_id":null,"docs":" Write a u64 into a vector, which must be 8 bytes long. The value is written\n in little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u64 into a vector, which must be 8 bytes long. The value is written","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":391,"byte_end":470,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ in little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":471,"byte_end":499,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":861,"byte_end":874,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"write_u64v_be","qualname":"::write_u64v_be","value":"pub fn write_u64v_be(&mut [u8], &[u64])","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u64s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u64s into a vector of bytes. The values are written in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":751,"byte_end":827,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":828,"byte_end":853,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1407,"byte_end":1420,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"write_u64v_le","qualname":"::write_u64v_le","value":"pub fn write_u64v_le(&mut [u8], &[u64])","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u64s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u64s into a vector of bytes. The values are written in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1297,"byte_end":1373,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1374,"byte_end":1399,"line_start":43,"line_end":43,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1956,"byte_end":1968,"line_start":60,"line_end":60,"column_start":8,"column_end":20},"name":"write_u32_be","qualname":"::write_u32_be","value":"pub fn write_u32_be(&mut [u8], u32)","parent":null,"children":[],"decl_id":null,"docs":" Write a u32 into a vector, which must be 4 bytes long. The value is written\n in big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u32 into a vector, which must be 4 bytes long. The value is written","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1843,"byte_end":1922,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ in big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":1923,"byte_end":1948,"line_start":59,"line_end":59,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2316,"byte_end":2328,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"write_u32_le","qualname":"::write_u32_le","value":"pub fn write_u32_le(&mut [u8], u32)","parent":null,"children":[],"decl_id":null,"docs":" Write a u32 into a vector, which must be 4 bytes long. The value is written\n in little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a u32 into a vector, which must be 4 bytes long. The value is written","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2200,"byte_end":2279,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ in little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2280,"byte_end":2308,"line_start":70,"line_end":70,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2670,"byte_end":2683,"line_start":82,"line_end":82,"column_start":8,"column_end":21},"name":"write_u32v_le","qualname":"::write_u32v_le","value":"pub fn write_u32v_le(&mut [u8], &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u32s into a vector of bytes. The values are written in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u32s into a vector of bytes. The values are written in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2560,"byte_end":2636,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":2637,"byte_end":2662,"line_start":81,"line_end":81,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3213,"byte_end":3226,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"write_u32v_be","qualname":"::write_u32v_be","value":"pub fn write_u32v_be(&mut [u8], &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Write a vector of u32s into a vector of bytes. The values are written in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Write a vector of u32s into a vector of bytes. The values are written in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3106,"byte_end":3182,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3183,"byte_end":3205,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3752,"byte_end":3764,"line_start":114,"line_end":114,"column_start":8,"column_end":20},"name":"read_u64v_be","qualname":"::read_u64v_be","value":"pub fn read_u64v_be(&mut [u64], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u64s. The values are read in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u64s. The values are read in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3649,"byte_end":3721,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/ big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":3722,"byte_end":3744,"line_start":113,"line_end":113,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4344,"byte_end":4356,"line_start":131,"line_end":131,"column_start":8,"column_end":20},"name":"read_u64v_le","qualname":"::read_u64v_le","value":"pub fn read_u64v_le(&mut [u64], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u64s. The values are read in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u64s. The values are read in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4238,"byte_end":4310,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/ little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4311,"byte_end":4336,"line_start":130,"line_end":130,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4933,"byte_end":4945,"line_start":148,"line_end":148,"column_start":8,"column_end":20},"name":"read_u32v_be","qualname":"::read_u32v_be","value":"pub fn read_u32v_be(&mut [u32], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u32s. The values are read in\n big-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u32s. The values are read in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4830,"byte_end":4902,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/ big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":4903,"byte_end":4925,"line_start":147,"line_end":147,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":5525,"byte_end":5537,"line_start":165,"line_end":165,"column_start":8,"column_end":20},"name":"read_u32v_le","qualname":"::read_u32v_le","value":"pub fn read_u32v_le(&mut [u32], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Read a vector of bytes into a vector of u32s. The values are read in\n little-endian format.\n","sig":null,"attributes":[{"value":"/ Read a vector of bytes into a vector of u32s. The values are read in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":5419,"byte_end":5491,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":5492,"byte_end":5517,"line_start":164,"line_end":164,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6098,"byte_end":6109,"line_start":181,"line_end":181,"column_start":8,"column_end":19},"name":"read_u32_le","qualname":"::read_u32_le","value":"pub fn read_u32_le(&[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u32 value in little-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u32 value in little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6011,"byte_end":6090,"line_start":180,"line_end":180,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6506,"byte_end":6517,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"read_u64_le","qualname":"::read_u64_le","value":"pub fn read_u64_le(&[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u64 value in little-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u64 value in little-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6419,"byte_end":6498,"line_start":192,"line_end":192,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6911,"byte_end":6922,"line_start":205,"line_end":205,"column_start":8,"column_end":19},"name":"read_u32_be","qualname":"::read_u32_be","value":"pub fn read_u32_be(&[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u32 value in big-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u32 value in big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":6827,"byte_end":6903,"line_start":204,"line_end":204,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":7316,"byte_end":7327,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"read_u64_be","qualname":"::read_u64_be","value":"pub fn read_u64_be(&[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Read the value of a vector of bytes as a u64 value in big-endian format.\n","sig":null,"attributes":[{"value":"/ Read the value of a vector of bytes as a u64 value in big-endian format.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":7232,"byte_end":7308,"line_start":216,"line_end":216,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":7704,"byte_end":7717,"line_start":229,"line_end":229,"column_start":8,"column_end":21},"name":"xor_keystream","qualname":"::xor_keystream","value":"pub fn xor_keystream(&mut [u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" XOR plaintext and keystream, storing the result in dst.\n","sig":null,"attributes":[{"value":"/ XOR plaintext and keystream, storing the result in dst.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":7637,"byte_end":7696,"line_start":228,"line_end":228,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8196,"byte_end":8207,"line_start":244,"line_end":244,"column_start":8,"column_end":19},"name":"copy_memory","qualname":"::copy_memory","value":"pub fn copy_memory(&[u8], &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Copy bytes from src to dest\n","sig":null,"attributes":[{"value":"/ Copy bytes from src to dest","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8147,"byte_end":8178,"line_start":242,"line_end":242,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8179,"byte_end":8188,"line_start":243,"line_end":243,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8467,"byte_end":8471,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"pub fn zero(&mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Zero all bytes in dst\n","sig":null,"attributes":[{"value":"/ Zero all bytes in dst","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8424,"byte_end":8449,"line_start":253,"line_end":253,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8450,"byte_end":8459,"line_start":254,"line_end":254,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8891,"byte_end":8908,"line_start":267,"line_end":267,"column_start":8,"column_end":25},"name":"add_bytes_to_bits","qualname":"::add_bytes_to_bits","value":"pub fn add_bytes_to_bits(u64, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified number of bytes to the bit count. panic!() if this\n would cause numeric overflow.\n","sig":null,"attributes":[{"value":"/ Adds the specified number of bytes to the bit count. panic!() if this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8776,"byte_end":8849,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ would cause numeric overflow.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":8850,"byte_end":8883,"line_start":266,"line_end":266,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":9335,"byte_end":9358,"line_start":280,"line_end":280,"column_start":8,"column_end":31},"name":"add_bytes_to_bits_tuple","qualname":"::add_bytes_to_bits_tuple","value":"pub fn add_bytes_to_bits_tuple((u64, u64), u64) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified number of bytes to the bit count, which is a tuple where\n the first element is the high order value. panic!() if this would cause\n numeric overflow.\n","sig":null,"attributes":[{"value":"/ Adds the specified number of bytes to the bit count, which is a tuple where","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":9150,"byte_end":9229,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"/ the first element is the high order value. panic!() if this would cause","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":9230,"byte_end":9305,"line_start":278,"line_end":278,"column_start":1,"column_end":76}},{"value":"/ numeric overflow.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-tools-0.1.3/src/lib.rs","byte_start":9306,"byte_end":9327,"line_start":279,"line_end":279,"column_start":1,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}