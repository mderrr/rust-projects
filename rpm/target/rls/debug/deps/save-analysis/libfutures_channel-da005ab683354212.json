{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15","program":"/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=da005ab683354212","-C","extra-filename=-da005ab683354212","--out-dir","/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps","-L","dependency=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps","--extern","futures_core=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_core-dc2dc10a03c101dd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_channel-da005ab683354212.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[3039895209257271607,18231771995747441921]},"crate_root":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src","external_crates":[{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[13318321163015562288,17657679851452742453]}}],"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":1332,"line_start":1,"line_end":38,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":1332,"line_start":1,"line_end":38,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":44},{"krate":0,"index":311}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":605,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":861,"byte_end":882,"line_start":18,"line_end":18,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":445},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":459},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":139},{"krate":0,"index":474},{"krate":0,"index":485},{"krate":0,"index":483},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":487},{"krate":0,"index":502},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":505},{"krate":0,"index":518},{"krate":0,"index":516},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":520},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":546},{"krate":0,"index":544},{"krate":0,"index":543},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":204},{"krate":0,"index":221},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1049,"byte_end":1083,"line_start":23,"line_end":23,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1238,"byte_end":1261,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953576,"byte_end":8953645,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953646,"byte_end":8953669,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953670,"byte_end":8953673,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953674,"byte_end":8953744,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953745,"byte_end":8953824,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953825,"byte_end":8953900,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953901,"byte_end":8953973,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8953974,"byte_end":8954056,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954057,"byte_end":8954134,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954135,"byte_end":8954212,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954213,"byte_end":8954258,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954259,"byte_end":8954262,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954263,"byte_end":8954339,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954340,"byte_end":8954343,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954344,"byte_end":8954363,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954364,"byte_end":8954367,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954368,"byte_end":8954434,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954435,"byte_end":8954515,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954516,"byte_end":8954573,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954574,"byte_end":8954608,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954609,"byte_end":8954612,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954613,"byte_end":8954683,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954684,"byte_end":8954763,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954764,"byte_end":8954787,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954788,"byte_end":8954791,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954792,"byte_end":8954812,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954813,"byte_end":8954816,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954817,"byte_end":8954883,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954884,"byte_end":8954960,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8954961,"byte_end":8955041,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955042,"byte_end":8955122,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955123,"byte_end":8955195,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955196,"byte_end":8955255,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955256,"byte_end":8955259,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955260,"byte_end":8955294,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955295,"byte_end":8955333,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955334,"byte_end":8955393,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955394,"byte_end":8955422,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8955423,"byte_end":8955493,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958884,"byte_end":8958890,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958736,"byte_end":8958787,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958788,"byte_end":8958791,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958792,"byte_end":8958855,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959082,"byte_end":8959097,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958927,"byte_end":8958981,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958982,"byte_end":8958985,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958986,"byte_end":8959053,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959369,"byte_end":8959377,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":464}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959224,"byte_end":8959272,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959273,"byte_end":8959276,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959277,"byte_end":8959340,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959579,"byte_end":8959596,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":470}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959427,"byte_end":8959478,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959479,"byte_end":8959482,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959483,"byte_end":8959550,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959873,"byte_end":8959882,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959763,"byte_end":8959822,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960021,"byte_end":8960033,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959913,"byte_end":8959977,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960243,"byte_end":8960255,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960165,"byte_end":8960231,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960705,"byte_end":8960712,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960622,"byte_end":8960693,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960929,"byte_end":8960944,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960842,"byte_end":8960917,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961743,"byte_end":8961750,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961660,"byte_end":8961731,"line_start":229,"line_end":229,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961893,"byte_end":8961908,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961806,"byte_end":8961881,"line_start":234,"line_end":234,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962049,"byte_end":8962059,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961972,"byte_end":8962037,"line_start":239,"line_end":239,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962167,"byte_end":8962182,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962101,"byte_end":8962155,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965541,"byte_end":8965548,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8964915,"byte_end":8964995,"line_start":347,"line_end":347,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8964996,"byte_end":8964999,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965000,"byte_end":8965079,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965080,"byte_end":8965157,"line_start":350,"line_end":350,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965158,"byte_end":8965229,"line_start":351,"line_end":351,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965230,"byte_end":8965303,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965304,"byte_end":8965374,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965375,"byte_end":8965378,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965379,"byte_end":8965433,"line_start":355,"line_end":355,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965434,"byte_end":8965521,"line_start":356,"line_end":356,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8965522,"byte_end":8965533,"line_start":357,"line_end":357,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966799,"byte_end":8966808,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966287,"byte_end":8966363,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966364,"byte_end":8966374,"line_start":384,"line_end":384,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966375,"byte_end":8966378,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966379,"byte_end":8966459,"line_start":386,"line_end":386,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966460,"byte_end":8966539,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966540,"byte_end":8966553,"line_start":388,"line_end":388,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966554,"byte_end":8966557,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966558,"byte_end":8966637,"line_start":390,"line_end":390,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966638,"byte_end":8966714,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8966715,"byte_end":8966791,"line_start":392,"line_end":392,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977396,"byte_end":8977404,"line_start":697,"line_end":697,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977283,"byte_end":8977353,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977358,"byte_end":8977384,"line_start":696,"line_end":696,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977883,"byte_end":8977893,"line_start":710,"line_end":710,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977667,"byte_end":8977701,"line_start":705,"line_end":705,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977706,"byte_end":8977709,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977714,"byte_end":8977759,"line_start":707,"line_end":707,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977764,"byte_end":8977835,"line_start":708,"line_end":708,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977840,"byte_end":8977871,"line_start":709,"line_end":709,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978508,"byte_end":8978518,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977997,"byte_end":8978071,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978076,"byte_end":8978114,"line_start":715,"line_end":715,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978119,"byte_end":8978122,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978127,"byte_end":8978145,"line_start":717,"line_end":717,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978150,"byte_end":8978153,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978158,"byte_end":8978182,"line_start":719,"line_end":719,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978187,"byte_end":8978190,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978195,"byte_end":8978254,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978259,"byte_end":8978308,"line_start":722,"line_end":722,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978313,"byte_end":8978389,"line_start":723,"line_end":723,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978394,"byte_end":8978422,"line_start":724,"line_end":724,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978427,"byte_end":8978496,"line_start":725,"line_end":725,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978799,"byte_end":8978808,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978718,"byte_end":8978787,"line_start":731,"line_end":731,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978998,"byte_end":8979011,"line_start":737,"line_end":737,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8978912,"byte_end":8978986,"line_start":736,"line_end":736,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979227,"byte_end":8979237,"line_start":744,"line_end":744,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979124,"byte_end":8979215,"line_start":743,"line_end":743,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979355,"byte_end":8979368,"line_start":749,"line_end":749,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979285,"byte_end":8979343,"line_start":748,"line_end":748,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979616,"byte_end":8979631,"line_start":757,"line_end":757,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979551,"byte_end":8979604,"line_start":756,"line_end":756,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979899,"byte_end":8979912,"line_start":765,"line_end":765,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8979839,"byte_end":8979887,"line_start":764,"line_end":764,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980210,"byte_end":8980220,"line_start":778,"line_end":778,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980143,"byte_end":8980198,"line_start":777,"line_end":777,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980497,"byte_end":8980506,"line_start":784,"line_end":784,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980416,"byte_end":8980485,"line_start":783,"line_end":783,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980698,"byte_end":8980711,"line_start":789,"line_end":789,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980612,"byte_end":8980686,"line_start":788,"line_end":788,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980919,"byte_end":8980929,"line_start":796,"line_end":796,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980816,"byte_end":8980907,"line_start":795,"line_end":795,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981584,"byte_end":8981594,"line_start":816,"line_end":816,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981389,"byte_end":8981423,"line_start":812,"line_end":812,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981428,"byte_end":8981431,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981436,"byte_end":8981509,"line_start":814,"line_end":814,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981514,"byte_end":8981572,"line_start":815,"line_end":815,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981946,"byte_end":8981960,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981700,"byte_end":8981739,"line_start":820,"line_end":820,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981744,"byte_end":8981747,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981752,"byte_end":8981827,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981832,"byte_end":8981908,"line_start":823,"line_end":823,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8981913,"byte_end":8981934,"line_start":824,"line_end":824,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982119,"byte_end":8982132,"line_start":830,"line_end":830,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982049,"byte_end":8982107,"line_start":829,"line_end":829,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982380,"byte_end":8982395,"line_start":838,"line_end":838,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982315,"byte_end":8982368,"line_start":837,"line_end":837,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982672,"byte_end":8982685,"line_start":846,"line_end":846,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982612,"byte_end":8982660,"line_start":845,"line_end":845,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986268,"byte_end":8986273,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986031,"byte_end":8986095,"line_start":958,"line_end":958,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986100,"byte_end":8986103,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986108,"byte_end":8986183,"line_start":960,"line_end":960,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986188,"byte_end":8986256,"line_start":961,"line_end":961,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8987196,"byte_end":8987204,"line_start":984,"line_end":984,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986668,"byte_end":8986743,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986748,"byte_end":8986751,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986756,"byte_end":8986828,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986833,"byte_end":8986907,"line_start":977,"line_end":977,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986912,"byte_end":8986932,"line_start":978,"line_end":978,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986937,"byte_end":8986940,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986945,"byte_end":8986971,"line_start":980,"line_end":980,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986976,"byte_end":8987019,"line_start":981,"line_end":981,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8987024,"byte_end":8987097,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8987102,"byte_end":8987184,"line_start":983,"line_end":983,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992073,"byte_end":8992078,"line_start":1116,"line_end":1116,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991836,"byte_end":8991900,"line_start":1112,"line_end":1112,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991905,"byte_end":8991908,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991913,"byte_end":8991988,"line_start":1114,"line_end":1114,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991993,"byte_end":8992061,"line_start":1115,"line_end":1115,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992720,"byte_end":8992728,"line_start":1132,"line_end":1132,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992192,"byte_end":8992267,"line_start":1122,"line_end":1122,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992272,"byte_end":8992275,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992280,"byte_end":8992352,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992357,"byte_end":8992431,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992436,"byte_end":8992456,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992461,"byte_end":8992464,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992469,"byte_end":8992495,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992500,"byte_end":8992543,"line_start":1129,"line_end":1129,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992548,"byte_end":8992621,"line_start":1130,"line_end":1130,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8992626,"byte_end":8992708,"line_start":1131,"line_end":1131,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":311},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":376},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":389},{"krate":0,"index":561},{"krate":0,"index":572},{"krate":0,"index":571},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":563},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1049,"byte_end":1083,"line_start":23,"line_end":23,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1284,"byte_end":1309,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005006,"byte_end":9005076,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005077,"byte_end":9005080,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005081,"byte_end":9005136,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005613,"byte_end":9005621,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005395,"byte_end":9005471,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005472,"byte_end":9005475,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005476,"byte_end":9005533,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005534,"byte_end":9005601,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005789,"byte_end":9005795,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":352}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005656,"byte_end":9005715,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005716,"byte_end":9005719,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005720,"byte_end":9005777,"line_start":25,"line_end":25,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":363},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008882,"byte_end":9008889,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007683,"byte_end":9007771,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007772,"byte_end":9007775,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007776,"byte_end":9007851,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007852,"byte_end":9007855,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007856,"byte_end":9007936,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9007937,"byte_end":9008015,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008016,"byte_end":9008093,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008094,"byte_end":9008172,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008173,"byte_end":9008221,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008222,"byte_end":9008225,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008226,"byte_end":9008286,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008287,"byte_end":9008290,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008291,"byte_end":9008305,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008306,"byte_end":9008309,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008310,"byte_end":9008317,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008318,"byte_end":9008352,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008353,"byte_end":9008391,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008392,"byte_end":9008395,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008396,"byte_end":9008451,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008452,"byte_end":9008455,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008456,"byte_end":9008478,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008479,"byte_end":9008523,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008524,"byte_end":9008575,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008576,"byte_end":9008624,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008625,"byte_end":9008657,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008658,"byte_end":9008665,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008666,"byte_end":9008669,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008670,"byte_end":9008716,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008717,"byte_end":9008720,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008721,"byte_end":9008760,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008761,"byte_end":9008806,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008807,"byte_end":9008858,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008859,"byte_end":9008866,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9008867,"byte_end":9008874,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018183,"byte_end":9018187,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017690,"byte_end":9017742,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017747,"byte_end":9017750,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017755,"byte_end":9017827,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017832,"byte_end":9017904,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017909,"byte_end":9017941,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017946,"byte_end":9017949,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017954,"byte_end":9018026,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018031,"byte_end":9018101,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018106,"byte_end":9018171,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018839,"byte_end":9018852,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018257,"byte_end":9018318,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018323,"byte_end":9018367,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018372,"byte_end":9018375,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018380,"byte_end":9018399,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018404,"byte_end":9018407,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018412,"byte_end":9018482,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018487,"byte_end":9018561,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018566,"byte_end":9018569,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018574,"byte_end":9018642,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018647,"byte_end":9018720,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018725,"byte_end":9018797,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018802,"byte_end":9018827,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019216,"byte_end":9019228,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9018948,"byte_end":9019017,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019022,"byte_end":9019066,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019071,"byte_end":9019074,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019079,"byte_end":9019150,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019155,"byte_end":9019204,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019652,"byte_end":9019663,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019313,"byte_end":9019378,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019383,"byte_end":9019404,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019409,"byte_end":9019412,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019417,"byte_end":9019492,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019497,"byte_end":9019568,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019573,"byte_end":9019640,"line_start":375,"line_end":375,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019887,"byte_end":9019902,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019725,"byte_end":9019818,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9019823,"byte_end":9019875,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020564,"byte_end":9020576,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":556}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020296,"byte_end":9020371,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020372,"byte_end":9020375,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020376,"byte_end":9020467,"line_start":401,"line_end":401,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020468,"byte_end":9020535,"line_start":402,"line_end":402,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020966,"byte_end":9020974,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020803,"byte_end":9020874,"line_start":416,"line_end":416,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020875,"byte_end":9020909,"line_start":417,"line_end":417,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021582,"byte_end":9021587,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021210,"byte_end":9021283,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021288,"byte_end":9021303,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021308,"byte_end":9021311,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021316,"byte_end":9021383,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021388,"byte_end":9021450,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021455,"byte_end":9021528,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021533,"byte_end":9021570,"line_start":437,"line_end":437,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022018,"byte_end":9022026,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021642,"byte_end":9021709,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021714,"byte_end":9021717,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021722,"byte_end":9021789,"line_start":444,"line_end":444,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021794,"byte_end":9021797,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021802,"byte_end":9021875,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021880,"byte_end":9021946,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021951,"byte_end":9021954,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021959,"byte_end":9022006,"line_start":449,"line_end":449,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951620,"byte_end":8951624,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951661,"byte_end":8951665,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951681,"byte_end":8951685,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8952490,"byte_end":8952497,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8952750,"byte_end":8952757,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8953120,"byte_end":8953127,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001567,"byte_end":9001572,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001609,"byte_end":9001614,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001630,"byte_end":9001634,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001794,"byte_end":9001799,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9004707,"byte_end":9004712,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958665,"byte_end":8958685,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958710,"byte_end":8958728,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959199,"byte_end":8959214,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959738,"byte_end":8959755,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960298,"byte_end":8960307,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960587,"byte_end":8960596,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960606,"byte_end":8960615,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961103,"byte_end":8961115,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961296,"byte_end":8961308,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961610,"byte_end":8961622,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961638,"byte_end":8961650,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962250,"byte_end":8962262,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962406,"byte_end":8962418,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962567,"byte_end":8962579,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8964675,"byte_end":8964685,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8967281,"byte_end":8967301,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8970136,"byte_end":8970154,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977267,"byte_end":8977273,"line_start":694,"line_end":694,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980118,"byte_end":8980133,"line_start":776,"line_end":776,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982901,"byte_end":8982907,"line_start":857,"line_end":857,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982999,"byte_end":8983014,"line_start":863,"line_end":863,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8983106,"byte_end":8983126,"line_start":869,"line_end":869,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8984182,"byte_end":8984200,"line_start":897,"line_end":897,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8985451,"byte_end":8985471,"line_start":929,"line_end":929,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8985716,"byte_end":8985734,"line_start":940,"line_end":940,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986013,"byte_end":8986021,"line_start":957,"line_end":957,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989646,"byte_end":8989654,"line_start":1049,"line_end":1049,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989686,"byte_end":8989694,"line_start":1051,"line_end":1051,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989795,"byte_end":8989803,"line_start":1057,"line_end":1057,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8990655,"byte_end":8990663,"line_start":1081,"line_end":1081,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991809,"byte_end":8991826,"line_start":1111,"line_end":1111,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8994655,"byte_end":8994672,"line_start":1183,"line_end":1183,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8994773,"byte_end":8994790,"line_start":1189,"line_end":1189,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8995642,"byte_end":8995659,"line_start":1213,"line_end":1213,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8996845,"byte_end":8996859,"line_start":1249,"line_end":1249,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997142,"byte_end":8997154,"line_start":1261,"line_end":1261,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997680,"byte_end":8997694,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997731,"byte_end":8997745,"line_start":1280,"line_end":1280,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997783,"byte_end":8997795,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997832,"byte_end":8997844,"line_start":1283,"line_end":1283,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997857,"byte_end":8997862,"line_start":1285,"line_end":1285,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005903,"byte_end":9005911,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005936,"byte_end":9005942,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9009088,"byte_end":9009093,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017674,"byte_end":9017680,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020020,"byte_end":9020026,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020130,"byte_end":9020136,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020638,"byte_end":9020650,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020999,"byte_end":9021007,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021171,"byte_end":9021179,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021192,"byte_end":9021200,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022129,"byte_end":9022137,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022331,"byte_end":9022339,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022680,"byte_end":9022688,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022792,"byte_end":9022800,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1274,"byte_end":1278,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1322,"byte_end":1329,"line_start":37,"line_end":37,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":311}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951620,"byte_end":8951624,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951661,"byte_end":8951665,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8951681,"byte_end":8951685,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8952490,"byte_end":8952497,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8952750,"byte_end":8952757,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":8953120,"byte_end":8953127,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001567,"byte_end":9001572,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001609,"byte_end":9001614,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001630,"byte_end":9001634,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9001794,"byte_end":9001799,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":9004707,"byte_end":9004712,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958665,"byte_end":8958685,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8958710,"byte_end":8958728,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959155,"byte_end":8959159,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959162,"byte_end":8959166,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959169,"byte_end":8959174,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2447},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959199,"byte_end":8959214,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8959738,"byte_end":8959755,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960298,"byte_end":8960307,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960587,"byte_end":8960596,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8960606,"byte_end":8960615,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961103,"byte_end":8961115,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961296,"byte_end":8961308,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961610,"byte_end":8961622,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":487},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8961638,"byte_end":8961650,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962250,"byte_end":8962262,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962406,"byte_end":8962418,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8962567,"byte_end":8962579,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8964675,"byte_end":8964685,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8967281,"byte_end":8967301,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8970136,"byte_end":8970154,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8977267,"byte_end":8977273,"line_start":694,"line_end":694,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8980118,"byte_end":8980133,"line_start":776,"line_end":776,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982901,"byte_end":8982907,"line_start":857,"line_end":857,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8982999,"byte_end":8983014,"line_start":863,"line_end":863,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8983106,"byte_end":8983126,"line_start":869,"line_end":869,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8984182,"byte_end":8984200,"line_start":897,"line_end":897,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8985451,"byte_end":8985471,"line_start":929,"line_end":929,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8985716,"byte_end":8985734,"line_start":940,"line_end":940,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8986013,"byte_end":8986021,"line_start":957,"line_end":957,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989646,"byte_end":8989654,"line_start":1049,"line_end":1049,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989686,"byte_end":8989694,"line_start":1051,"line_end":1051,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":462},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8989795,"byte_end":8989803,"line_start":1057,"line_end":1057,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":462},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8990655,"byte_end":8990663,"line_start":1081,"line_end":1081,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8991809,"byte_end":8991826,"line_start":1111,"line_end":1111,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8994655,"byte_end":8994672,"line_start":1183,"line_end":1183,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":468},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8994773,"byte_end":8994790,"line_start":1189,"line_end":1189,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":468},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8995642,"byte_end":8995659,"line_start":1213,"line_end":1213,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8996845,"byte_end":8996859,"line_start":1249,"line_end":1249,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997142,"byte_end":8997154,"line_start":1261,"line_end":1261,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997680,"byte_end":8997694,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997731,"byte_end":8997745,"line_start":1280,"line_end":1280,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997783,"byte_end":8997795,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":529},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997832,"byte_end":8997844,"line_start":1283,"line_end":1283,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":529},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":8997857,"byte_end":8997862,"line_start":1285,"line_end":1285,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005903,"byte_end":9005911,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9005936,"byte_end":9005942,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9009088,"byte_end":9009093,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9017674,"byte_end":9017680,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020020,"byte_end":9020026,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020130,"byte_end":9020136,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020638,"byte_end":9020650,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9020999,"byte_end":9021007,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021171,"byte_end":9021179,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":561},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9021192,"byte_end":9021200,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022129,"byte_end":9022137,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022331,"byte_end":9022339,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":347},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022680,"byte_end":9022688,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":9022792,"byte_end":9022800,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":8701}}]}