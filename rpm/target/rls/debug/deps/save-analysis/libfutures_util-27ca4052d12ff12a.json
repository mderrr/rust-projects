{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15","program":"/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=27ca4052d12ff12a","-C","extra-filename=-27ca4052d12ff12a","--out-dir","/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps","-L","dependency=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps","--extern","futures_core=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_core-dc2dc10a03c101dd.rmeta","--extern","futures_io=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_io-36026efdb683988c.rmeta","--extern","futures_task=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_task-a6d413c0c3f79ee6.rmeta","--extern","memchr=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libmemchr-9e16be613624aed3.rmeta","--extern","pin_project_lite=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libpin_project_lite-ebe1359ab4857c55.rmeta","--extern","pin_utils=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libpin_utils-3d4b175ded57ae39.rmeta","--extern","slab=/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libslab-bacf0ab51eadb58b.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/home/santiago/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/santiago/Repositories/rust-projects/rpm/target/rls/debug/deps/libfutures_util-27ca4052d12ff12a.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[15563163353415573408,14299772629733737558]},"crate_root":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src","external_crates":[{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":18,"id":{"name":"futures_core","disambiguator":[13318321163015562288,17657679851452742453]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[14395563498781816293,16484404266226080499]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","num":20,"id":{"name":"futures_task","disambiguator":[8079879960454074933,8311357395671883503]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[17795592686459414648,1671572751738041638]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","num":22,"id":{"name":"slab","disambiguator":[5112316665163949246,694526784477451998]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","num":23,"id":{"name":"futures_io","disambiguator":[6883483471605741081,11316358335817069113]}},{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[13309440065246054461,9623703849673585728]}}],"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":169},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1182,"byte_end":1187,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1208,"byte_end":1215,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":11835},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12644,"byte_end":12650,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":21},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12710,"byte_end":12719,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":24},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12721,"byte_end":12735,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":27},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12769,"byte_end":12780,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":18,"index":44},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12782,"byte_end":12791,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":20,"index":141},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12817,"byte_end":12826,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":20,"index":107},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12828,"byte_end":12842,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":20,"index":162},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12844,"byte_end":12859,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7298},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":18519,"byte_end":18530,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":6796},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12974,"byte_end":12981,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":6710},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12983,"byte_end":12987,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12989,"byte_end":12998,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7139},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13000,"byte_end":13007,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":6954},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13009,"byte_end":13019,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":6894},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13021,"byte_end":13024,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7004},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13026,"byte_end":13033,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7199},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13035,"byte_end":13045,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7066},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13047,"byte_end":13051,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7247},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13053,"byte_end":13062,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":6844},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13158,"byte_end":13171,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7298},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13220,"byte_end":13231,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13431,"byte_end":13437,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13439,"byte_end":13449,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7634},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13501,"byte_end":13508,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7781},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13510,"byte_end":13517,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7964},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13519,"byte_end":13529,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7903},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13531,"byte_end":13540,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7334},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13542,"byte_end":13552,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8086},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13554,"byte_end":13560,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8025},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13562,"byte_end":13567,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13569,"byte_end":13580,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7842},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13582,"byte_end":13588,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7708},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13594,"byte_end":13600,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13602,"byte_end":13612,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":7583},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13614,"byte_end":13630,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13632,"byte_end":13644,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8221},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13646,"byte_end":13658,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13830,"byte_end":13834,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8279},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13836,"byte_end":13840,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13881,"byte_end":13888,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8285},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13890,"byte_end":13897,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13944,"byte_end":13954,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8291},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":13956,"byte_end":13965,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14020,"byte_end":14034,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8304},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14036,"byte_end":14048,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8322},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14086,"byte_end":14098,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14138,"byte_end":14145,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1032},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14147,"byte_end":14153,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14190,"byte_end":14193,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14195,"byte_end":14197,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14199,"byte_end":14204,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8356},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14206,"byte_end":14211,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14246,"byte_end":14250,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1147},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14252,"byte_end":14257,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14259,"byte_end":14264,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14266,"byte_end":14271,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8458},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14273,"byte_end":14277,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8503},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14279,"byte_end":14284,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8560},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14286,"byte_end":14291,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8629},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14293,"byte_end":14298,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14393,"byte_end":14401,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14403,"byte_end":14410,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14449,"byte_end":14455,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8710},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14457,"byte_end":14463,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14562,"byte_end":14572,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8718},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14574,"byte_end":14583,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14631,"byte_end":14639,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1391},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14641,"byte_end":14650,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1395},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14652,"byte_end":14661,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14663,"byte_end":14672,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8794},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14674,"byte_end":14681,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8839},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14683,"byte_end":14691,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8896},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14693,"byte_end":14701,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":8965},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14703,"byte_end":14711,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14816,"byte_end":14828,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14830,"byte_end":14840,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14887,"byte_end":14897,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":9046},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":14899,"byte_end":14908,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1585},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15005,"byte_end":15014,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":9054},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15016,"byte_end":15024,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":9060},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15062,"byte_end":15068,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":14380},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15206,"byte_end":15215,"line_start":115,"line_end":115,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":14137},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15217,"byte_end":15228,"line_start":115,"line_end":115,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":14133},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15230,"byte_end":15247,"line_start":115,"line_end":115,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":14148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15249,"byte_end":15256,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":14149},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15249,"byte_end":15256,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":9094},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":15312,"byte_end":15321,"line_start":117,"line_end":117,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":2,"index":11835},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11285,"byte_end":11291,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11293,"byte_end":11302,"line_start":303,"line_end":303,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":44},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11304,"byte_end":11313,"line_start":303,"line_end":303,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11315,"byte_end":11327,"line_start":303,"line_end":303,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":90},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141534,"byte_end":141543,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":18,"index":93},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141545,"byte_end":141559,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":18,"index":110},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141593,"byte_end":141604,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":18,"index":96},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141606,"byte_end":141612,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":18,"index":127},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141614,"byte_end":141623,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10612},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":149453,"byte_end":149459,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1759}},{"kind":"Use","ref_id":{"krate":0,"index":10660},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":149636,"byte_end":149647,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1759}},{"kind":"Use","ref_id":{"krate":0,"index":10951},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":150988,"byte_end":150999,"line_start":206,"line_end":206,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1759}},{"kind":"Use","ref_id":{"krate":0,"index":9119},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141739,"byte_end":141744,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9168},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141746,"byte_end":141753,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9277},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141755,"byte_end":141761,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9317},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141763,"byte_end":141768,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9357},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141770,"byte_end":141779,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9396},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141781,"byte_end":141787,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9461},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141789,"byte_end":141798,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9928},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141800,"byte_end":141807,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9577},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141809,"byte_end":141816,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9630},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141818,"byte_end":141822,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9699},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141824,"byte_end":141831,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9761},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141837,"byte_end":141841,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9809},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141843,"byte_end":141850,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9875},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141852,"byte_end":141855,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10007},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141857,"byte_end":141861,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10108},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141863,"byte_end":141869,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10157},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141871,"byte_end":141879,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10067},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141881,"byte_end":141885,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10028},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141887,"byte_end":141895,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10703},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141897,"byte_end":141901,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10015},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141903,"byte_end":141917,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10211},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141919,"byte_end":141923,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10250},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141929,"byte_end":141938,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141940,"byte_end":141949,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9800},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141951,"byte_end":141963,"line_start":23,"line_end":23,"column_start":27,"column_end":39},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10324},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141965,"byte_end":141969,"line_start":23,"line_end":23,"column_start":41,"column_end":45},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10432},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141971,"byte_end":141980,"line_start":23,"line_end":23,"column_start":47,"column_end":56},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10363},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141982,"byte_end":141991,"line_start":23,"line_end":23,"column_start":58,"column_end":67},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10489},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141993,"byte_end":141997,"line_start":23,"line_end":23,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":9219},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141999,"byte_end":142004,"line_start":23,"line_end":23,"column_start":75,"column_end":80},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10557},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142006,"byte_end":142009,"line_start":23,"line_end":23,"column_start":82,"column_end":85},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10951},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142061,"byte_end":142072,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10612},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142123,"byte_end":142129,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10660},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142180,"byte_end":142191,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14767},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142383,"byte_end":142398,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14726},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142400,"byte_end":142408,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14665},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142410,"byte_end":142427,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12266},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":276906,"byte_end":276919,"line_start":140,"line_end":140,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":3467}},{"kind":"Use","ref_id":{"krate":0,"index":4111},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142676,"byte_end":142686,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":10990},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142688,"byte_end":142695,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11054},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142697,"byte_end":142704,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11192},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142706,"byte_end":142716,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11123},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142718,"byte_end":142727,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11263},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142729,"byte_end":142739,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11370},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142741,"byte_end":142747,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11301},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142749,"byte_end":142754,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11436},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142756,"byte_end":142762,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11739},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142768,"byte_end":142778,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11786},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142780,"byte_end":142789,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11562},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142791,"byte_end":142800,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11627},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142802,"byte_end":142814,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11693},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142816,"byte_end":142826,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11821},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142828,"byte_end":142835,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11505},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142837,"byte_end":142847,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11497},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142849,"byte_end":142856,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11947},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142862,"byte_end":142874,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142876,"byte_end":142888,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12016},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142890,"byte_end":142902,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":11890},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":142904,"byte_end":142913,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12266},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143038,"byte_end":143051,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14626},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143142,"byte_end":143160,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14582},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143162,"byte_end":143173,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14516},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143175,"byte_end":143195,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143252,"byte_end":143256,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12285},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143258,"byte_end":143262,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4497},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143301,"byte_end":143307,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12294},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143309,"byte_end":143315,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4550},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143364,"byte_end":143375,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12303},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143377,"byte_end":143387,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4584},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143424,"byte_end":143429,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12312},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143431,"byte_end":143436,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4636},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143471,"byte_end":143475,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12323},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143477,"byte_end":143481,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4680},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143522,"byte_end":143529,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12354},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143531,"byte_end":143538,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4730},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143579,"byte_end":143586,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4722},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143588,"byte_end":143594,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4776},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143633,"byte_end":143639,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12367},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143641,"byte_end":143647,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":4841},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143686,"byte_end":143692,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12413},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143694,"byte_end":143700,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":12536},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143849,"byte_end":143863,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":13178},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720669,"byte_end":10720677,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13169},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720679,"byte_end":10720683,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13170},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720679,"byte_end":10720683,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13149},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720685,"byte_end":10720692,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13150},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720685,"byte_end":10720692,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13139},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720694,"byte_end":10720704,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":13158},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720706,"byte_end":10720716,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":12576}},{"kind":"Use","ref_id":{"krate":0,"index":12890},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144013,"byte_end":144029,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":13050},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144147,"byte_end":144157,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14443},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144159,"byte_end":144168,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14380},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144282,"byte_end":144291,"line_start":114,"line_end":114,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14137},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144293,"byte_end":144304,"line_start":114,"line_end":114,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14133},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144306,"byte_end":144323,"line_start":114,"line_end":114,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144325,"byte_end":144332,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":14149},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144325,"byte_end":144332,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":0,"index":13121},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144388,"byte_end":144397,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1741}},{"kind":"Use","ref_id":{"krate":18,"index":96},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11386,"byte_end":11392,"line_start":307,"line_end":307,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11394,"byte_end":11403,"line_start":307,"line_end":307,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":127},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11405,"byte_end":11414,"line_start":307,"line_end":307,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11416,"byte_end":11428,"line_start":307,"line_end":307,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12072},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366966,"byte_end":366973,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":2,"index":39984},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366975,"byte_end":366979,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":2,"index":40020},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366981,"byte_end":366989,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":2,"index":40029},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366991,"byte_end":367005,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":2,"index":12082},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367007,"byte_end":367012,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":141},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367039,"byte_end":367048,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":107},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367050,"byte_end":367064,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":19},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367066,"byte_end":367076,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":16},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367078,"byte_end":367083,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":22},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367085,"byte_end":367095,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":162},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367097,"byte_end":367112,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":282},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367138,"byte_end":367148,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":283},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367196,"byte_end":367210,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":327},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367294,"byte_end":367301,"line_start":24,"line_end":24,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":355},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367360,"byte_end":367365,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":403},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367425,"byte_end":367434,"line_start":30,"line_end":30,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":20,"index":412},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367436,"byte_end":367444,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":18,"index":194},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367492,"byte_end":367503,"line_start":32,"line_end":32,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":0,"index":4960},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367541,"byte_end":367554,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":0,"index":4957},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":367556,"byte_end":367564,"line_start":36,"line_end":36,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4887}},{"kind":"Use","ref_id":{"krate":1,"index":3733},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375581,"byte_end":375586,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":1,"index":9436},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375588,"byte_end":375597,"line_start":33,"line_end":33,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":1,"index":9495},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375599,"byte_end":375606,"line_start":33,"line_end":33,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":1,"index":4266},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375608,"byte_end":375618,"line_start":33,"line_end":33,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":1,"index":3731},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375620,"byte_end":375626,"line_start":33,"line_end":33,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":1,"index":9509},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375628,"byte_end":375636,"line_start":33,"line_end":33,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":23,"index":49},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375661,"byte_end":375673,"line_start":35,"line_end":35,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":23,"index":39},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375675,"byte_end":375684,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":23,"index":47},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375686,"byte_end":375695,"line_start":35,"line_end":35,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":23,"index":42},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375697,"byte_end":375707,"line_start":35,"line_end":35,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13201},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376305,"byte_end":376315,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13234},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376360,"byte_end":376369,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13287},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376414,"byte_end":376423,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13336},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376458,"byte_end":376463,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13385},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376498,"byte_end":376503,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5394},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376537,"byte_end":376541,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13402},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376543,"byte_end":376547,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5439},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376590,"byte_end":376598,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13456},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376600,"byte_end":376607,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13509},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376645,"byte_end":376651,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5543},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376687,"byte_end":376692,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5541},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376694,"byte_end":376699,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13537},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376741,"byte_end":376748,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13545},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":376783,"byte_end":376788,"line_start":86,"line_end":86,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13558},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377020,"byte_end":377025,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13601},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377058,"byte_end":377062,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13610},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377113,"byte_end":377125,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13619},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377170,"byte_end":377179,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13628},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377222,"byte_end":377230,"line_start":108,"line_end":108,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13639},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377277,"byte_end":377286,"line_start":111,"line_end":111,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13649},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377339,"byte_end":377351,"line_start":114,"line_end":114,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13660},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377396,"byte_end":377405,"line_start":117,"line_end":117,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5993},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377443,"byte_end":377449,"line_start":120,"line_end":120,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":5991},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377451,"byte_end":377457,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13671},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377491,"byte_end":377495,"line_start":123,"line_end":123,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":6069},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377529,"byte_end":377533,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":6067},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377535,"byte_end":377539,"line_start":126,"line_end":126,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13680},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377576,"byte_end":377584,"line_start":129,"line_end":129,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":6151},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377586,"byte_end":377598,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":6152},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377586,"byte_end":377598,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13686},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377600,"byte_end":377609,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13697},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377643,"byte_end":377647,"line_start":132,"line_end":132,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13736},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377684,"byte_end":377690,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13743},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377725,"byte_end":377730,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13752},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377783,"byte_end":377796,"line_start":141,"line_end":141,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":0,"index":13761},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":377839,"byte_end":377847,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":4972}},{"kind":"Use","ref_id":{"krate":23,"index":49},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11915,"byte_end":11927,"line_start":332,"line_end":332,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6392},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11929,"byte_end":11944,"line_start":332,"line_end":332,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":39},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11946,"byte_end":11955,"line_start":332,"line_end":332,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6359},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11957,"byte_end":11969,"line_start":332,"line_end":332,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":47},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11971,"byte_end":11980,"line_start":332,"line_end":332,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6387},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11982,"byte_end":11994,"line_start":332,"line_end":332,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":42},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11996,"byte_end":12006,"line_start":332,"line_end":332,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6376},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12012,"byte_end":12025,"line_start":333,"line_end":333,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13903},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472587,"byte_end":472603,"line_start":10,"line_end":10,"column_start":27,"column_end":43},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":6431}},{"kind":"Use","ref_id":{"krate":0,"index":13824},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472605,"byte_end":472610,"line_start":10,"line_end":10,"column_start":45,"column_end":50},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6431}},{"kind":"Use","ref_id":{"krate":0,"index":13861},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472612,"byte_end":472627,"line_start":10,"line_end":10,"column_start":52,"column_end":67},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":6431}},{"kind":"Use","ref_id":{"krate":0,"index":13880},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472629,"byte_end":472639,"line_start":10,"line_end":10,"column_start":69,"column_end":79},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6431}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":18},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4878},{"krate":0,"index":4881},{"krate":0,"index":4884},{"krate":0,"index":4887},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6410},{"krate":0,"index":6413},{"krate":0,"index":6416},{"krate":0,"index":6419},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6431},{"krate":0,"index":14071},{"krate":0,"index":6432},{"krate":0,"index":6646}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":313,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":569,"byte_end":590,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1722},{"krate":0,"index":9077},{"krate":0,"index":9096},{"krate":0,"index":9097},{"krate":0,"index":9100},{"krate":0,"index":9103},{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9109},{"krate":0,"index":1725}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12177,"byte_end":12201,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12202,"byte_end":12205,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12206,"byte_end":12231,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12232,"byte_end":12235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12236,"byte_end":12263,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12264,"byte_end":12343,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12344,"byte_end":12381,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12382,"byte_end":12461,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12462,"byte_end":12537,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":12538,"byte_end":12602,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":6665},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35846,"byte_end":35851,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":6662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6667},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35880,"byte_end":35886,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":6662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6669},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35915,"byte_end":35920,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":6662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6662},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35816,"byte_end":35823,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":6665},{"krate":0,"index":6667},{"krate":0,"index":6669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6710},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40277,"byte_end":40281,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6712}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42100,"byte_end":42110,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40478,"byte_end":40546,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40551,"byte_end":40554,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40559,"byte_end":40627,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40632,"byte_end":40677,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40682,"byte_end":40685,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40690,"byte_end":40704,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40709,"byte_end":40712,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40717,"byte_end":40724,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40729,"byte_end":40770,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40775,"byte_end":40806,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40811,"byte_end":40867,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40872,"byte_end":40896,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40901,"byte_end":40936,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40941,"byte_end":40966,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40971,"byte_end":40974,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40979,"byte_end":41028,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41033,"byte_end":41036,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41041,"byte_end":41083,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41088,"byte_end":41127,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41132,"byte_end":41171,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41176,"byte_end":41193,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41198,"byte_end":41201,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41206,"byte_end":41276,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41281,"byte_end":41320,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41325,"byte_end":41366,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41371,"byte_end":41397,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41402,"byte_end":41405,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41410,"byte_end":41420,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41425,"byte_end":41442,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41447,"byte_end":41481,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41486,"byte_end":41533,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41538,"byte_end":41587,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41592,"byte_end":41654,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41659,"byte_end":41683,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41688,"byte_end":41731,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41736,"byte_end":41793,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41798,"byte_end":41873,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41878,"byte_end":41908,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41913,"byte_end":41930,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41935,"byte_end":41949,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":41954,"byte_end":42038,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42043,"byte_end":42052,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42057,"byte_end":42062,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42067,"byte_end":42076,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42081,"byte_end":42088,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6748},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43168,"byte_end":43178,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":6745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6751},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43262,"byte_end":43270,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":6745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6745},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43146,"byte_end":43149,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6751}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10583877,"byte_end":10583886,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6796},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16272,"byte_end":16279,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6798}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6844},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16530,"byte_end":16543,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":6846}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6894},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":16883,"byte_end":16886,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6897}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6954},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17093,"byte_end":17103,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":6956}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7004},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17309,"byte_end":17316,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":7007}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7066},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17509,"byte_end":17513,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":7070}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7139},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":17758,"byte_end":17765,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7142}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7199},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":18006,"byte_end":18016,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":7201}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7247},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":18229,"byte_end":18238,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":7249}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7298},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":44866,"byte_end":44877,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":7300}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":45880,"byte_end":45886,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":45737,"byte_end":45800,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":45801,"byte_end":45868,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46260,"byte_end":46270,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46171,"byte_end":46248,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48372,"byte_end":48376,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48103,"byte_end":48177,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48182,"byte_end":48255,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48260,"byte_end":48328,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48333,"byte_end":48360,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48871,"byte_end":48880,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48728,"byte_end":48781,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48786,"byte_end":48789,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48794,"byte_end":48859,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49474,"byte_end":49486,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49062,"byte_end":49120,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49125,"byte_end":49128,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49133,"byte_end":49198,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49203,"byte_end":49206,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49211,"byte_end":49223,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49228,"byte_end":49231,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49236,"byte_end":49329,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49334,"byte_end":49428,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49433,"byte_end":49462,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49994,"byte_end":50004,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49586,"byte_end":49642,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49647,"byte_end":49650,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49655,"byte_end":49720,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49725,"byte_end":49728,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49733,"byte_end":49745,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49750,"byte_end":49753,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49758,"byte_end":49851,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49856,"byte_end":49948,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":49953,"byte_end":49982,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56454,"byte_end":56461,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56264,"byte_end":56326,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56331,"byte_end":56334,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56339,"byte_end":56419,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56424,"byte_end":56442,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19220,"byte_end":19229,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19121,"byte_end":19195,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19196,"byte_end":19209,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20061,"byte_end":20064,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19244,"byte_end":19319,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19324,"byte_end":19347,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19352,"byte_end":19355,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19360,"byte_end":19434,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19439,"byte_end":19510,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19515,"byte_end":19577,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19582,"byte_end":19585,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19590,"byte_end":19661,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19666,"byte_end":19737,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19742,"byte_end":19763,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19768,"byte_end":19771,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19776,"byte_end":19790,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19795,"byte_end":19798,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19803,"byte_end":19810,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19815,"byte_end":19856,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19861,"byte_end":19896,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19901,"byte_end":19904,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19909,"byte_end":19938,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19943,"byte_end":19986,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19991,"byte_end":20027,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20032,"byte_end":20041,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20046,"byte_end":20053,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20461,"byte_end":20469,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20234,"byte_end":20309,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20314,"byte_end":20337,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20342,"byte_end":20345,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20350,"byte_end":20428,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20433,"byte_end":20453,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21481,"byte_end":21485,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20628,"byte_end":20704,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20709,"byte_end":20752,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20757,"byte_end":20760,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20765,"byte_end":20836,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20841,"byte_end":20915,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20920,"byte_end":20936,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20941,"byte_end":20944,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":20949,"byte_end":21024,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21029,"byte_end":21040,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21045,"byte_end":21048,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21053,"byte_end":21124,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21129,"byte_end":21155,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21160,"byte_end":21163,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21168,"byte_end":21182,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21187,"byte_end":21190,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21195,"byte_end":21202,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21207,"byte_end":21248,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21253,"byte_end":21288,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21293,"byte_end":21296,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21301,"byte_end":21335,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21340,"byte_end":21405,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21410,"byte_end":21447,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21452,"byte_end":21461,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21466,"byte_end":21473,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22355,"byte_end":22366,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21697,"byte_end":21772,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21777,"byte_end":21798,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21803,"byte_end":21806,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21811,"byte_end":21891,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21896,"byte_end":21968,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21973,"byte_end":21976,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":21981,"byte_end":21995,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22000,"byte_end":22003,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22008,"byte_end":22015,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22020,"byte_end":22061,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22066,"byte_end":22101,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22106,"byte_end":22109,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22114,"byte_end":22128,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22133,"byte_end":22161,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22166,"byte_end":22202,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22207,"byte_end":22219,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22224,"byte_end":22262,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22267,"byte_end":22273,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22278,"byte_end":22281,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22286,"byte_end":22321,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22326,"byte_end":22335,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22340,"byte_end":22347,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23205,"byte_end":23217,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22546,"byte_end":22622,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22627,"byte_end":22648,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22653,"byte_end":22656,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22661,"byte_end":22740,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22745,"byte_end":22817,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22822,"byte_end":22825,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22830,"byte_end":22844,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22849,"byte_end":22852,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22857,"byte_end":22864,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22869,"byte_end":22910,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22915,"byte_end":22950,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22955,"byte_end":22958,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22963,"byte_end":22977,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":22982,"byte_end":23010,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23015,"byte_end":23051,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23056,"byte_end":23068,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23073,"byte_end":23111,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23116,"byte_end":23122,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23127,"byte_end":23130,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23135,"byte_end":23171,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23176,"byte_end":23185,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23190,"byte_end":23197,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23996,"byte_end":24007,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23398,"byte_end":23451,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23456,"byte_end":23459,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23464,"byte_end":23538,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23543,"byte_end":23606,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23611,"byte_end":23614,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23619,"byte_end":23633,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23638,"byte_end":23641,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23646,"byte_end":23653,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23658,"byte_end":23699,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23704,"byte_end":23739,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23744,"byte_end":23779,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23784,"byte_end":23787,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23792,"byte_end":23822,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23827,"byte_end":23865,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23870,"byte_end":23921,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23926,"byte_end":23962,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23967,"byte_end":23976,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":23981,"byte_end":23988,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24872,"byte_end":24879,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24146,"byte_end":24210,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24215,"byte_end":24251,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24256,"byte_end":24259,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24264,"byte_end":24333,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24338,"byte_end":24375,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24380,"byte_end":24383,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24388,"byte_end":24448,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24453,"byte_end":24456,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24461,"byte_end":24532,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24537,"byte_end":24563,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24568,"byte_end":24571,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24576,"byte_end":24590,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24595,"byte_end":24598,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24603,"byte_end":24610,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24615,"byte_end":24656,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24661,"byte_end":24696,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24701,"byte_end":24704,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24709,"byte_end":24755,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24760,"byte_end":24801,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24806,"byte_end":24838,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24843,"byte_end":24852,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":24857,"byte_end":24864,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25984,"byte_end":25998,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25093,"byte_end":25168,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25173,"byte_end":25196,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25201,"byte_end":25204,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25209,"byte_end":25281,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25286,"byte_end":25359,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25364,"byte_end":25378,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25383,"byte_end":25386,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25391,"byte_end":25461,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25466,"byte_end":25484,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25489,"byte_end":25492,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25497,"byte_end":25511,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25516,"byte_end":25519,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25524,"byte_end":25531,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25536,"byte_end":25577,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25582,"byte_end":25617,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25622,"byte_end":25665,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25670,"byte_end":25673,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25678,"byte_end":25718,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25723,"byte_end":25789,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25794,"byte_end":25797,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25802,"byte_end":25855,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25860,"byte_end":25906,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25911,"byte_end":25950,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25955,"byte_end":25964,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":25969,"byte_end":25976,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27086,"byte_end":27090,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26191,"byte_end":26264,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26269,"byte_end":26335,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26340,"byte_end":26358,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26363,"byte_end":26366,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26371,"byte_end":26438,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26443,"byte_end":26508,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26513,"byte_end":26585,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26590,"byte_end":26664,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26669,"byte_end":26695,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26700,"byte_end":26703,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26708,"byte_end":26779,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26784,"byte_end":26859,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26864,"byte_end":26918,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26923,"byte_end":26926,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":26931,"byte_end":27005,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27010,"byte_end":27078,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27930,"byte_end":27937,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27236,"byte_end":27302,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27307,"byte_end":27310,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27315,"byte_end":27390,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27395,"byte_end":27468,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27473,"byte_end":27542,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27547,"byte_end":27597,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27602,"byte_end":27605,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27610,"byte_end":27624,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27629,"byte_end":27632,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27637,"byte_end":27644,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27649,"byte_end":27690,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27695,"byte_end":27730,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27735,"byte_end":27738,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27743,"byte_end":27772,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27777,"byte_end":27855,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27860,"byte_end":27896,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27901,"byte_end":27910,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":27915,"byte_end":27922,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29475,"byte_end":29487,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28119,"byte_end":28173,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28178,"byte_end":28181,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28186,"byte_end":28261,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28266,"byte_end":28340,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28345,"byte_end":28419,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28424,"byte_end":28475,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28480,"byte_end":28483,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28488,"byte_end":28563,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28568,"byte_end":28638,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28643,"byte_end":28710,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28715,"byte_end":28790,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28795,"byte_end":28867,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28872,"byte_end":28875,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28880,"byte_end":28944,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":28949,"byte_end":29006,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29011,"byte_end":29014,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29019,"byte_end":29033,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29038,"byte_end":29041,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29046,"byte_end":29053,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29058,"byte_end":29099,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29104,"byte_end":29154,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29159,"byte_end":29162,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29167,"byte_end":29201,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29206,"byte_end":29255,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29260,"byte_end":29263,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29268,"byte_end":29317,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29322,"byte_end":29346,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29351,"byte_end":29358,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29363,"byte_end":29413,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29418,"byte_end":29427,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29432,"byte_end":29439,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29444,"byte_end":29467,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31239,"byte_end":31245,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29717,"byte_end":29792,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29797,"byte_end":29820,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29825,"byte_end":29828,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29833,"byte_end":29907,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29912,"byte_end":29985,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":29990,"byte_end":30002,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30007,"byte_end":30010,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30015,"byte_end":30079,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30084,"byte_end":30141,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30146,"byte_end":30149,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30154,"byte_end":30168,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30173,"byte_end":30176,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30181,"byte_end":30188,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30193,"byte_end":30234,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30239,"byte_end":30274,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30279,"byte_end":30282,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30287,"byte_end":30316,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30321,"byte_end":30355,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30360,"byte_end":30394,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30399,"byte_end":30402,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30407,"byte_end":30440,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30445,"byte_end":30478,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30483,"byte_end":30492,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30497,"byte_end":30504,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30509,"byte_end":30512,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30517,"byte_end":30524,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30529,"byte_end":30598,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30603,"byte_end":30678,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30683,"byte_end":30714,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30719,"byte_end":30722,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30727,"byte_end":30768,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30773,"byte_end":30808,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30813,"byte_end":30849,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30854,"byte_end":30874,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30879,"byte_end":30882,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30887,"byte_end":30916,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30921,"byte_end":30955,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30960,"byte_end":30994,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":30999,"byte_end":31044,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31049,"byte_end":31090,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31095,"byte_end":31102,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31107,"byte_end":31140,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31145,"byte_end":31177,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31182,"byte_end":31191,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31196,"byte_end":31203,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":31208,"byte_end":31231,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32407,"byte_end":32412,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32178,"byte_end":32219,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32872,"byte_end":32883,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32571,"byte_end":32612,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32617,"byte_end":32620,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32625,"byte_end":32684,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32689,"byte_end":32692,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32697,"byte_end":32772,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32777,"byte_end":32834,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":32839,"byte_end":32864,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33173,"byte_end":33183,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33040,"byte_end":33089,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33094,"byte_end":33165,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33468,"byte_end":33479,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33332,"byte_end":33381,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33386,"byte_end":33460,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33710,"byte_end":33720,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33633,"byte_end":33702,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35116,"byte_end":35128,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33856,"byte_end":33928,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":33933,"byte_end":33996,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34001,"byte_end":34004,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34009,"byte_end":34075,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34080,"byte_end":34083,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34088,"byte_end":34161,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34166,"byte_end":34235,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34240,"byte_end":34310,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34315,"byte_end":34318,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34323,"byte_end":34337,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34342,"byte_end":34345,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34350,"byte_end":34357,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34362,"byte_end":34392,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34397,"byte_end":34447,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34452,"byte_end":34491,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34496,"byte_end":34547,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34552,"byte_end":34555,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34560,"byte_end":34620,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34625,"byte_end":34677,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34682,"byte_end":34689,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34694,"byte_end":34697,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34702,"byte_end":34771,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34776,"byte_end":34849,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34854,"byte_end":34886,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34891,"byte_end":34894,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34899,"byte_end":34906,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34911,"byte_end":34958,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":34963,"byte_end":35002,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35007,"byte_end":35010,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35015,"byte_end":35096,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":35101,"byte_end":35108,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7334},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78605,"byte_end":78615,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":7336}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":7372},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79589,"byte_end":79594,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":7369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7374},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79623,"byte_end":79629,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":7369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7376},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79658,"byte_end":79663,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":7369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7369},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79556,"byte_end":79566,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7372},{"krate":0,"index":7374},{"krate":0,"index":7376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7419},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84532,"byte_end":84537,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":7416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7421},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84566,"byte_end":84572,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":7416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7423},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84601,"byte_end":84606,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":7416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7416},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84496,"byte_end":84509,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7419},{"krate":0,"index":7421},{"krate":0,"index":7423}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57440,"byte_end":57450,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7465}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57698,"byte_end":57711,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":7526}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7583},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":57979,"byte_end":57995,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":7585}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7634},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58583,"byte_end":58590,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":7638}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7708},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":58830,"byte_end":58836,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7712}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7781},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59086,"byte_end":59093,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":7784}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7842},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59301,"byte_end":59307,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":7845}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7903},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59526,"byte_end":59535,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7906}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7964},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":59807,"byte_end":59817,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7967}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8025},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60190,"byte_end":60195,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8028}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8086},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60436,"byte_end":60442,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8089}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60699,"byte_end":60710,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":8152}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8221},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":60994,"byte_end":61006,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":8224}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":716},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61296,"byte_end":61308,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61232,"byte_end":61285,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64068,"byte_end":64074,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62696,"byte_end":62754,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62759,"byte_end":62762,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62767,"byte_end":62842,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62847,"byte_end":62917,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":62922,"byte_end":62995,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63000,"byte_end":63029,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63034,"byte_end":63037,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63042,"byte_end":63117,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63122,"byte_end":63197,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63202,"byte_end":63249,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63254,"byte_end":63257,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63262,"byte_end":63337,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63342,"byte_end":63368,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63373,"byte_end":63376,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63381,"byte_end":63395,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63400,"byte_end":63403,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63408,"byte_end":63415,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63420,"byte_end":63458,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63463,"byte_end":63466,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63471,"byte_end":63512,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63517,"byte_end":63562,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63567,"byte_end":63609,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63614,"byte_end":63650,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63655,"byte_end":63664,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63669,"byte_end":63676,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63681,"byte_end":63684,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63689,"byte_end":63761,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63766,"byte_end":63777,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63782,"byte_end":63785,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63790,"byte_end":63797,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63802,"byte_end":63840,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63845,"byte_end":63848,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63853,"byte_end":63894,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63899,"byte_end":63945,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63950,"byte_end":63992,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":63997,"byte_end":64034,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64039,"byte_end":64048,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64053,"byte_end":64060,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65633,"byte_end":65647,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64265,"byte_end":64382,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64387,"byte_end":64390,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64395,"byte_end":64517,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64522,"byte_end":64572,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64577,"byte_end":64580,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64585,"byte_end":64660,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64665,"byte_end":64740,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64745,"byte_end":64792,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64797,"byte_end":64800,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64805,"byte_end":64880,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64885,"byte_end":64960,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":64965,"byte_end":65012,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65017,"byte_end":65020,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65025,"byte_end":65100,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65105,"byte_end":65131,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65136,"byte_end":65139,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65144,"byte_end":65158,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65163,"byte_end":65166,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65171,"byte_end":65178,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65183,"byte_end":65221,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65226,"byte_end":65229,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65234,"byte_end":65275,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65280,"byte_end":65325,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65330,"byte_end":65391,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65396,"byte_end":65428,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65433,"byte_end":65436,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65441,"byte_end":65487,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65492,"byte_end":65553,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65558,"byte_end":65591,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65596,"byte_end":65605,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65610,"byte_end":65617,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65622,"byte_end":65625,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67330,"byte_end":67337,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65881,"byte_end":65937,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65942,"byte_end":65945,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":65950,"byte_end":66024,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66029,"byte_end":66090,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66095,"byte_end":66165,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66170,"byte_end":66245,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66250,"byte_end":66285,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66290,"byte_end":66293,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66298,"byte_end":66373,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66378,"byte_end":66453,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66458,"byte_end":66505,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66510,"byte_end":66513,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66518,"byte_end":66593,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66598,"byte_end":66624,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66629,"byte_end":66632,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66637,"byte_end":66651,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66656,"byte_end":66659,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66664,"byte_end":66671,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66676,"byte_end":66714,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66719,"byte_end":66722,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66727,"byte_end":66768,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66773,"byte_end":66819,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66824,"byte_end":66867,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66872,"byte_end":66909,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66914,"byte_end":66923,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66928,"byte_end":66935,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66940,"byte_end":66943,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":66948,"byte_end":67021,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67026,"byte_end":67040,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67045,"byte_end":67048,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67053,"byte_end":67060,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67065,"byte_end":67103,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67108,"byte_end":67111,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67116,"byte_end":67157,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67162,"byte_end":67207,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67212,"byte_end":67255,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67260,"byte_end":67296,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67301,"byte_end":67310,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67315,"byte_end":67322,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68427,"byte_end":68435,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67530,"byte_end":67600,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67605,"byte_end":67654,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67659,"byte_end":67662,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67667,"byte_end":67730,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67735,"byte_end":67803,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67808,"byte_end":67881,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67886,"byte_end":67962,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":67967,"byte_end":68012,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68017,"byte_end":68020,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68025,"byte_end":68100,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68105,"byte_end":68131,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68136,"byte_end":68139,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68144,"byte_end":68158,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68163,"byte_end":68166,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68171,"byte_end":68178,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68183,"byte_end":68221,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68226,"byte_end":68229,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68234,"byte_end":68275,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68280,"byte_end":68331,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68336,"byte_end":68393,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68398,"byte_end":68407,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68412,"byte_end":68419,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68731,"byte_end":68738,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68611,"byte_end":68669,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68674,"byte_end":68723,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70293,"byte_end":70301,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68912,"byte_end":68981,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":68986,"byte_end":69060,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69065,"byte_end":69068,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69073,"byte_end":69148,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69153,"byte_end":69223,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69228,"byte_end":69293,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69298,"byte_end":69364,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69369,"byte_end":69403,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69408,"byte_end":69411,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69416,"byte_end":69491,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69496,"byte_end":69522,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69527,"byte_end":69530,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69535,"byte_end":69549,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69554,"byte_end":69557,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69562,"byte_end":69569,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69574,"byte_end":69612,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69617,"byte_end":69620,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69625,"byte_end":69666,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69671,"byte_end":69716,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69721,"byte_end":69796,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69801,"byte_end":69837,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69842,"byte_end":69851,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69856,"byte_end":69863,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69868,"byte_end":69871,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69876,"byte_end":69952,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69957,"byte_end":69968,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69973,"byte_end":69976,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69981,"byte_end":69988,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":69993,"byte_end":70031,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70036,"byte_end":70039,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70044,"byte_end":70085,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70090,"byte_end":70136,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70141,"byte_end":70217,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70222,"byte_end":70259,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70264,"byte_end":70273,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70278,"byte_end":70285,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71922,"byte_end":71929,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70555,"byte_end":70620,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70625,"byte_end":70697,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70702,"byte_end":70705,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70710,"byte_end":70785,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70790,"byte_end":70860,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70865,"byte_end":70930,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":70935,"byte_end":71011,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71016,"byte_end":71034,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71039,"byte_end":71042,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71047,"byte_end":71122,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71127,"byte_end":71153,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71158,"byte_end":71161,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71166,"byte_end":71180,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71185,"byte_end":71188,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71193,"byte_end":71200,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71205,"byte_end":71243,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71248,"byte_end":71251,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71256,"byte_end":71297,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71302,"byte_end":71348,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71353,"byte_end":71428,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71433,"byte_end":71470,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71475,"byte_end":71484,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71489,"byte_end":71496,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71501,"byte_end":71504,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71509,"byte_end":71582,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71587,"byte_end":71601,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71606,"byte_end":71609,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71614,"byte_end":71621,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71626,"byte_end":71664,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71669,"byte_end":71672,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71677,"byte_end":71718,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71723,"byte_end":71768,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71773,"byte_end":71847,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71852,"byte_end":71888,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71893,"byte_end":71902,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":71907,"byte_end":71914,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72905,"byte_end":72915,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72178,"byte_end":72251,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72256,"byte_end":72259,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72264,"byte_end":72339,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72344,"byte_end":72417,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72422,"byte_end":72491,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72496,"byte_end":72549,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72554,"byte_end":72557,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72562,"byte_end":72576,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72581,"byte_end":72584,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72589,"byte_end":72596,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72601,"byte_end":72642,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72647,"byte_end":72685,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72690,"byte_end":72693,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72698,"byte_end":72740,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72745,"byte_end":72826,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72831,"byte_end":72871,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72876,"byte_end":72885,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":72890,"byte_end":72897,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73841,"byte_end":73852,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73114,"byte_end":73185,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73190,"byte_end":73193,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73198,"byte_end":73273,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73278,"byte_end":73351,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73356,"byte_end":73425,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73430,"byte_end":73484,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73489,"byte_end":73492,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73497,"byte_end":73511,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73516,"byte_end":73519,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73524,"byte_end":73531,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73536,"byte_end":73577,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73582,"byte_end":73620,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73625,"byte_end":73628,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73633,"byte_end":73676,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73681,"byte_end":73761,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73766,"byte_end":73807,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73812,"byte_end":73821,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":73826,"byte_end":73833,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74237,"byte_end":74248,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74056,"byte_end":74131,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74136,"byte_end":74165,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74170,"byte_end":74173,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74178,"byte_end":74229,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75427,"byte_end":75445,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74483,"byte_end":74558,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74563,"byte_end":74586,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74591,"byte_end":74594,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74599,"byte_end":74671,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74676,"byte_end":74749,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74754,"byte_end":74768,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74773,"byte_end":74776,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74781,"byte_end":74851,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74856,"byte_end":74874,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74879,"byte_end":74882,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74887,"byte_end":74901,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74906,"byte_end":74909,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74914,"byte_end":74921,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74926,"byte_end":74967,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":74972,"byte_end":75010,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75015,"byte_end":75061,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75066,"byte_end":75069,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75074,"byte_end":75134,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75139,"byte_end":75218,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75223,"byte_end":75226,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75231,"byte_end":75288,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75293,"byte_end":75345,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75350,"byte_end":75393,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75398,"byte_end":75407,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75412,"byte_end":75419,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76536,"byte_end":76550,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75705,"byte_end":75776,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75781,"byte_end":75818,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75823,"byte_end":75872,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75877,"byte_end":75880,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75885,"byte_end":75954,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":75959,"byte_end":76032,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76037,"byte_end":76107,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76112,"byte_end":76130,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76135,"byte_end":76138,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76143,"byte_end":76211,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76216,"byte_end":76219,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76224,"byte_end":76238,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76243,"byte_end":76246,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76251,"byte_end":76258,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76263,"byte_end":76301,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76306,"byte_end":76309,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76314,"byte_end":76355,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76360,"byte_end":76412,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76417,"byte_end":76464,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76469,"byte_end":76502,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76507,"byte_end":76516,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":76521,"byte_end":76528,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77805,"byte_end":77816,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77104,"byte_end":77157,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77162,"byte_end":77198,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77203,"byte_end":77206,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77211,"byte_end":77260,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77265,"byte_end":77332,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77337,"byte_end":77350,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77355,"byte_end":77358,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77363,"byte_end":77377,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77382,"byte_end":77385,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77390,"byte_end":77397,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77402,"byte_end":77461,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77466,"byte_end":77469,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77474,"byte_end":77493,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77498,"byte_end":77516,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77521,"byte_end":77593,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77598,"byte_end":77630,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77635,"byte_end":77642,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77647,"byte_end":77723,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77728,"byte_end":77731,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77736,"byte_end":77785,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77790,"byte_end":77797,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":78075,"byte_end":78089,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":77972,"byte_end":78045,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":78050,"byte_end":78067,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8279},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86258,"byte_end":86262,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":8281}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86124,"byte_end":86161,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86179,"byte_end":86246,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":813},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86804,"byte_end":86808,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86367,"byte_end":86435,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86436,"byte_end":86439,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86440,"byte_end":86503,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86504,"byte_end":86507,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86508,"byte_end":86522,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86523,"byte_end":86526,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86527,"byte_end":86534,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86535,"byte_end":86576,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86577,"byte_end":86601,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86602,"byte_end":86605,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86606,"byte_end":86638,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86639,"byte_end":86666,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86667,"byte_end":86670,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86671,"byte_end":86708,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86709,"byte_end":86733,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86734,"byte_end":86741,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86742,"byte_end":86778,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86779,"byte_end":86788,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86789,"byte_end":86796,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8285},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87635,"byte_end":87642,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8287}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87496,"byte_end":87538,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87556,"byte_end":87623,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88161,"byte_end":88168,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87783,"byte_end":87863,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87864,"byte_end":87877,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87878,"byte_end":87881,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87882,"byte_end":87944,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87945,"byte_end":87948,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87949,"byte_end":87963,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87964,"byte_end":87967,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87968,"byte_end":87981,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87982,"byte_end":88023,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88024,"byte_end":88048,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88049,"byte_end":88052,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88053,"byte_end":88088,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88089,"byte_end":88115,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88116,"byte_end":88135,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88136,"byte_end":88145,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88146,"byte_end":88153,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8293},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88940,"byte_end":88946,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88905,"byte_end":88935,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8296},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89013,"byte_end":89017,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88970,"byte_end":89008,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8299},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89179,"byte_end":89183,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89036,"byte_end":89102,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89107,"byte_end":89174,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":8291},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88876,"byte_end":88885,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8299}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88754,"byte_end":88791,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88792,"byte_end":88795,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":88796,"byte_end":88849,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":906},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89704,"byte_end":89714,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89243,"byte_end":89280,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89281,"byte_end":89284,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89285,"byte_end":89299,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89300,"byte_end":89303,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89304,"byte_end":89311,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89312,"byte_end":89353,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89354,"byte_end":89378,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89379,"byte_end":89404,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89405,"byte_end":89408,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89409,"byte_end":89458,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89459,"byte_end":89480,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89481,"byte_end":89533,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89534,"byte_end":89569,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89570,"byte_end":89625,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89626,"byte_end":89678,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89679,"byte_end":89688,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89689,"byte_end":89696,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90155,"byte_end":90165,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89857,"byte_end":89942,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89947,"byte_end":90018,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90023,"byte_end":90096,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90101,"byte_end":90129,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90134,"byte_end":90143,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90513,"byte_end":90524,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90393,"byte_end":90459,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90464,"byte_end":90487,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90492,"byte_end":90501,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8306},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92149,"byte_end":92155,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92114,"byte_end":92144,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8309},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92222,"byte_end":92226,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92179,"byte_end":92217,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8312},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92434,"byte_end":92438,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92241,"byte_end":92310,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92315,"byte_end":92385,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92390,"byte_end":92429,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":8304},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92079,"byte_end":92091,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":8306},{"krate":0,"index":8309},{"krate":0,"index":8312}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":91939,"byte_end":91990,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":91991,"byte_end":91994,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":91995,"byte_end":92052,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":958},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92552,"byte_end":92566,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92504,"byte_end":92544,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93053,"byte_end":93063,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92744,"byte_end":92829,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92834,"byte_end":92905,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92910,"byte_end":92994,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92999,"byte_end":93027,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93032,"byte_end":93041,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93413,"byte_end":93424,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93290,"byte_end":93359,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93364,"byte_end":93387,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93392,"byte_end":93401,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8322},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":95635,"byte_end":95647,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":8324}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96662,"byte_end":96668,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1034}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96542,"byte_end":96582,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96583,"byte_end":96650,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1037},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97255,"byte_end":97262,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96719,"byte_end":96790,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96791,"byte_end":96794,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96795,"byte_end":96861,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96862,"byte_end":96865,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96866,"byte_end":96880,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96881,"byte_end":96884,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96885,"byte_end":96892,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96893,"byte_end":96934,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96935,"byte_end":96968,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96969,"byte_end":97008,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97009,"byte_end":97012,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97013,"byte_end":97070,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97071,"byte_end":97114,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97115,"byte_end":97120,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97121,"byte_end":97124,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97125,"byte_end":97166,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97167,"byte_end":97229,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97230,"byte_end":97239,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97240,"byte_end":97247,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8356},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98032,"byte_end":98037,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":97881,"byte_end":97928,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":97953,"byte_end":98020,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98160,"byte_end":98170,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98077,"byte_end":98134,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98139,"byte_end":98148,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98836,"byte_end":98841,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98590,"byte_end":98650,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98651,"byte_end":98654,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98655,"byte_end":98669,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98670,"byte_end":98673,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98674,"byte_end":98681,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98682,"byte_end":98723,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98724,"byte_end":98748,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98749,"byte_end":98752,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98753,"byte_end":98782,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98783,"byte_end":98810,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98811,"byte_end":98820,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98821,"byte_end":98828,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99176,"byte_end":99178,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98910,"byte_end":98977,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98978,"byte_end":98981,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98982,"byte_end":98996,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98997,"byte_end":99000,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99001,"byte_end":99008,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99009,"byte_end":99050,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99051,"byte_end":99075,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99076,"byte_end":99079,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99080,"byte_end":99118,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99119,"byte_end":99150,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99151,"byte_end":99160,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99161,"byte_end":99168,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99509,"byte_end":99512,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99242,"byte_end":99308,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99309,"byte_end":99312,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99313,"byte_end":99327,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99328,"byte_end":99331,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99332,"byte_end":99339,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99340,"byte_end":99381,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99382,"byte_end":99406,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99407,"byte_end":99410,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99411,"byte_end":99450,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99451,"byte_end":99483,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99484,"byte_end":99493,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":99494,"byte_end":99501,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8458},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":101798,"byte_end":101802,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":8461},{"krate":0,"index":8462}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8503},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":101868,"byte_end":101873,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":8507},{"krate":0,"index":8508},{"krate":0,"index":8509}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8560},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":101945,"byte_end":101950,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8629},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102028,"byte_end":102033,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8637},{"krate":0,"index":8638},{"krate":0,"index":8639}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102648,"byte_end":102652,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102071,"byte_end":102142,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102143,"byte_end":102146,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102147,"byte_end":102218,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102219,"byte_end":102294,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102295,"byte_end":102298,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102299,"byte_end":102368,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102369,"byte_end":102395,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102396,"byte_end":102399,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102400,"byte_end":102414,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102415,"byte_end":102418,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102419,"byte_end":102426,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102427,"byte_end":102468,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102469,"byte_end":102493,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102494,"byte_end":102497,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102498,"byte_end":102522,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102523,"byte_end":102547,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102548,"byte_end":102582,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102583,"byte_end":102586,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102587,"byte_end":102622,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102623,"byte_end":102632,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102633,"byte_end":102640,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103198,"byte_end":103203,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102859,"byte_end":102911,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102912,"byte_end":102915,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102916,"byte_end":102930,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102931,"byte_end":102934,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102935,"byte_end":102942,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102943,"byte_end":102984,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":102985,"byte_end":103009,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103010,"byte_end":103013,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103014,"byte_end":103038,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103039,"byte_end":103063,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103064,"byte_end":103088,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103089,"byte_end":103128,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103129,"byte_end":103132,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103133,"byte_end":103172,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103173,"byte_end":103182,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103183,"byte_end":103190,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103865,"byte_end":103870,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103495,"byte_end":103547,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103548,"byte_end":103551,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103552,"byte_end":103566,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103567,"byte_end":103570,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103571,"byte_end":103578,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103579,"byte_end":103620,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103621,"byte_end":103645,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103646,"byte_end":103649,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103650,"byte_end":103674,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103675,"byte_end":103699,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103700,"byte_end":103724,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103725,"byte_end":103749,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103750,"byte_end":103792,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103793,"byte_end":103796,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103797,"byte_end":103839,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103840,"byte_end":103849,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":103850,"byte_end":103857,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104635,"byte_end":104640,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104234,"byte_end":104286,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104287,"byte_end":104290,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104291,"byte_end":104305,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104306,"byte_end":104309,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104310,"byte_end":104317,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104318,"byte_end":104359,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104360,"byte_end":104384,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104385,"byte_end":104388,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104389,"byte_end":104413,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104414,"byte_end":104438,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104439,"byte_end":104463,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104464,"byte_end":104488,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104489,"byte_end":104513,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104514,"byte_end":104559,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104560,"byte_end":104563,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104564,"byte_end":104609,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104610,"byte_end":104619,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":104620,"byte_end":104627,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":105907,"byte_end":105914,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1229}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":105786,"byte_end":105827,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":105828,"byte_end":105895,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1233},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107528,"byte_end":107536,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106221,"byte_end":106301,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106302,"byte_end":106312,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106313,"byte_end":106316,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106317,"byte_end":106396,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106397,"byte_end":106477,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106478,"byte_end":106496,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106497,"byte_end":106500,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106501,"byte_end":106578,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106579,"byte_end":106636,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106637,"byte_end":106640,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106641,"byte_end":106655,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106656,"byte_end":106659,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106660,"byte_end":106735,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106736,"byte_end":106784,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106785,"byte_end":106862,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106863,"byte_end":106933,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106934,"byte_end":106937,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106938,"byte_end":107007,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107008,"byte_end":107011,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107012,"byte_end":107080,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107081,"byte_end":107084,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107085,"byte_end":107162,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107163,"byte_end":107244,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107245,"byte_end":107248,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107249,"byte_end":107263,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107264,"byte_end":107267,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107268,"byte_end":107275,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107276,"byte_end":107317,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107318,"byte_end":107352,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107353,"byte_end":107356,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107357,"byte_end":107394,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107395,"byte_end":107398,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107399,"byte_end":107446,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107447,"byte_end":107450,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107451,"byte_end":107502,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107503,"byte_end":107512,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107513,"byte_end":107520,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8710},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108895,"byte_end":108901,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8713}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108757,"byte_end":108798,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108799,"byte_end":108866,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111165,"byte_end":111171,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108992,"byte_end":109062,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109063,"byte_end":109066,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109067,"byte_end":109145,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109146,"byte_end":109222,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109223,"byte_end":109295,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109296,"byte_end":109299,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109300,"byte_end":109372,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109373,"byte_end":109401,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109402,"byte_end":109405,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109406,"byte_end":109473,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109474,"byte_end":109538,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109539,"byte_end":109589,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109590,"byte_end":109593,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109594,"byte_end":109608,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109609,"byte_end":109612,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109613,"byte_end":109633,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109634,"byte_end":109637,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109638,"byte_end":109645,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109646,"byte_end":109687,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109688,"byte_end":109706,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109707,"byte_end":109723,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109724,"byte_end":109747,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109748,"byte_end":109769,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109770,"byte_end":109776,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109777,"byte_end":109780,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109781,"byte_end":109872,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109873,"byte_end":109898,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109899,"byte_end":109958,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109959,"byte_end":109968,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109969,"byte_end":109975,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":109976,"byte_end":110001,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110002,"byte_end":110032,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110033,"byte_end":110039,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110040,"byte_end":110043,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110044,"byte_end":110090,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110091,"byte_end":110113,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110114,"byte_end":110136,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110137,"byte_end":110140,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110141,"byte_end":110203,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110204,"byte_end":110288,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110289,"byte_end":110362,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110363,"byte_end":110447,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110448,"byte_end":110521,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110522,"byte_end":110528,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110529,"byte_end":110532,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110533,"byte_end":110557,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110558,"byte_end":110567,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110568,"byte_end":110575,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110576,"byte_end":110579,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110580,"byte_end":110606,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110607,"byte_end":110610,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110611,"byte_end":110618,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110619,"byte_end":110678,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110679,"byte_end":110682,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110683,"byte_end":110736,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110737,"byte_end":110740,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110741,"byte_end":110816,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110817,"byte_end":110849,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110850,"byte_end":110882,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110883,"byte_end":110888,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110889,"byte_end":110933,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110934,"byte_end":110960,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":110961,"byte_end":111038,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111039,"byte_end":111118,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111119,"byte_end":111132,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111133,"byte_end":111143,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111144,"byte_end":111149,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111150,"byte_end":111157,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8718},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112628,"byte_end":112637,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":8720}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112488,"byte_end":112531,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112549,"byte_end":112616,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113417,"byte_end":113427,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112715,"byte_end":112781,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112782,"byte_end":112785,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112786,"byte_end":112866,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112867,"byte_end":112945,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112946,"byte_end":113014,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113015,"byte_end":113018,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113019,"byte_end":113099,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113100,"byte_end":113174,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113175,"byte_end":113178,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113179,"byte_end":113256,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113257,"byte_end":113314,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113315,"byte_end":113318,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113319,"byte_end":113331,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113332,"byte_end":113335,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113336,"byte_end":113409,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113808,"byte_end":113818,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113733,"byte_end":113796,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8794},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117579,"byte_end":117586,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":8797},{"krate":0,"index":8798}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8839},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117656,"byte_end":117664,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8896},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117740,"byte_end":117748,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":8901},{"krate":0,"index":8902},{"krate":0,"index":8903},{"krate":0,"index":8904}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8965},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117830,"byte_end":117838,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1388},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119111,"byte_end":119119,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117876,"byte_end":117949,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117950,"byte_end":117982,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117983,"byte_end":117986,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":117987,"byte_end":118058,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118059,"byte_end":118135,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118136,"byte_end":118208,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118209,"byte_end":118225,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118226,"byte_end":118229,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118230,"byte_end":118299,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118300,"byte_end":118326,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118327,"byte_end":118330,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118331,"byte_end":118345,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118346,"byte_end":118349,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118350,"byte_end":118426,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118427,"byte_end":118463,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118464,"byte_end":118467,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118468,"byte_end":118475,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118476,"byte_end":118517,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118518,"byte_end":118542,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118543,"byte_end":118546,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118547,"byte_end":118592,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118593,"byte_end":118638,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118639,"byte_end":118677,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118678,"byte_end":118681,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118682,"byte_end":118721,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118722,"byte_end":118731,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118732,"byte_end":118739,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118740,"byte_end":118743,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118744,"byte_end":118814,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118815,"byte_end":118830,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118831,"byte_end":118834,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118835,"byte_end":118842,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118843,"byte_end":118884,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118885,"byte_end":118909,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118910,"byte_end":118913,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118914,"byte_end":118959,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":118960,"byte_end":119006,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119007,"byte_end":119045,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119046,"byte_end":119049,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119050,"byte_end":119085,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119086,"byte_end":119095,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119096,"byte_end":119103,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1391},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119775,"byte_end":119784,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119357,"byte_end":119417,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119418,"byte_end":119421,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119422,"byte_end":119436,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119437,"byte_end":119440,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119441,"byte_end":119448,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119449,"byte_end":119490,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119491,"byte_end":119515,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119516,"byte_end":119519,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119520,"byte_end":119565,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119566,"byte_end":119611,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119612,"byte_end":119657,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119658,"byte_end":119701,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119702,"byte_end":119705,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119706,"byte_end":119749,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119750,"byte_end":119759,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":119760,"byte_end":119767,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1395},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120612,"byte_end":120621,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120142,"byte_end":120202,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120203,"byte_end":120206,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120207,"byte_end":120221,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120222,"byte_end":120225,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120226,"byte_end":120233,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120234,"byte_end":120275,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120276,"byte_end":120300,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120301,"byte_end":120304,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120305,"byte_end":120350,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120351,"byte_end":120396,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120397,"byte_end":120442,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120443,"byte_end":120488,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120489,"byte_end":120535,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120536,"byte_end":120539,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120540,"byte_end":120586,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120587,"byte_end":120596,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":120597,"byte_end":120604,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1400},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121593,"byte_end":121602,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121071,"byte_end":121131,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121132,"byte_end":121135,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121136,"byte_end":121150,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121151,"byte_end":121154,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121155,"byte_end":121162,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121163,"byte_end":121204,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121205,"byte_end":121229,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121230,"byte_end":121233,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121234,"byte_end":121279,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121280,"byte_end":121325,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121326,"byte_end":121371,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121372,"byte_end":121417,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121418,"byte_end":121463,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121464,"byte_end":121513,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121514,"byte_end":121517,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121518,"byte_end":121567,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121568,"byte_end":121577,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":121578,"byte_end":121585,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1483},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123094,"byte_end":123104,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1485}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":122969,"byte_end":123014,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123015,"byte_end":123082,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1489},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124697,"byte_end":124709,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123448,"byte_end":123527,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123528,"byte_end":123558,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123559,"byte_end":123562,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123563,"byte_end":123642,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123643,"byte_end":123723,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123724,"byte_end":123742,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123743,"byte_end":123746,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123747,"byte_end":123825,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123826,"byte_end":123906,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123907,"byte_end":123981,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123982,"byte_end":124005,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124006,"byte_end":124009,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124010,"byte_end":124087,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124088,"byte_end":124145,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124146,"byte_end":124149,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124150,"byte_end":124164,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124165,"byte_end":124168,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124169,"byte_end":124176,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124177,"byte_end":124218,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124219,"byte_end":124265,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124266,"byte_end":124269,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124270,"byte_end":124293,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124294,"byte_end":124328,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124329,"byte_end":124363,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124364,"byte_end":124398,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124399,"byte_end":124405,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124406,"byte_end":124409,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124410,"byte_end":124473,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124474,"byte_end":124477,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124478,"byte_end":124501,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124502,"byte_end":124536,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124537,"byte_end":124572,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124573,"byte_end":124607,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124608,"byte_end":124614,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124615,"byte_end":124618,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124619,"byte_end":124671,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124672,"byte_end":124681,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":124682,"byte_end":124689,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9046},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126607,"byte_end":126616,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":9049}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126465,"byte_end":126510,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126511,"byte_end":126578,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1535},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128201,"byte_end":128211,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126710,"byte_end":126780,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126781,"byte_end":126784,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126785,"byte_end":126863,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126864,"byte_end":126940,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126941,"byte_end":127013,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127014,"byte_end":127017,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127018,"byte_end":127090,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127091,"byte_end":127119,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127120,"byte_end":127123,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127124,"byte_end":127191,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127192,"byte_end":127263,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127264,"byte_end":127314,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127315,"byte_end":127318,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127319,"byte_end":127333,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127334,"byte_end":127337,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127338,"byte_end":127345,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127346,"byte_end":127430,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127431,"byte_end":127434,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127435,"byte_end":127492,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127493,"byte_end":127496,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127497,"byte_end":127579,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127580,"byte_end":127637,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127638,"byte_end":127695,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127696,"byte_end":127722,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127723,"byte_end":127728,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127729,"byte_end":127824,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127825,"byte_end":127848,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127849,"byte_end":127929,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":127930,"byte_end":128011,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128012,"byte_end":128082,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128083,"byte_end":128154,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128155,"byte_end":128168,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128169,"byte_end":128179,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128180,"byte_end":128185,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128186,"byte_end":128193,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9054},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129842,"byte_end":129850,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":9056}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129703,"byte_end":129745,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129763,"byte_end":129830,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1585},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130572,"byte_end":130581,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129927,"byte_end":130021,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130022,"byte_end":130025,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130026,"byte_end":130115,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130116,"byte_end":130200,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130201,"byte_end":130282,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130283,"byte_end":130328,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130329,"byte_end":130332,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130333,"byte_end":130411,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130412,"byte_end":130469,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130470,"byte_end":130473,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130474,"byte_end":130486,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130487,"byte_end":130490,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130491,"byte_end":130564,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9063},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133324,"byte_end":133328,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":9060},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133291,"byte_end":133319,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9066},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133384,"byte_end":133389,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":9060},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133350,"byte_end":133379,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":9060},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133272,"byte_end":133278,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":9063},{"krate":0,"index":9066}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132749,"byte_end":132855,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132856,"byte_end":132859,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132860,"byte_end":132941,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132942,"byte_end":132945,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132946,"byte_end":132957,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132958,"byte_end":132990,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132991,"byte_end":132994,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":132995,"byte_end":133036,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133037,"byte_end":133057,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133058,"byte_end":133061,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133062,"byte_end":133085,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133086,"byte_end":133125,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133126,"byte_end":133138,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133139,"byte_end":133179,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133180,"byte_end":133186,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133187,"byte_end":133190,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133191,"byte_end":133221,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133222,"byte_end":133230,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133231,"byte_end":133238,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133943,"byte_end":133955,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133795,"byte_end":133853,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133858,"byte_end":133861,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133866,"byte_end":133931,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134335,"byte_end":134348,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134186,"byte_end":134244,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134249,"byte_end":134252,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134257,"byte_end":134323,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134636,"byte_end":134646,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134563,"byte_end":134624,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":9094},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692741,"byte_end":10692750,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692371,"byte_end":10692458,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692459,"byte_end":10692462,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692463,"byte_end":10692539,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692540,"byte_end":10692593,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692594,"byte_end":10692597,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692598,"byte_end":10692675,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10692676,"byte_end":10692733,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1741},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3361},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3418},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4412},{"krate":0,"index":4415},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4443},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4513},{"krate":0,"index":4516},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4557},{"krate":0,"index":4560},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4745},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":4805},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4868},{"krate":0,"index":12466},{"krate":0,"index":12573},{"krate":0,"index":12576},{"krate":0,"index":12975},{"krate":0,"index":12978},{"krate":0,"index":13100},{"krate":0,"index":13101},{"krate":0,"index":13104},{"krate":0,"index":13107},{"krate":0,"index":13123},{"krate":0,"index":13124},{"krate":0,"index":13127},{"krate":0,"index":13130},{"krate":0,"index":13133},{"krate":0,"index":13134},{"krate":0,"index":13136},{"krate":0,"index":4871}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141093,"byte_end":141118,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141119,"byte_end":141122,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141123,"byte_end":141148,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141149,"byte_end":141152,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141153,"byte_end":141226,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141227,"byte_end":141252,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141253,"byte_end":141332,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141333,"byte_end":141370,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141371,"byte_end":141444,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":141445,"byte_end":141475,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9119},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":195634,"byte_end":195639,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9122},{"krate":0,"index":9123}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9168},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":197764,"byte_end":197771,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":9171},{"krate":0,"index":9172}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9219},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":199205,"byte_end":199210,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9225}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9277},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":201044,"byte_end":201050,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":9279},{"krate":0,"index":9280}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9317},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":202677,"byte_end":202682,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":9319},{"krate":0,"index":9320}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9357},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204329,"byte_end":204338,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9359},{"krate":0,"index":9360}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9396},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":205970,"byte_end":205976,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9400},{"krate":0,"index":9401},{"krate":0,"index":9402},{"krate":0,"index":9403}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9461},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":209370,"byte_end":209379,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9529},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212385,"byte_end":212392,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9532},{"krate":0,"index":9533}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":146364,"byte_end":146371,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9579}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9630},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":214209,"byte_end":214213,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":9635},{"krate":0,"index":9636},{"krate":0,"index":9637},{"krate":0,"index":9638}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9699},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":216695,"byte_end":216702,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":9703},{"krate":0,"index":9704},{"krate":0,"index":9705}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9761},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218659,"byte_end":218663,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9763},{"krate":0,"index":9764}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219115,"byte_end":219122,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218846,"byte_end":218908,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218913,"byte_end":218916,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218921,"byte_end":218989,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218994,"byte_end":219060,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219065,"byte_end":219103,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":9800},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220481,"byte_end":220493,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":9802}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220311,"byte_end":220384,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220402,"byte_end":220469,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221056,"byte_end":221063,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220664,"byte_end":220737,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220742,"byte_end":220759,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220764,"byte_end":220767,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220772,"byte_end":220853,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220858,"byte_end":220940,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220945,"byte_end":221024,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221029,"byte_end":221044,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221674,"byte_end":221681,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221128,"byte_end":221195,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221200,"byte_end":221231,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221236,"byte_end":221239,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221244,"byte_end":221317,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221322,"byte_end":221377,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221382,"byte_end":221385,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221390,"byte_end":221471,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221476,"byte_end":221558,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221563,"byte_end":221642,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221647,"byte_end":221662,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222307,"byte_end":222318,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221754,"byte_end":221828,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221833,"byte_end":221864,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221869,"byte_end":221872,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221877,"byte_end":221950,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":221955,"byte_end":222010,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222015,"byte_end":222018,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222023,"byte_end":222104,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222109,"byte_end":222191,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222196,"byte_end":222275,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222280,"byte_end":222295,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222951,"byte_end":222961,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222431,"byte_end":222493,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222498,"byte_end":222501,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222506,"byte_end":222578,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222583,"byte_end":222654,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222659,"byte_end":222662,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222667,"byte_end":222748,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222753,"byte_end":222835,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222840,"byte_end":222919,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":222924,"byte_end":222939,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9809},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147491,"byte_end":147498,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9812}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9875},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":223985,"byte_end":223988,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9878},{"krate":0,"index":9879}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9928},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":147859,"byte_end":147866,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":9932}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10007},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225648,"byte_end":225652,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":10010}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225492,"byte_end":225551,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225569,"byte_end":225636,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10015},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226660,"byte_end":226674,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":10018}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226476,"byte_end":226551,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226552,"byte_end":226563,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226581,"byte_end":226648,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10028},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228265,"byte_end":228273,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":10030},{"krate":0,"index":10031}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228713,"byte_end":228717,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228558,"byte_end":228631,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228636,"byte_end":228701,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229042,"byte_end":229051,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228804,"byte_end":228866,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228871,"byte_end":228874,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228879,"byte_end":228952,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228957,"byte_end":229030,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231015,"byte_end":231022,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229487,"byte_end":229560,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229565,"byte_end":229599,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229604,"byte_end":229607,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229612,"byte_end":229687,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229692,"byte_end":229732,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229737,"byte_end":229740,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229745,"byte_end":229759,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229764,"byte_end":229767,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229772,"byte_end":229812,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229817,"byte_end":229820,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229825,"byte_end":229832,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229837,"byte_end":229878,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229883,"byte_end":229926,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229931,"byte_end":229956,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229961,"byte_end":229964,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":229969,"byte_end":230016,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230021,"byte_end":230042,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230047,"byte_end":230100,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230105,"byte_end":230173,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230178,"byte_end":230251,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230256,"byte_end":230321,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230326,"byte_end":230410,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230415,"byte_end":230460,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230465,"byte_end":230474,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230479,"byte_end":230486,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230491,"byte_end":230494,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230499,"byte_end":230535,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230540,"byte_end":230543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230548,"byte_end":230555,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230560,"byte_end":230601,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230606,"byte_end":230649,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230654,"byte_end":230679,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230684,"byte_end":230687,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230692,"byte_end":230740,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230745,"byte_end":230766,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230771,"byte_end":230810,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230815,"byte_end":230880,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230885,"byte_end":230926,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230931,"byte_end":230977,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230982,"byte_end":230991,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":230996,"byte_end":231003,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232046,"byte_end":232056,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231188,"byte_end":231261,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231266,"byte_end":231290,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231295,"byte_end":231298,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231303,"byte_end":231316,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231321,"byte_end":231324,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231329,"byte_end":231369,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231374,"byte_end":231377,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231382,"byte_end":231389,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231394,"byte_end":231435,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231440,"byte_end":231483,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231488,"byte_end":231513,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231518,"byte_end":231521,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231526,"byte_end":231573,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231578,"byte_end":231599,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231604,"byte_end":231657,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231662,"byte_end":231724,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231729,"byte_end":231802,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231807,"byte_end":231866,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231871,"byte_end":231958,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":231963,"byte_end":232008,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232013,"byte_end":232022,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232027,"byte_end":232034,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10067},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":233574,"byte_end":233578,"line_start":184,"line_end":184,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":10070}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10108},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":234634,"byte_end":234640,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":10112}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10157},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":236504,"byte_end":236512,"line_start":285,"line_end":285,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":10161}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10211},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238129,"byte_end":238133,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10213},{"krate":0,"index":10214}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10250},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":239896,"byte_end":239905,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10254},{"krate":0,"index":10255},{"krate":0,"index":10256},{"krate":0,"index":10257},{"krate":0,"index":10258}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10324},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":243409,"byte_end":243413,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10326},{"krate":0,"index":10327}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10363},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":245449,"byte_end":245458,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10367},{"krate":0,"index":10368},{"krate":0,"index":10369},{"krate":0,"index":10370},{"krate":0,"index":10371}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10432},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":248938,"byte_end":248947,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10437},{"krate":0,"index":10438}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250231,"byte_end":250242,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249931,"byte_end":249985,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249990,"byte_end":250084,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250089,"byte_end":250152,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250157,"byte_end":250219,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251526,"byte_end":251537,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250379,"byte_end":250444,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250449,"byte_end":250506,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250511,"byte_end":250514,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250519,"byte_end":250584,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250589,"byte_end":250649,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250654,"byte_end":250657,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250662,"byte_end":250730,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250735,"byte_end":250778,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250783,"byte_end":250786,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250791,"byte_end":250805,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250810,"byte_end":250813,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250818,"byte_end":250825,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250830,"byte_end":250871,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250876,"byte_end":250900,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250905,"byte_end":250948,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250953,"byte_end":250981,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250986,"byte_end":250989,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":250994,"byte_end":251032,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251037,"byte_end":251040,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251045,"byte_end":251063,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251068,"byte_end":251110,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251115,"byte_end":251130,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251135,"byte_end":251154,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251159,"byte_end":251184,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251189,"byte_end":251205,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251210,"byte_end":251243,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251248,"byte_end":251257,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251262,"byte_end":251269,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251274,"byte_end":251277,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251282,"byte_end":251331,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251336,"byte_end":251390,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251395,"byte_end":251398,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251403,"byte_end":251450,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251455,"byte_end":251488,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251493,"byte_end":251502,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251507,"byte_end":251514,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251713,"byte_end":251723,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251616,"byte_end":251677,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251682,"byte_end":251701,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":10489},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":253655,"byte_end":253659,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10493},{"krate":0,"index":10494},{"krate":0,"index":10495}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10557},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256199,"byte_end":256202,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10560},{"krate":0,"index":10561},{"krate":0,"index":10562},{"krate":0,"index":10563}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256720,"byte_end":256727,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256612,"byte_end":256686,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256691,"byte_end":256708,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257083,"byte_end":257090,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256821,"byte_end":256889,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256894,"byte_end":256925,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256930,"byte_end":256933,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256938,"byte_end":257011,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257016,"byte_end":257071,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257465,"byte_end":257476,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257196,"byte_end":257271,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257276,"byte_end":257307,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257312,"byte_end":257315,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257320,"byte_end":257393,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257398,"byte_end":257453,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257882,"byte_end":257892,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257646,"byte_end":257709,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257714,"byte_end":257717,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257722,"byte_end":257794,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":257799,"byte_end":257870,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":10612},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":260721,"byte_end":260727,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":10614},{"krate":0,"index":10615},{"krate":0,"index":10616}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10660},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":263830,"byte_end":263841,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":10662},{"krate":0,"index":10663},{"krate":0,"index":10664}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10703},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":267387,"byte_end":267391,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10708},{"krate":0,"index":10709},{"krate":0,"index":10710}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14767},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10693481,"byte_end":10693496,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14769},{"krate":0,"index":14770},{"krate":0,"index":14771}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14726},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10696807,"byte_end":10696815,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":14728},{"krate":0,"index":14729},{"krate":0,"index":14730}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14665},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10699810,"byte_end":10699827,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14669},{"krate":0,"index":14670},{"krate":0,"index":14671},{"krate":0,"index":14672}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10951},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":270739,"byte_end":270750,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":10953},{"krate":0,"index":10954}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3274},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151165,"byte_end":151174,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3284},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3353}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151054,"byte_end":151128,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151129,"byte_end":151154,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152084,"byte_end":152088,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151189,"byte_end":151255,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151260,"byte_end":151263,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151268,"byte_end":151336,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151341,"byte_end":151416,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151421,"byte_end":151496,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151501,"byte_end":151555,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151560,"byte_end":151635,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151640,"byte_end":151650,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151655,"byte_end":151658,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151663,"byte_end":151677,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151682,"byte_end":151685,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151690,"byte_end":151697,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151702,"byte_end":151743,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151748,"byte_end":151791,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151796,"byte_end":151799,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151804,"byte_end":151845,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151850,"byte_end":151853,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151858,"byte_end":151903,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151908,"byte_end":151953,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151958,"byte_end":152003,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152008,"byte_end":152050,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152055,"byte_end":152064,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152069,"byte_end":152076,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153327,"byte_end":153338,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152230,"byte_end":152302,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152307,"byte_end":152368,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152373,"byte_end":152376,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152381,"byte_end":152456,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152461,"byte_end":152515,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152520,"byte_end":152523,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152528,"byte_end":152601,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152606,"byte_end":152668,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152673,"byte_end":152748,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152753,"byte_end":152807,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152812,"byte_end":152887,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152892,"byte_end":152902,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152907,"byte_end":152910,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152915,"byte_end":152929,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152934,"byte_end":152937,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152942,"byte_end":152949,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":152954,"byte_end":152995,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153000,"byte_end":153043,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153048,"byte_end":153051,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153056,"byte_end":153093,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153098,"byte_end":153101,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153106,"byte_end":153158,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153163,"byte_end":153193,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153198,"byte_end":153201,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153206,"byte_end":153258,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153263,"byte_end":153293,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153298,"byte_end":153307,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153312,"byte_end":153319,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154339,"byte_end":154342,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153503,"byte_end":153578,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153583,"byte_end":153606,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153611,"byte_end":153614,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153619,"byte_end":153691,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153696,"byte_end":153760,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153765,"byte_end":153802,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153807,"byte_end":153810,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153815,"byte_end":153891,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153896,"byte_end":153967,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153972,"byte_end":153993,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":153998,"byte_end":154001,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154006,"byte_end":154020,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154025,"byte_end":154028,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154033,"byte_end":154040,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154045,"byte_end":154086,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154091,"byte_end":154134,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154139,"byte_end":154142,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154147,"byte_end":154184,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154189,"byte_end":154228,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154233,"byte_end":154236,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154241,"byte_end":154305,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154310,"byte_end":154319,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154324,"byte_end":154331,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155902,"byte_end":155911,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154509,"byte_end":154580,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154585,"byte_end":154604,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154609,"byte_end":154612,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154617,"byte_end":154682,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154687,"byte_end":154756,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154761,"byte_end":154772,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154777,"byte_end":154780,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154785,"byte_end":154860,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154865,"byte_end":154947,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154952,"byte_end":154970,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154975,"byte_end":154978,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":154983,"byte_end":155006,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155011,"byte_end":155014,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155019,"byte_end":155094,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155099,"byte_end":155186,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155191,"byte_end":155247,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155252,"byte_end":155255,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155260,"byte_end":155272,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155277,"byte_end":155280,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155285,"byte_end":155354,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155359,"byte_end":155384,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155389,"byte_end":155392,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155397,"byte_end":155411,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155416,"byte_end":155419,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155424,"byte_end":155431,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155436,"byte_end":155477,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155482,"byte_end":155525,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155530,"byte_end":155533,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155538,"byte_end":155589,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155594,"byte_end":155597,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155602,"byte_end":155642,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155647,"byte_end":155650,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155655,"byte_end":155707,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155712,"byte_end":155764,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155769,"byte_end":155821,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155826,"byte_end":155868,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155873,"byte_end":155882,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":155887,"byte_end":155894,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157140,"byte_end":157146,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156055,"byte_end":156127,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156132,"byte_end":156159,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156164,"byte_end":156167,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156172,"byte_end":156247,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156252,"byte_end":156323,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156328,"byte_end":156400,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156405,"byte_end":156479,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156484,"byte_end":156542,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156547,"byte_end":156550,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156555,"byte_end":156631,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156636,"byte_end":156710,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156715,"byte_end":156736,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156741,"byte_end":156744,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156749,"byte_end":156763,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156768,"byte_end":156771,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156776,"byte_end":156783,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156788,"byte_end":156829,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156834,"byte_end":156858,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156863,"byte_end":156906,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156911,"byte_end":156914,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156919,"byte_end":156957,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":156962,"byte_end":157023,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157028,"byte_end":157031,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157036,"byte_end":157106,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157111,"byte_end":157120,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157125,"byte_end":157132,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158471,"byte_end":158481,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157374,"byte_end":157449,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157454,"byte_end":157530,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157535,"byte_end":157538,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157543,"byte_end":157618,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157623,"byte_end":157698,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157703,"byte_end":157779,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157784,"byte_end":157849,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157854,"byte_end":157857,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157862,"byte_end":157938,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":157943,"byte_end":158017,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158022,"byte_end":158047,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158052,"byte_end":158055,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158060,"byte_end":158074,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158079,"byte_end":158086,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158091,"byte_end":158132,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158137,"byte_end":158180,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158185,"byte_end":158188,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158193,"byte_end":158231,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158236,"byte_end":158286,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158291,"byte_end":158342,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158347,"byte_end":158354,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158359,"byte_end":158362,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158367,"byte_end":158437,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158442,"byte_end":158451,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158456,"byte_end":158463,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159510,"byte_end":159514,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158713,"byte_end":158786,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158791,"byte_end":158819,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158824,"byte_end":158827,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158832,"byte_end":158906,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158911,"byte_end":158978,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":158983,"byte_end":159028,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159033,"byte_end":159036,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159041,"byte_end":159117,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159122,"byte_end":159148,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159153,"byte_end":159156,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159161,"byte_end":159175,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159180,"byte_end":159183,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159188,"byte_end":159195,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159200,"byte_end":159241,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159246,"byte_end":159289,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159294,"byte_end":159297,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159302,"byte_end":159339,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159344,"byte_end":159399,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159404,"byte_end":159407,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159412,"byte_end":159476,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159481,"byte_end":159490,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159495,"byte_end":159502,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160448,"byte_end":160455,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159723,"byte_end":159777,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159782,"byte_end":159837,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159842,"byte_end":159845,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159850,"byte_end":159918,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159923,"byte_end":159926,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159931,"byte_end":159945,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159950,"byte_end":159953,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159958,"byte_end":159965,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":159970,"byte_end":160011,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160016,"byte_end":160047,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160052,"byte_end":160087,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160092,"byte_end":160112,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160117,"byte_end":160120,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160125,"byte_end":160162,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160167,"byte_end":160170,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160175,"byte_end":160202,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160207,"byte_end":160231,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160236,"byte_end":160278,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160283,"byte_end":160292,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160297,"byte_end":160304,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160309,"byte_end":160312,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160317,"byte_end":160365,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160370,"byte_end":160414,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160419,"byte_end":160428,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160433,"byte_end":160440,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161574,"byte_end":161579,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160613,"byte_end":160664,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160669,"byte_end":160704,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160709,"byte_end":160712,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160717,"byte_end":160771,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160776,"byte_end":160833,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160838,"byte_end":160874,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160879,"byte_end":160882,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160887,"byte_end":160955,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160960,"byte_end":160963,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160968,"byte_end":160982,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160987,"byte_end":160990,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":160995,"byte_end":161002,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161007,"byte_end":161048,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161053,"byte_end":161084,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161089,"byte_end":161124,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161129,"byte_end":161149,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161154,"byte_end":161157,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161162,"byte_end":161199,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161204,"byte_end":161207,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161212,"byte_end":161239,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161244,"byte_end":161287,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161292,"byte_end":161335,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161340,"byte_end":161383,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161388,"byte_end":161395,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161400,"byte_end":161403,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161408,"byte_end":161462,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161467,"byte_end":161501,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161506,"byte_end":161540,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161545,"byte_end":161554,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161559,"byte_end":161566,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162875,"byte_end":162881,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161840,"byte_end":161902,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161907,"byte_end":161971,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161976,"byte_end":161979,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":161984,"byte_end":162048,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162053,"byte_end":162118,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162123,"byte_end":162169,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162174,"byte_end":162177,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162182,"byte_end":162231,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162236,"byte_end":162276,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162281,"byte_end":162284,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162289,"byte_end":162303,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162308,"byte_end":162311,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162316,"byte_end":162323,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162328,"byte_end":162369,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162374,"byte_end":162405,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162410,"byte_end":162445,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162450,"byte_end":162470,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162475,"byte_end":162478,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162483,"byte_end":162520,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162525,"byte_end":162528,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162533,"byte_end":162560,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162565,"byte_end":162596,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162601,"byte_end":162627,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162632,"byte_end":162698,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162703,"byte_end":162712,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162717,"byte_end":162724,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162729,"byte_end":162732,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162737,"byte_end":162772,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162777,"byte_end":162780,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162785,"byte_end":162841,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162846,"byte_end":162855,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":162860,"byte_end":162867,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163945,"byte_end":163950,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163111,"byte_end":163142,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163147,"byte_end":163150,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163155,"byte_end":163222,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163227,"byte_end":163299,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163304,"byte_end":163361,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163366,"byte_end":163369,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163374,"byte_end":163388,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163393,"byte_end":163396,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163401,"byte_end":163408,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163413,"byte_end":163454,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163459,"byte_end":163502,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163507,"byte_end":163529,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163534,"byte_end":163581,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163586,"byte_end":163589,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163594,"byte_end":163635,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163640,"byte_end":163681,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163686,"byte_end":163727,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163732,"byte_end":163773,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163778,"byte_end":163819,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163824,"byte_end":163865,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163870,"byte_end":163911,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163916,"byte_end":163925,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":163930,"byte_end":163937,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164900,"byte_end":164904,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164085,"byte_end":164152,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164157,"byte_end":164209,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164214,"byte_end":164217,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164222,"byte_end":164292,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164297,"byte_end":164373,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164378,"byte_end":164454,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164459,"byte_end":164529,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164534,"byte_end":164560,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164565,"byte_end":164568,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164573,"byte_end":164587,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164592,"byte_end":164595,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164600,"byte_end":164607,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164612,"byte_end":164653,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164658,"byte_end":164701,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164706,"byte_end":164709,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164714,"byte_end":164757,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164762,"byte_end":164831,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164836,"byte_end":164866,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164871,"byte_end":164880,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":164885,"byte_end":164892,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166098,"byte_end":166105,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165139,"byte_end":165204,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165209,"byte_end":165212,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165217,"byte_end":165231,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165236,"byte_end":165239,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165244,"byte_end":165251,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165256,"byte_end":165297,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165302,"byte_end":165333,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165338,"byte_end":165373,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165378,"byte_end":165398,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165403,"byte_end":165406,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165411,"byte_end":165450,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165455,"byte_end":165494,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165499,"byte_end":165538,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165543,"byte_end":165546,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165551,"byte_end":165578,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165583,"byte_end":165622,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165627,"byte_end":165666,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165671,"byte_end":165678,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165683,"byte_end":165710,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165715,"byte_end":165754,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165759,"byte_end":165798,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165803,"byte_end":165810,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165815,"byte_end":165842,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165847,"byte_end":165888,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165893,"byte_end":165934,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165939,"byte_end":165946,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165951,"byte_end":165954,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":165959,"byte_end":166018,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166023,"byte_end":166064,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166069,"byte_end":166078,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166083,"byte_end":166090,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167367,"byte_end":167375,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166282,"byte_end":166354,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166359,"byte_end":166362,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166367,"byte_end":166444,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166449,"byte_end":166524,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166529,"byte_end":166605,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166610,"byte_end":166613,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166618,"byte_end":166700,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166705,"byte_end":166788,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166793,"byte_end":166796,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166801,"byte_end":166877,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166882,"byte_end":166958,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166963,"byte_end":166984,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166989,"byte_end":166992,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":166997,"byte_end":167011,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167016,"byte_end":167019,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167024,"byte_end":167031,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167036,"byte_end":167077,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167082,"byte_end":167125,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167130,"byte_end":167133,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167138,"byte_end":167175,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167180,"byte_end":167247,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167252,"byte_end":167255,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167260,"byte_end":167333,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167338,"byte_end":167347,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167352,"byte_end":167359,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168387,"byte_end":168391,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167578,"byte_end":167649,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167654,"byte_end":167684,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167689,"byte_end":167692,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167697,"byte_end":167772,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167777,"byte_end":167848,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167853,"byte_end":167893,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167898,"byte_end":167901,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167906,"byte_end":167920,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167925,"byte_end":167928,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167933,"byte_end":167940,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167945,"byte_end":167986,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":167991,"byte_end":168015,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168020,"byte_end":168063,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168068,"byte_end":168071,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168076,"byte_end":168114,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168119,"byte_end":168122,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168127,"byte_end":168171,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168176,"byte_end":168196,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168201,"byte_end":168264,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168269,"byte_end":168276,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168281,"byte_end":168284,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168289,"byte_end":168353,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168358,"byte_end":168367,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168372,"byte_end":168379,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169438,"byte_end":169448,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168660,"byte_end":168734,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168739,"byte_end":168762,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168767,"byte_end":168770,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168775,"byte_end":168848,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168853,"byte_end":168925,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":168930,"byte_end":169007,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169012,"byte_end":169023,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169028,"byte_end":169031,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169036,"byte_end":169050,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169055,"byte_end":169058,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169063,"byte_end":169070,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169075,"byte_end":169116,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169121,"byte_end":169145,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169150,"byte_end":169193,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169198,"byte_end":169201,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169206,"byte_end":169244,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169249,"byte_end":169252,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169257,"byte_end":169320,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169325,"byte_end":169328,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169333,"byte_end":169404,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169409,"byte_end":169418,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169423,"byte_end":169430,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170437,"byte_end":170447,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169682,"byte_end":169758,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169763,"byte_end":169786,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169791,"byte_end":169794,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169799,"byte_end":169874,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169879,"byte_end":169951,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169956,"byte_end":170023,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170028,"byte_end":170031,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170036,"byte_end":170050,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170055,"byte_end":170058,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170063,"byte_end":170070,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170075,"byte_end":170116,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170121,"byte_end":170145,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170150,"byte_end":170193,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170198,"byte_end":170201,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170206,"byte_end":170244,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170249,"byte_end":170252,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170257,"byte_end":170320,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170325,"byte_end":170328,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170333,"byte_end":170403,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170408,"byte_end":170417,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170422,"byte_end":170429,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171963,"byte_end":171973,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170681,"byte_end":170751,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170756,"byte_end":170759,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170764,"byte_end":170835,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170840,"byte_end":170912,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170917,"byte_end":170987,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170992,"byte_end":170995,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171000,"byte_end":171071,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171076,"byte_end":171162,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171167,"byte_end":171234,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171239,"byte_end":171303,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171308,"byte_end":171311,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171316,"byte_end":171330,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171335,"byte_end":171338,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171343,"byte_end":171350,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171355,"byte_end":171396,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171401,"byte_end":171425,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171430,"byte_end":171473,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171478,"byte_end":171506,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171511,"byte_end":171514,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171519,"byte_end":171557,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171562,"byte_end":171565,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171570,"byte_end":171588,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171593,"byte_end":171635,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171640,"byte_end":171655,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171660,"byte_end":171679,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171684,"byte_end":171709,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171714,"byte_end":171730,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171735,"byte_end":171762,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171767,"byte_end":171776,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171781,"byte_end":171788,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171793,"byte_end":171796,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171801,"byte_end":171846,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171851,"byte_end":171854,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171859,"byte_end":171929,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171934,"byte_end":171943,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":171948,"byte_end":171955,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173212,"byte_end":173220,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172154,"byte_end":172225,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172230,"byte_end":172273,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172278,"byte_end":172281,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172286,"byte_end":172361,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172366,"byte_end":172436,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172441,"byte_end":172479,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172484,"byte_end":172487,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172492,"byte_end":172567,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172572,"byte_end":172615,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172620,"byte_end":172623,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172628,"byte_end":172701,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172706,"byte_end":172749,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172754,"byte_end":172757,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172762,"byte_end":172776,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172781,"byte_end":172784,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172789,"byte_end":172796,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172801,"byte_end":172842,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172847,"byte_end":172871,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172876,"byte_end":172919,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172924,"byte_end":172927,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172932,"byte_end":172950,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172955,"byte_end":172958,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172963,"byte_end":172968,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172973,"byte_end":173034,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173039,"byte_end":173061,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173066,"byte_end":173095,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173100,"byte_end":173111,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173116,"byte_end":173134,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173139,"byte_end":173144,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173149,"byte_end":173152,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173157,"byte_end":173178,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173183,"byte_end":173192,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173197,"byte_end":173204,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175382,"byte_end":175401,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173439,"byte_end":173510,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173515,"byte_end":173589,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173594,"byte_end":173608,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173613,"byte_end":173616,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173621,"byte_end":173684,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173689,"byte_end":173760,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173765,"byte_end":173817,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173822,"byte_end":173825,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173830,"byte_end":173905,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173910,"byte_end":173980,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173985,"byte_end":174049,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174054,"byte_end":174057,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174062,"byte_end":174133,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174138,"byte_end":174208,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174213,"byte_end":174274,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174279,"byte_end":174346,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174351,"byte_end":174420,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174425,"byte_end":174497,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174502,"byte_end":174505,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174510,"byte_end":174585,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174590,"byte_end":174647,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174652,"byte_end":174655,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174660,"byte_end":174674,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174679,"byte_end":174682,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174687,"byte_end":174694,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174699,"byte_end":174740,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174745,"byte_end":174779,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174784,"byte_end":174827,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174832,"byte_end":174835,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174840,"byte_end":174880,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174885,"byte_end":174925,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174930,"byte_end":174970,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174975,"byte_end":174978,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174983,"byte_end":175051,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175056,"byte_end":175078,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175083,"byte_end":175108,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175113,"byte_end":175143,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175148,"byte_end":175157,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175162,"byte_end":175168,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175173,"byte_end":175199,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175204,"byte_end":175230,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175235,"byte_end":175261,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175266,"byte_end":175280,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175285,"byte_end":175293,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175298,"byte_end":175305,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175310,"byte_end":175344,"line_start":922,"line_end":922,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175349,"byte_end":175374,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176226,"byte_end":176230,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175718,"byte_end":175789,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175794,"byte_end":175797,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175802,"byte_end":175875,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175880,"byte_end":175915,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175920,"byte_end":175923,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175928,"byte_end":175942,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175947,"byte_end":175950,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175955,"byte_end":175962,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175967,"byte_end":176008,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176013,"byte_end":176056,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176061,"byte_end":176064,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176069,"byte_end":176115,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176120,"byte_end":176123,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176128,"byte_end":176192,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176197,"byte_end":176206,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176211,"byte_end":176218,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176895,"byte_end":176899,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176368,"byte_end":176440,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176445,"byte_end":176448,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176453,"byte_end":176526,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176531,"byte_end":176577,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176582,"byte_end":176585,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176590,"byte_end":176604,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176609,"byte_end":176612,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176617,"byte_end":176624,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176629,"byte_end":176670,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176675,"byte_end":176718,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176723,"byte_end":176726,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176731,"byte_end":176777,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176782,"byte_end":176785,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176790,"byte_end":176861,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176866,"byte_end":176875,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176880,"byte_end":176887,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178520,"byte_end":178524,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177037,"byte_end":177108,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177113,"byte_end":177186,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177191,"byte_end":177229,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177234,"byte_end":177237,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177242,"byte_end":177296,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177301,"byte_end":177373,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177378,"byte_end":177454,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177459,"byte_end":177527,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177532,"byte_end":177608,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177613,"byte_end":177635,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177640,"byte_end":177643,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177648,"byte_end":177715,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177720,"byte_end":177788,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177793,"byte_end":177806,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177811,"byte_end":177814,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177819,"byte_end":177833,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177838,"byte_end":177841,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177846,"byte_end":177853,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177858,"byte_end":177901,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177906,"byte_end":177949,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177954,"byte_end":177982,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177987,"byte_end":177990,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177995,"byte_end":178013,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178018,"byte_end":178056,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178061,"byte_end":178076,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178081,"byte_end":178098,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178103,"byte_end":178145,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178150,"byte_end":178185,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178190,"byte_end":178234,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178239,"byte_end":178248,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178253,"byte_end":178267,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178272,"byte_end":178275,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178280,"byte_end":178323,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178328,"byte_end":178365,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178370,"byte_end":178407,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178412,"byte_end":178446,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178451,"byte_end":178485,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178490,"byte_end":178500,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178505,"byte_end":178512,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179453,"byte_end":179459,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178649,"byte_end":178696,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178701,"byte_end":178704,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178709,"byte_end":178783,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178788,"byte_end":178825,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178830,"byte_end":178833,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178838,"byte_end":178852,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178857,"byte_end":178860,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178865,"byte_end":178872,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178877,"byte_end":178918,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178923,"byte_end":178966,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178971,"byte_end":178974,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178979,"byte_end":179019,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179024,"byte_end":179027,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179032,"byte_end":179061,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179066,"byte_end":179094,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179099,"byte_end":179156,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179161,"byte_end":179188,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179193,"byte_end":179216,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179221,"byte_end":179224,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179229,"byte_end":179264,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179269,"byte_end":179297,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179302,"byte_end":179359,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179364,"byte_end":179391,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179396,"byte_end":179419,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179424,"byte_end":179433,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179438,"byte_end":179445,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181218,"byte_end":181230,"line_start":1100,"line_end":1100,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179510,"byte_end":179564,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179569,"byte_end":179572,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179577,"byte_end":179652,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179657,"byte_end":179660,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179665,"byte_end":179740,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179745,"byte_end":179819,"line_start":1064,"line_end":1064,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179824,"byte_end":179898,"line_start":1065,"line_end":1065,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179903,"byte_end":179952,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179957,"byte_end":179960,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179965,"byte_end":180040,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180045,"byte_end":180115,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180120,"byte_end":180187,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180192,"byte_end":180264,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180269,"byte_end":180338,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180343,"byte_end":180358,"line_start":1073,"line_end":1073,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180363,"byte_end":180366,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180371,"byte_end":180435,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180440,"byte_end":180497,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180502,"byte_end":180505,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180510,"byte_end":180524,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180529,"byte_end":180532,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180537,"byte_end":180544,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180549,"byte_end":180590,"line_start":1081,"line_end":1081,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180595,"byte_end":180638,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180643,"byte_end":180646,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180651,"byte_end":180713,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180718,"byte_end":180748,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180753,"byte_end":180807,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180812,"byte_end":180842,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180847,"byte_end":180896,"line_start":1088,"line_end":1088,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180901,"byte_end":180904,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180909,"byte_end":180971,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180976,"byte_end":180998,"line_start":1091,"line_end":1091,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181003,"byte_end":181023,"line_start":1092,"line_end":1092,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181028,"byte_end":181070,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181075,"byte_end":181080,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181085,"byte_end":181118,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181123,"byte_end":181156,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181161,"byte_end":181170,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181175,"byte_end":181182,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181187,"byte_end":181210,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181606,"byte_end":181611,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181377,"byte_end":181418,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181423,"byte_end":181426,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181431,"byte_end":181506,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181511,"byte_end":181568,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181573,"byte_end":181598,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182067,"byte_end":182078,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181766,"byte_end":181807,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181812,"byte_end":181815,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181820,"byte_end":181879,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181884,"byte_end":181887,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181892,"byte_end":181967,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181972,"byte_end":182029,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182034,"byte_end":182059,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182971,"byte_end":182979,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182231,"byte_end":182294,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182299,"byte_end":182302,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182307,"byte_end":182382,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182387,"byte_end":182463,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182468,"byte_end":182541,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182546,"byte_end":182619,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182624,"byte_end":182666,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182671,"byte_end":182674,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182679,"byte_end":182744,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182749,"byte_end":182752,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182757,"byte_end":182832,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182837,"byte_end":182894,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182899,"byte_end":182933,"line_start":1145,"line_end":1145,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182938,"byte_end":182963,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184659,"byte_end":184675,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183173,"byte_end":183248,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183253,"byte_end":183256,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183261,"byte_end":183336,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183341,"byte_end":183415,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183420,"byte_end":183492,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183497,"byte_end":183571,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183576,"byte_end":183605,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183610,"byte_end":183613,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183618,"byte_end":183683,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183688,"byte_end":183691,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183696,"byte_end":183771,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183776,"byte_end":183833,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183838,"byte_end":183841,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183846,"byte_end":183860,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183865,"byte_end":183868,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183873,"byte_end":183880,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183885,"byte_end":183926,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183931,"byte_end":183965,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183970,"byte_end":184013,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184018,"byte_end":184021,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184026,"byte_end":184076,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184081,"byte_end":184131,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184136,"byte_end":184139,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184144,"byte_end":184211,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184216,"byte_end":184278,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184283,"byte_end":184286,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184291,"byte_end":184316,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184321,"byte_end":184375,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184380,"byte_end":184383,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184388,"byte_end":184413,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184418,"byte_end":184472,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184477,"byte_end":184480,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184485,"byte_end":184529,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184534,"byte_end":184570,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184575,"byte_end":184582,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184587,"byte_end":184621,"line_start":1190,"line_end":1190,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184626,"byte_end":184651,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185571,"byte_end":185574,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184883,"byte_end":184931,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184936,"byte_end":184939,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184944,"byte_end":185017,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185022,"byte_end":185094,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185099,"byte_end":185112,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185117,"byte_end":185120,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185125,"byte_end":185139,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185144,"byte_end":185147,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185152,"byte_end":185159,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185164,"byte_end":185205,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185210,"byte_end":185253,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185258,"byte_end":185261,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185266,"byte_end":185304,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185309,"byte_end":185348,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185353,"byte_end":185356,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185361,"byte_end":185395,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185400,"byte_end":185441,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185446,"byte_end":185474,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185479,"byte_end":185529,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185534,"byte_end":185543,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185548,"byte_end":185555,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185560,"byte_end":185563,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186482,"byte_end":186487,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185755,"byte_end":185792,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185797,"byte_end":185800,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185805,"byte_end":185876,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185881,"byte_end":185957,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185962,"byte_end":185965,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185970,"byte_end":185977,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185982,"byte_end":186023,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186028,"byte_end":186071,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186076,"byte_end":186079,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186084,"byte_end":186141,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186146,"byte_end":186202,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186207,"byte_end":186210,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186215,"byte_end":186255,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186260,"byte_end":186263,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186268,"byte_end":186316,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186321,"byte_end":186349,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186354,"byte_end":186369,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186374,"byte_end":186393,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186398,"byte_end":186416,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186421,"byte_end":186436,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186441,"byte_end":186448,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186453,"byte_end":186462,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186467,"byte_end":186474,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186825,"byte_end":186833,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186679,"byte_end":186734,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186739,"byte_end":186742,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186747,"byte_end":186817,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187868,"byte_end":187874,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186966,"byte_end":187033,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187038,"byte_end":187041,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187046,"byte_end":187120,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187125,"byte_end":187197,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187202,"byte_end":187254,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187259,"byte_end":187262,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187267,"byte_end":187340,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187345,"byte_end":187419,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187424,"byte_end":187499,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187504,"byte_end":187576,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187581,"byte_end":187593,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187598,"byte_end":187601,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187606,"byte_end":187681,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187686,"byte_end":187743,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187748,"byte_end":187751,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187756,"byte_end":187768,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187773,"byte_end":187776,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187781,"byte_end":187830,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187835,"byte_end":187860,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188971,"byte_end":188983,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188035,"byte_end":188108,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188113,"byte_end":188116,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188121,"byte_end":188194,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188199,"byte_end":188269,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188274,"byte_end":188349,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188354,"byte_end":188431,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188436,"byte_end":188464,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188469,"byte_end":188472,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188477,"byte_end":188550,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188555,"byte_end":188630,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188635,"byte_end":188696,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188701,"byte_end":188704,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188709,"byte_end":188784,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188789,"byte_end":188846,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188851,"byte_end":188854,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188859,"byte_end":188871,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188876,"byte_end":188879,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188884,"byte_end":188933,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188938,"byte_end":188963,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191780,"byte_end":191787,"line_start":1376,"line_end":1376,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191477,"byte_end":191550,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191555,"byte_end":191558,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191563,"byte_end":191632,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191637,"byte_end":191706,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191711,"byte_end":191772,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192243,"byte_end":192254,"line_start":1389,"line_end":1389,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191964,"byte_end":192039,"line_start":1384,"line_end":1384,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192044,"byte_end":192065,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192070,"byte_end":192073,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192078,"byte_end":192158,"line_start":1387,"line_end":1387,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192163,"byte_end":192235,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192707,"byte_end":192719,"line_start":1402,"line_end":1402,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192428,"byte_end":192504,"line_start":1397,"line_end":1397,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192509,"byte_end":192530,"line_start":1398,"line_end":1398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192535,"byte_end":192538,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192543,"byte_end":192622,"line_start":1400,"line_end":1400,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192627,"byte_end":192699,"line_start":1401,"line_end":1401,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192995,"byte_end":193010,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192894,"byte_end":192965,"line_start":1410,"line_end":1410,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192970,"byte_end":192987,"line_start":1411,"line_end":1411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195111,"byte_end":195127,"line_start":1467,"line_end":1467,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193157,"byte_end":193232,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193237,"byte_end":193247,"line_start":1420,"line_end":1420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193252,"byte_end":193255,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193260,"byte_end":193333,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193338,"byte_end":193406,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193411,"byte_end":193459,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193464,"byte_end":193539,"line_start":1425,"line_end":1425,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193544,"byte_end":193620,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193625,"byte_end":193651,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193656,"byte_end":193659,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193664,"byte_end":193737,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193742,"byte_end":193812,"line_start":1430,"line_end":1430,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193817,"byte_end":193857,"line_start":1431,"line_end":1431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193862,"byte_end":193865,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193870,"byte_end":193924,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193929,"byte_end":194013,"line_start":1434,"line_end":1434,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194018,"byte_end":194021,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194026,"byte_end":194040,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194045,"byte_end":194048,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194053,"byte_end":194060,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194065,"byte_end":194106,"line_start":1439,"line_end":1439,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194111,"byte_end":194145,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194150,"byte_end":194205,"line_start":1441,"line_end":1441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194210,"byte_end":194213,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194218,"byte_end":194253,"line_start":1443,"line_end":1443,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194258,"byte_end":194308,"line_start":1444,"line_end":1444,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194313,"byte_end":194335,"line_start":1445,"line_end":1445,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194340,"byte_end":194350,"line_start":1446,"line_end":1446,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194355,"byte_end":194372,"line_start":1447,"line_end":1447,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194377,"byte_end":194403,"line_start":1448,"line_end":1448,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194408,"byte_end":194463,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194468,"byte_end":194497,"line_start":1450,"line_end":1450,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194502,"byte_end":194565,"line_start":1451,"line_end":1451,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194570,"byte_end":194616,"line_start":1452,"line_end":1452,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194621,"byte_end":194635,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194640,"byte_end":194709,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194714,"byte_end":194739,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194744,"byte_end":194797,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194802,"byte_end":194831,"line_start":1457,"line_end":1457,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194836,"byte_end":194849,"line_start":1458,"line_end":1458,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194854,"byte_end":194924,"line_start":1459,"line_end":1459,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194929,"byte_end":194988,"line_start":1460,"line_end":1460,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194993,"byte_end":195023,"line_start":1461,"line_end":1461,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195028,"byte_end":195037,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195042,"byte_end":195047,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195052,"byte_end":195077,"line_start":1464,"line_end":1464,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195082,"byte_end":195091,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195096,"byte_end":195103,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10990},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":308651,"byte_end":308658,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":10994},{"krate":0,"index":10995},{"krate":0,"index":10996}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11054},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":272860,"byte_end":272867,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11057}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11123},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":273115,"byte_end":273124,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11126}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11192},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":273425,"byte_end":273435,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11195}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11263},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311400,"byte_end":311410,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":11265}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11301},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":273861,"byte_end":273866,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11304}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11370},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":274143,"byte_end":274149,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11373}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11436},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":312758,"byte_end":312764,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11440},{"krate":0,"index":11441},{"krate":0,"index":11442}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11497},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315600,"byte_end":315607,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":11500}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315433,"byte_end":315503,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315521,"byte_end":315588,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11505},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":316692,"byte_end":316702,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":11509},{"krate":0,"index":11510},{"krate":0,"index":11511}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11562},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":318588,"byte_end":318597,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":11566},{"krate":0,"index":11567},{"krate":0,"index":11568},{"krate":0,"index":11569}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11627},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":321732,"byte_end":321744,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":11631},{"krate":0,"index":11632},{"krate":0,"index":11633}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11693},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":324749,"byte_end":324759,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":11695},{"krate":0,"index":11696}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11739},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":326937,"byte_end":326947,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":11742},{"krate":0,"index":11743}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11786},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":328296,"byte_end":328305,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":11788},{"krate":0,"index":11789}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11821},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":329719,"byte_end":329726,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":11826},{"krate":0,"index":11827},{"krate":0,"index":11828},{"krate":0,"index":11829}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4111},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334174,"byte_end":334184,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332317,"byte_end":332393,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332394,"byte_end":332397,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332398,"byte_end":332474,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332475,"byte_end":332545,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332546,"byte_end":332605,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332606,"byte_end":332609,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332610,"byte_end":332688,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332689,"byte_end":332766,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332767,"byte_end":332831,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332832,"byte_end":332835,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332836,"byte_end":332908,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332909,"byte_end":332987,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":332988,"byte_end":333017,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333018,"byte_end":333021,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333022,"byte_end":333099,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333100,"byte_end":333164,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333165,"byte_end":333217,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333218,"byte_end":333221,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333222,"byte_end":333299,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333300,"byte_end":333372,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333373,"byte_end":333442,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333443,"byte_end":333521,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333522,"byte_end":333525,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333526,"byte_end":333539,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333540,"byte_end":333543,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333544,"byte_end":333551,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333552,"byte_end":333585,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333586,"byte_end":333609,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333610,"byte_end":333651,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333652,"byte_end":333698,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333699,"byte_end":333702,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333703,"byte_end":333762,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333763,"byte_end":333785,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333786,"byte_end":333820,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333821,"byte_end":333830,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333831,"byte_end":333834,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333835,"byte_end":333858,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333859,"byte_end":333898,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333899,"byte_end":333935,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333936,"byte_end":333979,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333980,"byte_end":333996,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":333997,"byte_end":334017,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334018,"byte_end":334027,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334028,"byte_end":334035,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334036,"byte_end":334039,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334040,"byte_end":334105,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334106,"byte_end":334148,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334149,"byte_end":334158,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334159,"byte_end":334166,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11890},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334547,"byte_end":334556,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":11894},{"krate":0,"index":11895},{"krate":0,"index":11896}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11947},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":336464,"byte_end":336476,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":11951},{"krate":0,"index":11952},{"krate":0,"index":11953},{"krate":0,"index":11954},{"krate":0,"index":11955}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12016},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":340020,"byte_end":340032,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":12020},{"krate":0,"index":12021},{"krate":0,"index":12022},{"krate":0,"index":12023},{"krate":0,"index":12024}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14626},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10703479,"byte_end":10703497,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14628},{"krate":0,"index":14629},{"krate":0,"index":14630}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14582},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10706037,"byte_end":10706048,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14584},{"krate":0,"index":14585},{"krate":0,"index":14586}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14516},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10708580,"byte_end":10708600,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14520},{"krate":0,"index":14521},{"krate":0,"index":14522},{"krate":0,"index":14523}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12266},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":343716,"byte_end":343729,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":12268},{"krate":0,"index":12269}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":343508,"byte_end":343592,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":343610,"byte_end":343658,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":4313},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277035,"byte_end":277047,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4330},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4365}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":276973,"byte_end":277024,"line_start":144,"line_end":144,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277589,"byte_end":277597,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277065,"byte_end":277139,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277144,"byte_end":277170,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277175,"byte_end":277178,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277183,"byte_end":277197,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277202,"byte_end":277205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277210,"byte_end":277217,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277222,"byte_end":277263,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277268,"byte_end":277314,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277319,"byte_end":277322,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277327,"byte_end":277347,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277352,"byte_end":277397,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277402,"byte_end":277433,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277438,"byte_end":277441,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277446,"byte_end":277500,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277505,"byte_end":277556,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277561,"byte_end":277569,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277574,"byte_end":277581,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278293,"byte_end":278299,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277773,"byte_end":277846,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277851,"byte_end":277882,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277887,"byte_end":277890,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277895,"byte_end":277909,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277914,"byte_end":277917,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277922,"byte_end":277929,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277934,"byte_end":277975,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277980,"byte_end":278026,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278031,"byte_end":278034,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278039,"byte_end":278059,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278064,"byte_end":278105,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278110,"byte_end":278141,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278146,"byte_end":278149,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278154,"byte_end":278207,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278212,"byte_end":278260,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278265,"byte_end":278273,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278278,"byte_end":278285,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279008,"byte_end":279015,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278489,"byte_end":278560,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278565,"byte_end":278596,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278601,"byte_end":278604,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278609,"byte_end":278623,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278628,"byte_end":278631,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278636,"byte_end":278643,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278648,"byte_end":278689,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278694,"byte_end":278740,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278745,"byte_end":278748,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278753,"byte_end":278773,"line_start":205,"line_end":205,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278778,"byte_end":278819,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278824,"byte_end":278856,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278861,"byte_end":278864,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278869,"byte_end":278922,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278927,"byte_end":278975,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278980,"byte_end":278988,"line_start":211,"line_end":211,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":278993,"byte_end":279000,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280620,"byte_end":280628,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279207,"byte_end":279283,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279288,"byte_end":279328,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279333,"byte_end":279336,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279341,"byte_end":279417,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279422,"byte_end":279498,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279503,"byte_end":279576,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279581,"byte_end":279623,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279628,"byte_end":279631,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279636,"byte_end":279709,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279714,"byte_end":279745,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279750,"byte_end":279753,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279758,"byte_end":279832,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279837,"byte_end":279911,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279916,"byte_end":279932,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279937,"byte_end":279940,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":279945,"byte_end":280016,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280021,"byte_end":280047,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280052,"byte_end":280055,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280060,"byte_end":280132,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280137,"byte_end":280186,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280191,"byte_end":280194,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280199,"byte_end":280213,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280218,"byte_end":280221,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280226,"byte_end":280233,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280238,"byte_end":280269,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280274,"byte_end":280298,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280303,"byte_end":280341,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280346,"byte_end":280349,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280354,"byte_end":280410,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280415,"byte_end":280418,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280423,"byte_end":280458,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280463,"byte_end":280502,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280507,"byte_end":280531,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280536,"byte_end":280552,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280557,"byte_end":280573,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280578,"byte_end":280588,"line_start":256,"line_end":256,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280593,"byte_end":280600,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280605,"byte_end":280612,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281780,"byte_end":281787,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280881,"byte_end":280946,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":280951,"byte_end":281000,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281005,"byte_end":281008,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281013,"byte_end":281092,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281097,"byte_end":281171,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281176,"byte_end":281252,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281257,"byte_end":281302,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281307,"byte_end":281310,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281315,"byte_end":281390,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281395,"byte_end":281435,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281440,"byte_end":281443,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281448,"byte_end":281557,"line_start":279,"line_end":279,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281562,"byte_end":281636,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281641,"byte_end":281657,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281662,"byte_end":281665,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281670,"byte_end":281741,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":281746,"byte_end":281772,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282339,"byte_end":282349,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282036,"byte_end":282110,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282115,"byte_end":282125,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282130,"byte_end":282133,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282138,"byte_end":282208,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282213,"byte_end":282289,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282294,"byte_end":282331,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282838,"byte_end":282849,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282547,"byte_end":282626,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282631,"byte_end":282634,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282639,"byte_end":282709,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282714,"byte_end":282788,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":282793,"byte_end":282830,"line_start":312,"line_end":312,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283770,"byte_end":283781,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283052,"byte_end":283105,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283110,"byte_end":283154,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283159,"byte_end":283162,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283167,"byte_end":283216,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283221,"byte_end":283294,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283299,"byte_end":283319,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283324,"byte_end":283327,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283332,"byte_end":283346,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283351,"byte_end":283354,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283359,"byte_end":283366,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283371,"byte_end":283430,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283435,"byte_end":283438,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283443,"byte_end":283462,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283467,"byte_end":283485,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283490,"byte_end":283562,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283567,"byte_end":283597,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283602,"byte_end":283609,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283614,"byte_end":283688,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283693,"byte_end":283696,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283701,"byte_end":283750,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283755,"byte_end":283762,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284676,"byte_end":284684,"line_start":369,"line_end":369,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":283937,"byte_end":284011,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284016,"byte_end":284090,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284095,"byte_end":284107,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284112,"byte_end":284115,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284120,"byte_end":284187,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284192,"byte_end":284264,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284269,"byte_end":284308,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284313,"byte_end":284316,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284321,"byte_end":284335,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284340,"byte_end":284343,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284348,"byte_end":284355,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284360,"byte_end":284401,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284406,"byte_end":284452,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284457,"byte_end":284460,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284465,"byte_end":284522,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284527,"byte_end":284530,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284535,"byte_end":284589,"line_start":365,"line_end":365,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284594,"byte_end":284643,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284648,"byte_end":284656,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284661,"byte_end":284668,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286036,"byte_end":286048,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284851,"byte_end":284920,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284925,"byte_end":284981,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284986,"byte_end":284989,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":284994,"byte_end":285069,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285074,"byte_end":285144,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285149,"byte_end":285187,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285192,"byte_end":285195,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285200,"byte_end":285278,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285283,"byte_end":285343,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285348,"byte_end":285405,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285410,"byte_end":285477,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285482,"byte_end":285512,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285517,"byte_end":285520,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285525,"byte_end":285539,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285544,"byte_end":285547,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285552,"byte_end":285559,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285564,"byte_end":285605,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285610,"byte_end":285634,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285639,"byte_end":285685,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285690,"byte_end":285693,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285698,"byte_end":285719,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285724,"byte_end":285727,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285732,"byte_end":285737,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285742,"byte_end":285803,"line_start":399,"line_end":399,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285808,"byte_end":285830,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285835,"byte_end":285899,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285904,"byte_end":285915,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285920,"byte_end":285959,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285964,"byte_end":285969,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285974,"byte_end":285977,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":285982,"byte_end":286003,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286008,"byte_end":286016,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286021,"byte_end":286028,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287061,"byte_end":287075,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286312,"byte_end":286386,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286391,"byte_end":286414,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286419,"byte_end":286422,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286427,"byte_end":286458,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286463,"byte_end":286540,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286545,"byte_end":286574,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286579,"byte_end":286582,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286587,"byte_end":286601,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286606,"byte_end":286609,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286614,"byte_end":286621,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286626,"byte_end":286667,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286672,"byte_end":286696,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286701,"byte_end":286747,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286752,"byte_end":286755,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286760,"byte_end":286829,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286834,"byte_end":286904,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286909,"byte_end":286912,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286917,"byte_end":286984,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":286989,"byte_end":287028,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287033,"byte_end":287041,"line_start":437,"line_end":437,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287046,"byte_end":287053,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288108,"byte_end":288122,"line_start":469,"line_end":469,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287352,"byte_end":287426,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287431,"byte_end":287454,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287459,"byte_end":287462,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287467,"byte_end":287498,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287503,"byte_end":287580,"line_start":452,"line_end":452,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287585,"byte_end":287614,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287619,"byte_end":287622,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287627,"byte_end":287641,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287646,"byte_end":287649,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287654,"byte_end":287661,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287666,"byte_end":287707,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287712,"byte_end":287736,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287741,"byte_end":287787,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287792,"byte_end":287795,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287800,"byte_end":287876,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287881,"byte_end":287951,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287956,"byte_end":287959,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":287964,"byte_end":288031,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288036,"byte_end":288075,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288080,"byte_end":288088,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288093,"byte_end":288100,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290037,"byte_end":290060,"line_start":521,"line_end":521,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288399,"byte_end":288481,"line_start":478,"line_end":478,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288486,"byte_end":288560,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288565,"byte_end":288615,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288620,"byte_end":288623,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288628,"byte_end":288650,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288655,"byte_end":288741,"line_start":483,"line_end":483,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288746,"byte_end":288831,"line_start":484,"line_end":484,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288836,"byte_end":288864,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288869,"byte_end":288872,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288877,"byte_end":288952,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":288957,"byte_end":289014,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289019,"byte_end":289022,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289027,"byte_end":289041,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289046,"byte_end":289049,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289054,"byte_end":289061,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289066,"byte_end":289107,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289112,"byte_end":289146,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289151,"byte_end":289208,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289213,"byte_end":289216,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289221,"byte_end":289261,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289266,"byte_end":289306,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289311,"byte_end":289352,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289357,"byte_end":289360,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289365,"byte_end":289416,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289421,"byte_end":289474,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289479,"byte_end":289501,"line_start":503,"line_end":503,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289506,"byte_end":289531,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289536,"byte_end":289598,"line_start":505,"line_end":505,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289603,"byte_end":289618,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289623,"byte_end":289632,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289637,"byte_end":289643,"line_start":508,"line_end":508,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289648,"byte_end":289651,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289656,"byte_end":289682,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289687,"byte_end":289754,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289759,"byte_end":289773,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289778,"byte_end":289781,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289786,"byte_end":289847,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289852,"byte_end":289880,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289885,"byte_end":289935,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289940,"byte_end":289948,"line_start":517,"line_end":517,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289953,"byte_end":289960,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":289965,"byte_end":289999,"line_start":519,"line_end":519,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290004,"byte_end":290029,"line_start":520,"line_end":520,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291509,"byte_end":291520,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290470,"byte_end":290522,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290527,"byte_end":290594,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290599,"byte_end":290602,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290607,"byte_end":290681,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290686,"byte_end":290767,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290772,"byte_end":290842,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290847,"byte_end":290850,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290855,"byte_end":290923,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290928,"byte_end":290931,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290936,"byte_end":290950,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290955,"byte_end":290958,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290963,"byte_end":290970,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":290975,"byte_end":291016,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291021,"byte_end":291052,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291057,"byte_end":291095,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291100,"byte_end":291120,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291125,"byte_end":291128,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291133,"byte_end":291170,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291175,"byte_end":291178,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291183,"byte_end":291210,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291215,"byte_end":291239,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291244,"byte_end":291290,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291295,"byte_end":291304,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291309,"byte_end":291352,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291357,"byte_end":291364,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291369,"byte_end":291372,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291377,"byte_end":291440,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291445,"byte_end":291476,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291481,"byte_end":291489,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291494,"byte_end":291501,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292991,"byte_end":293001,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291703,"byte_end":291776,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291781,"byte_end":291815,"line_start":576,"line_end":576,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291820,"byte_end":291823,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291828,"byte_end":291903,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291908,"byte_end":291983,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":291988,"byte_end":292061,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292066,"byte_end":292137,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292142,"byte_end":292192,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292197,"byte_end":292200,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292205,"byte_end":292276,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292281,"byte_end":292284,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292289,"byte_end":292365,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292370,"byte_end":292440,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292445,"byte_end":292470,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292475,"byte_end":292478,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292483,"byte_end":292497,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292502,"byte_end":292509,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292514,"byte_end":292555,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292560,"byte_end":292584,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292589,"byte_end":292646,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292651,"byte_end":292654,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292659,"byte_end":292739,"line_start":596,"line_end":596,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292744,"byte_end":292787,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292792,"byte_end":292825,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292830,"byte_end":292837,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292842,"byte_end":292845,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292850,"byte_end":292898,"line_start":601,"line_end":601,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292903,"byte_end":292958,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292963,"byte_end":292971,"line_start":603,"line_end":603,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":292976,"byte_end":292983,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294628,"byte_end":294642,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293252,"byte_end":293314,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293319,"byte_end":293387,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293392,"byte_end":293426,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293431,"byte_end":293434,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293439,"byte_end":293514,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293519,"byte_end":293594,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293599,"byte_end":293675,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293680,"byte_end":293745,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293750,"byte_end":293753,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293758,"byte_end":293829,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293834,"byte_end":293837,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293842,"byte_end":293918,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":293923,"byte_end":293997,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294002,"byte_end":294027,"line_start":627,"line_end":627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294032,"byte_end":294035,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294040,"byte_end":294054,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294059,"byte_end":294066,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294071,"byte_end":294112,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294117,"byte_end":294174,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294179,"byte_end":294204,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294209,"byte_end":294212,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294217,"byte_end":294287,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294292,"byte_end":294347,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294352,"byte_end":294414,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294419,"byte_end":294434,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294439,"byte_end":294446,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294451,"byte_end":294454,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294459,"byte_end":294480,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294485,"byte_end":294534,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294539,"byte_end":294595,"line_start":643,"line_end":643,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294600,"byte_end":294608,"line_start":644,"line_end":644,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294613,"byte_end":294620,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296334,"byte_end":296345,"line_start":693,"line_end":693,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294919,"byte_end":294984,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294989,"byte_end":294992,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":294997,"byte_end":295070,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295075,"byte_end":295148,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295153,"byte_end":295226,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295231,"byte_end":295301,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295306,"byte_end":295309,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295314,"byte_end":295328,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295333,"byte_end":295336,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295341,"byte_end":295348,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295353,"byte_end":295394,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295399,"byte_end":295430,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295435,"byte_end":295486,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295491,"byte_end":295511,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295516,"byte_end":295519,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295524,"byte_end":295563,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295568,"byte_end":295607,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295612,"byte_end":295651,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295656,"byte_end":295659,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295664,"byte_end":295691,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295696,"byte_end":295739,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295744,"byte_end":295751,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295756,"byte_end":295783,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295788,"byte_end":295831,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295836,"byte_end":295880,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295885,"byte_end":295892,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295897,"byte_end":295924,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295929,"byte_end":295974,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295979,"byte_end":296024,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296029,"byte_end":296073,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296078,"byte_end":296085,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296090,"byte_end":296093,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296098,"byte_end":296137,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296142,"byte_end":296191,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296196,"byte_end":296245,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296250,"byte_end":296300,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296305,"byte_end":296314,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296319,"byte_end":296326,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297937,"byte_end":297945,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296650,"byte_end":296720,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296725,"byte_end":296785,"line_start":705,"line_end":705,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296790,"byte_end":296793,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296798,"byte_end":296868,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296873,"byte_end":296949,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296954,"byte_end":297030,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297035,"byte_end":297105,"line_start":710,"line_end":710,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297110,"byte_end":297136,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297141,"byte_end":297144,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297149,"byte_end":297229,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297234,"byte_end":297303,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297308,"byte_end":297329,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297334,"byte_end":297337,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297342,"byte_end":297356,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297361,"byte_end":297364,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297369,"byte_end":297376,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297381,"byte_end":297422,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297427,"byte_end":297473,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297478,"byte_end":297481,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297486,"byte_end":297555,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297560,"byte_end":297637,"line_start":724,"line_end":724,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297642,"byte_end":297675,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297680,"byte_end":297683,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297688,"byte_end":297774,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297779,"byte_end":297865,"line_start":728,"line_end":728,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297870,"byte_end":297904,"line_start":729,"line_end":729,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297909,"byte_end":297917,"line_start":730,"line_end":730,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":297922,"byte_end":297929,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299471,"byte_end":299481,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298225,"byte_end":298287,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298292,"byte_end":298367,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298372,"byte_end":298375,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298380,"byte_end":298451,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298456,"byte_end":298532,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298537,"byte_end":298576,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298581,"byte_end":298584,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298589,"byte_end":298675,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298680,"byte_end":298683,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298688,"byte_end":298772,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298777,"byte_end":298833,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298838,"byte_end":298841,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298846,"byte_end":298860,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298865,"byte_end":298868,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298873,"byte_end":298880,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298885,"byte_end":298926,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298931,"byte_end":298962,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":298967,"byte_end":299005,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299010,"byte_end":299030,"line_start":759,"line_end":759,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299035,"byte_end":299038,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299043,"byte_end":299104,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299109,"byte_end":299112,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299117,"byte_end":299144,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299149,"byte_end":299180,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299185,"byte_end":299211,"line_start":765,"line_end":765,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299216,"byte_end":299286,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299291,"byte_end":299300,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299305,"byte_end":299312,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299317,"byte_end":299320,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299325,"byte_end":299364,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299369,"byte_end":299372,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299377,"byte_end":299437,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299442,"byte_end":299451,"line_start":773,"line_end":773,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299456,"byte_end":299463,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302203,"byte_end":302223,"line_start":842,"line_end":842,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299735,"byte_end":299813,"line_start":783,"line_end":783,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299818,"byte_end":299821,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299826,"byte_end":299931,"line_start":785,"line_end":785,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299936,"byte_end":299979,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299984,"byte_end":299987,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299992,"byte_end":300060,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300065,"byte_end":300138,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300143,"byte_end":300199,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300204,"byte_end":300207,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300212,"byte_end":300287,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300292,"byte_end":300365,"line_start":793,"line_end":793,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300370,"byte_end":300435,"line_start":794,"line_end":794,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300440,"byte_end":300443,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300448,"byte_end":300523,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300528,"byte_end":300585,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300590,"byte_end":300593,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300598,"byte_end":300612,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300617,"byte_end":300620,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300625,"byte_end":300677,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300682,"byte_end":300689,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300694,"byte_end":300735,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300740,"byte_end":300774,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300779,"byte_end":300836,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300841,"byte_end":300844,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300849,"byte_end":300899,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300904,"byte_end":300954,"line_start":808,"line_end":808,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300959,"byte_end":300962,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300967,"byte_end":301042,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301047,"byte_end":301050,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301055,"byte_end":301121,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301126,"byte_end":301129,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301134,"byte_end":301159,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301164,"byte_end":301218,"line_start":815,"line_end":815,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301223,"byte_end":301226,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301231,"byte_end":301256,"line_start":817,"line_end":817,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301261,"byte_end":301315,"line_start":818,"line_end":818,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301320,"byte_end":301323,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301328,"byte_end":301372,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301377,"byte_end":301413,"line_start":821,"line_end":821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301418,"byte_end":301425,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301430,"byte_end":301433,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301438,"byte_end":301498,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301503,"byte_end":301510,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301515,"byte_end":301556,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301561,"byte_end":301592,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301597,"byte_end":301648,"line_start":828,"line_end":828,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301653,"byte_end":301656,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301661,"byte_end":301715,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301720,"byte_end":301786,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301791,"byte_end":301794,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301799,"byte_end":301848,"line_start":833,"line_end":833,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301853,"byte_end":301907,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301912,"byte_end":301915,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301920,"byte_end":301973,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301978,"byte_end":302050,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302055,"byte_end":302114,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302119,"byte_end":302126,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302131,"byte_end":302165,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302170,"byte_end":302195,"line_start":841,"line_end":841,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305204,"byte_end":305216,"line_start":918,"line_end":918,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302500,"byte_end":302566,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302571,"byte_end":302574,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302579,"byte_end":302684,"line_start":854,"line_end":854,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302689,"byte_end":302732,"line_start":855,"line_end":855,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302737,"byte_end":302740,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302745,"byte_end":302813,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302818,"byte_end":302894,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302899,"byte_end":302929,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302934,"byte_end":302937,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302942,"byte_end":303017,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303022,"byte_end":303095,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303100,"byte_end":303165,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303170,"byte_end":303173,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303178,"byte_end":303253,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303258,"byte_end":303315,"line_start":866,"line_end":866,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303320,"byte_end":303323,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303328,"byte_end":303342,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303347,"byte_end":303350,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303355,"byte_end":303405,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303410,"byte_end":303417,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303422,"byte_end":303463,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303468,"byte_end":303502,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303507,"byte_end":303537,"line_start":874,"line_end":874,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303542,"byte_end":303599,"line_start":875,"line_end":875,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303604,"byte_end":303607,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303612,"byte_end":303662,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303667,"byte_end":303717,"line_start":878,"line_end":878,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303722,"byte_end":303725,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303730,"byte_end":303769,"line_start":880,"line_end":880,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303774,"byte_end":303853,"line_start":881,"line_end":881,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303858,"byte_end":303861,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303866,"byte_end":303928,"line_start":883,"line_end":883,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303933,"byte_end":303936,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303941,"byte_end":304004,"line_start":885,"line_end":885,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304009,"byte_end":304012,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304017,"byte_end":304046,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304051,"byte_end":304114,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304119,"byte_end":304149,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304154,"byte_end":304168,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304173,"byte_end":304176,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304181,"byte_end":304206,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304211,"byte_end":304265,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304270,"byte_end":304324,"line_start":894,"line_end":894,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304329,"byte_end":304332,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304337,"byte_end":304381,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304386,"byte_end":304422,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304427,"byte_end":304434,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304439,"byte_end":304442,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304447,"byte_end":304507,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304512,"byte_end":304519,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304524,"byte_end":304565,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304570,"byte_end":304601,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304606,"byte_end":304657,"line_start":904,"line_end":904,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304662,"byte_end":304665,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304670,"byte_end":304724,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304729,"byte_end":304787,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304792,"byte_end":304795,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304800,"byte_end":304849,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304854,"byte_end":304908,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304913,"byte_end":304916,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304921,"byte_end":304974,"line_start":912,"line_end":912,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304979,"byte_end":305051,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305056,"byte_end":305115,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305120,"byte_end":305127,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305132,"byte_end":305166,"line_start":916,"line_end":916,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305171,"byte_end":305196,"line_start":917,"line_end":917,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305671,"byte_end":305690,"line_start":932,"line_end":932,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305563,"byte_end":305641,"line_start":930,"line_end":930,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305646,"byte_end":305663,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307984,"byte_end":307999,"line_start":998,"line_end":998,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306762,"byte_end":306844,"line_start":970,"line_end":970,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306849,"byte_end":306852,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306857,"byte_end":306972,"line_start":972,"line_end":972,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306977,"byte_end":307068,"line_start":973,"line_end":973,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307073,"byte_end":307163,"line_start":974,"line_end":974,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307168,"byte_end":307253,"line_start":975,"line_end":975,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307258,"byte_end":307261,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307266,"byte_end":307330,"line_start":977,"line_end":977,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307335,"byte_end":307392,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307397,"byte_end":307400,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307405,"byte_end":307419,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307424,"byte_end":307427,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307432,"byte_end":307439,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307444,"byte_end":307485,"line_start":983,"line_end":983,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307490,"byte_end":307536,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307541,"byte_end":307575,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307580,"byte_end":307583,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307588,"byte_end":307649,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307654,"byte_end":307700,"line_start":988,"line_end":988,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307705,"byte_end":307734,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307739,"byte_end":307742,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307747,"byte_end":307803,"line_start":991,"line_end":991,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307808,"byte_end":307846,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307851,"byte_end":307859,"line_start":993,"line_end":993,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307864,"byte_end":307871,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307876,"byte_end":307898,"line_start":995,"line_end":995,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307953,"byte_end":307976,"line_start":997,"line_end":997,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":12285},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348590,"byte_end":348594,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":12287}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348468,"byte_end":348505,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348530,"byte_end":348578,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4462},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349112,"byte_end":349116,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348646,"byte_end":348710,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348711,"byte_end":348739,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348740,"byte_end":348743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348744,"byte_end":348817,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348818,"byte_end":348873,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348874,"byte_end":348877,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348878,"byte_end":348885,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348886,"byte_end":348927,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348928,"byte_end":348971,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348972,"byte_end":348975,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348976,"byte_end":349020,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349021,"byte_end":349086,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349087,"byte_end":349096,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349097,"byte_end":349104,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12294},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349807,"byte_end":349813,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":12296}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349683,"byte_end":349722,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349747,"byte_end":349795,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4497},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350337,"byte_end":350343,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349835,"byte_end":349895,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349896,"byte_end":349899,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349900,"byte_end":349967,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":349968,"byte_end":350040,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350041,"byte_end":350098,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350099,"byte_end":350102,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350103,"byte_end":350110,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350111,"byte_end":350152,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350153,"byte_end":350196,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350197,"byte_end":350200,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350201,"byte_end":350236,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350237,"byte_end":350311,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350312,"byte_end":350321,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350322,"byte_end":350329,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12303},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351334,"byte_end":351344,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":12305}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351032,"byte_end":351092,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351093,"byte_end":351145,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351146,"byte_end":351149,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351150,"byte_end":351213,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351214,"byte_end":351249,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351274,"byte_end":351322,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4550},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353632,"byte_end":353643,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351860,"byte_end":351931,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351932,"byte_end":351999,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352000,"byte_end":352003,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352004,"byte_end":352076,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352077,"byte_end":352080,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352081,"byte_end":352155,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352156,"byte_end":352208,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352209,"byte_end":352212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352213,"byte_end":352285,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352286,"byte_end":352359,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352360,"byte_end":352397,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352398,"byte_end":352401,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352402,"byte_end":352416,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352417,"byte_end":352420,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352421,"byte_end":352437,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352438,"byte_end":352441,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352442,"byte_end":352449,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352450,"byte_end":352491,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352492,"byte_end":352535,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352536,"byte_end":352539,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352540,"byte_end":352608,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352609,"byte_end":352687,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352688,"byte_end":352719,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352720,"byte_end":352741,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352742,"byte_end":352745,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352746,"byte_end":352780,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352781,"byte_end":352836,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352837,"byte_end":352840,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352841,"byte_end":352894,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352895,"byte_end":352948,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":352949,"byte_end":353002,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353003,"byte_end":353012,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353013,"byte_end":353020,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353021,"byte_end":353024,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353025,"byte_end":353061,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353062,"byte_end":353065,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353066,"byte_end":353077,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353078,"byte_end":353119,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353120,"byte_end":353163,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353164,"byte_end":353167,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353168,"byte_end":353217,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353218,"byte_end":353239,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353240,"byte_end":353317,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353318,"byte_end":353351,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353352,"byte_end":353355,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353356,"byte_end":353399,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353400,"byte_end":353443,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353444,"byte_end":353487,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353488,"byte_end":353531,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353532,"byte_end":353535,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353536,"byte_end":353565,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353566,"byte_end":353606,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353607,"byte_end":353616,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":353617,"byte_end":353624,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12312},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354034,"byte_end":354039,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":12314}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":353918,"byte_end":353956,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":353974,"byte_end":354022,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4584},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354208,"byte_end":354213,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354078,"byte_end":354126,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354127,"byte_end":354130,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354131,"byte_end":354200,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4636},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355298,"byte_end":355302,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":354991,"byte_end":355032,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355033,"byte_end":355036,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355037,"byte_end":355044,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355045,"byte_end":355086,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355087,"byte_end":355130,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355131,"byte_end":355134,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355135,"byte_end":355179,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355180,"byte_end":355235,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355236,"byte_end":355272,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355273,"byte_end":355282,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355283,"byte_end":355290,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12323},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355564,"byte_end":355568,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":12325}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12354},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356744,"byte_end":356751,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":12356}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356624,"byte_end":356666,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356684,"byte_end":356732,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4680},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356927,"byte_end":356934,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356795,"byte_end":356849,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356850,"byte_end":356853,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":356854,"byte_end":356919,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4722},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357777,"byte_end":357783,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4724}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357676,"byte_end":357716,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357717,"byte_end":357765,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4730},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358471,"byte_end":358478,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357983,"byte_end":358056,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358057,"byte_end":358060,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358061,"byte_end":358120,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358121,"byte_end":358124,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358125,"byte_end":358139,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358140,"byte_end":358143,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358144,"byte_end":358151,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358152,"byte_end":358185,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358186,"byte_end":358214,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358215,"byte_end":358218,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358219,"byte_end":358248,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358249,"byte_end":358252,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358253,"byte_end":358317,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358318,"byte_end":358371,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358372,"byte_end":358393,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358394,"byte_end":358447,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358448,"byte_end":358455,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358456,"byte_end":358463,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12367},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359198,"byte_end":359204,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12370},{"krate":0,"index":12371},{"krate":0,"index":12372}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4776},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359808,"byte_end":359814,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359332,"byte_end":359400,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359401,"byte_end":359477,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359478,"byte_end":359526,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359527,"byte_end":359530,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359531,"byte_end":359605,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359606,"byte_end":359675,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359676,"byte_end":359703,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359704,"byte_end":359707,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359708,"byte_end":359779,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":359780,"byte_end":359800,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360219,"byte_end":360226,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360111,"byte_end":360185,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360190,"byte_end":360207,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360582,"byte_end":360589,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360320,"byte_end":360388,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360393,"byte_end":360424,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360429,"byte_end":360432,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360437,"byte_end":360510,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360515,"byte_end":360570,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360964,"byte_end":360975,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360695,"byte_end":360770,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360775,"byte_end":360806,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360811,"byte_end":360814,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360819,"byte_end":360892,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360897,"byte_end":360952,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4785},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361381,"byte_end":361391,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361145,"byte_end":361208,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361213,"byte_end":361216,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361221,"byte_end":361293,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361298,"byte_end":361369,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4841},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364608,"byte_end":364614,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363166,"byte_end":363236,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363237,"byte_end":363240,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363241,"byte_end":363310,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363311,"byte_end":363392,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363393,"byte_end":363424,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363425,"byte_end":363428,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363429,"byte_end":363508,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363509,"byte_end":363588,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363589,"byte_end":363643,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363644,"byte_end":363647,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363648,"byte_end":363728,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363729,"byte_end":363799,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363800,"byte_end":363822,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363823,"byte_end":363826,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363827,"byte_end":363904,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363905,"byte_end":363977,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":363978,"byte_end":364055,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364056,"byte_end":364116,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364117,"byte_end":364120,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364121,"byte_end":364134,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364135,"byte_end":364138,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364139,"byte_end":364146,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364147,"byte_end":364188,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364189,"byte_end":364232,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364233,"byte_end":364236,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364237,"byte_end":364292,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364293,"byte_end":364316,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364317,"byte_end":364356,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364357,"byte_end":364394,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364395,"byte_end":364434,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364435,"byte_end":364451,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364452,"byte_end":364468,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364469,"byte_end":364478,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364479,"byte_end":364486,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364487,"byte_end":364490,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364491,"byte_end":364543,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364544,"byte_end":364582,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364583,"byte_end":364592,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364593,"byte_end":364600,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12413},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":364961,"byte_end":364967,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":12417},{"krate":0,"index":12418}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12536},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715910,"byte_end":10715924,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":12538},{"krate":0,"index":12539},{"krate":0,"index":12540},{"krate":0,"index":12541}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713844,"byte_end":10713878,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713879,"byte_end":10713882,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713883,"byte_end":10713962,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713963,"byte_end":10714034,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714035,"byte_end":10714111,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714112,"byte_end":10714160,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714161,"byte_end":10714164,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714165,"byte_end":10714244,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714245,"byte_end":10714320,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714321,"byte_end":10714399,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714400,"byte_end":10714480,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714481,"byte_end":10714510,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714511,"byte_end":10714514,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714515,"byte_end":10714593,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714594,"byte_end":10714668,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714669,"byte_end":10714744,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714745,"byte_end":10714820,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714821,"byte_end":10714896,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714897,"byte_end":10714955,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714956,"byte_end":10714959,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10714960,"byte_end":10715033,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715034,"byte_end":10715112,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715113,"byte_end":10715171,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715172,"byte_end":10715245,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715246,"byte_end":10715314,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715315,"byte_end":10715391,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715392,"byte_end":10715460,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715461,"byte_end":10715514,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715515,"byte_end":10715518,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715519,"byte_end":10715585,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715586,"byte_end":10715665,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715666,"byte_end":10715713,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715714,"byte_end":10715717,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715718,"byte_end":10715791,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715792,"byte_end":10715849,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10715850,"byte_end":10715898,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":12546},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716432,"byte_end":10716435,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716212,"byte_end":10716256,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716261,"byte_end":10716264,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716269,"byte_end":10716344,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716349,"byte_end":10716420,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":12547},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716932,"byte_end":10716935,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716659,"byte_end":10716716,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716721,"byte_end":10716724,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716729,"byte_end":10716792,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716797,"byte_end":10716861,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716866,"byte_end":10716920,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":12548},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717093,"byte_end":10717101,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717030,"byte_end":10717081,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":12549},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717525,"byte_end":10717529,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717206,"byte_end":10717239,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717244,"byte_end":10717247,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717252,"byte_end":10717328,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717333,"byte_end":10717407,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717412,"byte_end":10717485,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717490,"byte_end":10717513,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":12576},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":12577},{"krate":0,"index":12580},{"krate":0,"index":12581},{"krate":0,"index":12584},{"krate":0,"index":12587},{"krate":0,"index":12590},{"krate":0,"index":12591},{"krate":0,"index":12594},{"krate":0,"index":12595},{"krate":0,"index":12597},{"krate":0,"index":12600},{"krate":0,"index":12601},{"krate":0,"index":12603},{"krate":0,"index":12606},{"krate":0,"index":12609},{"krate":0,"index":12612},{"krate":0,"index":12613},{"krate":0,"index":12614},{"krate":0,"index":12616},{"krate":0,"index":12617},{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":12622},{"krate":0,"index":12623},{"krate":0,"index":12625},{"krate":0,"index":12626},{"krate":0,"index":12628},{"krate":0,"index":12629},{"krate":0,"index":12632},{"krate":0,"index":12635},{"krate":0,"index":12638},{"krate":0,"index":12639},{"krate":0,"index":12642},{"krate":0,"index":12645},{"krate":0,"index":12646},{"krate":0,"index":12649},{"krate":0,"index":12652},{"krate":0,"index":12653},{"krate":0,"index":12656},{"krate":0,"index":12659},{"krate":0,"index":12662},{"krate":0,"index":12665},{"krate":0,"index":12668},{"krate":0,"index":12674},{"krate":0,"index":12741},{"krate":0,"index":12742},{"krate":0,"index":12745},{"krate":0,"index":12746},{"krate":0,"index":12748},{"krate":0,"index":12749},{"krate":0,"index":12751},{"krate":0,"index":12754},{"krate":0,"index":12757},{"krate":0,"index":12821},{"krate":0,"index":12824},{"krate":0,"index":12883},{"krate":0,"index":12884},{"krate":0,"index":12887},{"krate":0,"index":12890},{"krate":0,"index":12895},{"krate":0,"index":12897},{"krate":0,"index":12899},{"krate":0,"index":12901},{"krate":0,"index":12903},{"krate":0,"index":12905},{"krate":0,"index":12908},{"krate":0,"index":12923},{"krate":0,"index":12936},{"krate":0,"index":12939},{"krate":0,"index":12943},{"krate":0,"index":12946},{"krate":0,"index":12952},{"krate":0,"index":12958},{"krate":0,"index":12963},{"krate":0,"index":12968},{"krate":0,"index":12971}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143870,"byte_end":143895,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10719894,"byte_end":10719926,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10719927,"byte_end":10719930,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10719931,"byte_end":10720006,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720007,"byte_end":10720064,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13139},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747270,"byte_end":10747280,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":13142},{"krate":0,"index":13143},{"krate":0,"index":13144}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747182,"byte_end":10747241,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13149},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747517,"byte_end":10747524,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747429,"byte_end":10747488,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13158},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747665,"byte_end":10747675,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":13161},{"krate":0,"index":13162},{"krate":0,"index":13163},{"krate":0,"index":13164}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747575,"byte_end":10747636,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13169},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747963,"byte_end":10747967,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10747869,"byte_end":10747934,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":13178},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10748104,"byte_end":10748112,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":13180},{"krate":0,"index":13181}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10748018,"byte_end":10748075,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12890},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721931,"byte_end":10721947,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12894}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720836,"byte_end":10720889,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720890,"byte_end":10720893,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720894,"byte_end":10720962,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10720963,"byte_end":10721036,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721037,"byte_end":10721113,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721114,"byte_end":10721158,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721159,"byte_end":10721162,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721163,"byte_end":10721241,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721242,"byte_end":10721300,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721301,"byte_end":10721365,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721366,"byte_end":10721419,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721420,"byte_end":10721499,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721500,"byte_end":10721529,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721530,"byte_end":10721533,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721534,"byte_end":10721604,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721605,"byte_end":10721682,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721683,"byte_end":10721734,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721735,"byte_end":10721738,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721739,"byte_end":10721812,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721813,"byte_end":10721870,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10721871,"byte_end":10721919,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":12910},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724564,"byte_end":10724567,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724293,"byte_end":10724342,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724347,"byte_end":10724350,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724355,"byte_end":10724422,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724427,"byte_end":10724501,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724506,"byte_end":10724552,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":12911},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725562,"byte_end":10725565,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725424,"byte_end":10725479,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725484,"byte_end":10725487,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725492,"byte_end":10725550,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":12912},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725729,"byte_end":10725737,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725667,"byte_end":10725717,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":12913},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10726320,"byte_end":10726324,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725950,"byte_end":10725981,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725986,"byte_end":10725989,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10725994,"byte_end":10726064,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10726069,"byte_end":10726155,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10726160,"byte_end":10726236,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10726241,"byte_end":10726308,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":12914},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10727599,"byte_end":10727603,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10727517,"byte_end":10727587,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":12915},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10727801,"byte_end":10727813,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10727719,"byte_end":10727789,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":12916},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10728142,"byte_end":10728150,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10728061,"byte_end":10728130,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":12917},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10728357,"byte_end":10728369,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10728276,"byte_end":10728345,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":12941},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743506,"byte_end":10743511,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743453,"byte_end":10743494,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":12978},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":12979},{"krate":0,"index":12980},{"krate":0,"index":12983},{"krate":0,"index":12984},{"krate":0,"index":12986},{"krate":0,"index":12989},{"krate":0,"index":12992},{"krate":0,"index":12995},{"krate":0,"index":12996},{"krate":0,"index":12999},{"krate":0,"index":13002},{"krate":0,"index":13003},{"krate":0,"index":13006},{"krate":0,"index":13009},{"krate":0,"index":13012},{"krate":0,"index":13015},{"krate":0,"index":13016},{"krate":0,"index":13019},{"krate":0,"index":13022},{"krate":0,"index":13025},{"krate":0,"index":14443},{"krate":0,"index":14446},{"krate":0,"index":13028},{"krate":0,"index":13031},{"krate":0,"index":13040},{"krate":0,"index":13043},{"krate":0,"index":13047},{"krate":0,"index":13050},{"krate":0,"index":13052},{"krate":0,"index":13056},{"krate":0,"index":13060},{"krate":0,"index":13065},{"krate":0,"index":13071},{"krate":0,"index":14434},{"krate":0,"index":14439},{"krate":0,"index":14425},{"krate":0,"index":14430},{"krate":0,"index":14418},{"krate":0,"index":14422},{"krate":0,"index":13077},{"krate":0,"index":13083},{"krate":0,"index":13085},{"krate":0,"index":13091},{"krate":0,"index":13093},{"krate":0,"index":13098}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144036,"byte_end":144061,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10760457,"byte_end":10760488,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":14443},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761528,"byte_end":10761537,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":14445}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":13033},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762019,"byte_end":10762022,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761819,"byte_end":10761858,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761863,"byte_end":10761866,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761871,"byte_end":10761941,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761946,"byte_end":10762007,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":13034},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762232,"byte_end":10762235,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762094,"byte_end":10762149,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762154,"byte_end":10762157,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762162,"byte_end":10762220,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":13035},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762351,"byte_end":10762359,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762290,"byte_end":10762339,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":13036},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762721,"byte_end":10762725,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762418,"byte_end":10762449,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762454,"byte_end":10762457,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762462,"byte_end":10762534,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762539,"byte_end":10762613,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762618,"byte_end":10762686,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762691,"byte_end":10762709,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":13037},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762891,"byte_end":10762895,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762809,"byte_end":10762879,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":13038},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763045,"byte_end":10763053,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10762964,"byte_end":10763033,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":13039},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763189,"byte_end":10763194,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763136,"byte_end":10763177,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":13050},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764901,"byte_end":10764911,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764280,"byte_end":10764354,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764355,"byte_end":10764358,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764359,"byte_end":10764438,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764439,"byte_end":10764490,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764491,"byte_end":10764565,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764566,"byte_end":10764625,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764626,"byte_end":10764629,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764630,"byte_end":10764702,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764703,"byte_end":10764753,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764754,"byte_end":10764757,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764758,"byte_end":10764835,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764836,"byte_end":10764893,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14434},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766218,"byte_end":10766222,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766128,"byte_end":10766189,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14425},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766375,"byte_end":10766382,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766287,"byte_end":10766346,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14418},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766536,"byte_end":10766544,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766450,"byte_end":10766507,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":13121},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768559,"byte_end":10768568,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768189,"byte_end":10768276,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768277,"byte_end":10768280,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768281,"byte_end":10768357,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768358,"byte_end":10768411,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768412,"byte_end":10768415,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768416,"byte_end":10768493,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10768494,"byte_end":10768551,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":4887},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4892},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4914},{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4923},{"krate":0,"index":4926},{"krate":0,"index":13185},{"krate":0,"index":13188},{"krate":0,"index":13191},{"krate":0,"index":13192},{"krate":0,"index":13195},{"krate":0,"index":13198},{"krate":0,"index":4929},{"krate":0,"index":4963},{"krate":0,"index":4964},{"krate":0,"index":4967}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366506,"byte_end":366539,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366540,"byte_end":366543,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366544,"byte_end":366569,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366570,"byte_end":366573,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366574,"byte_end":366622,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366623,"byte_end":366676,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366677,"byte_end":366725,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366726,"byte_end":366773,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366774,"byte_end":366777,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366778,"byte_end":366852,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":366853,"byte_end":366925,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4957},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368114,"byte_end":368122,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368071,"byte_end":368103,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":369119,"byte_end":369124,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368136,"byte_end":368201,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368206,"byte_end":368221,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368226,"byte_end":368229,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368234,"byte_end":368304,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368309,"byte_end":368328,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368333,"byte_end":368336,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368341,"byte_end":368410,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368415,"byte_end":368488,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368493,"byte_end":368532,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368537,"byte_end":368540,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368545,"byte_end":368611,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368616,"byte_end":368682,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368687,"byte_end":368758,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368763,"byte_end":368819,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368824,"byte_end":368827,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368832,"byte_end":368839,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368844,"byte_end":368882,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368887,"byte_end":368919,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368924,"byte_end":368927,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368932,"byte_end":368978,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368983,"byte_end":368986,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368991,"byte_end":369028,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":369033,"byte_end":369069,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":369074,"byte_end":369081,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":369086,"byte_end":369111,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":4960},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":370878,"byte_end":370891,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":4961}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":370830,"byte_end":370867,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371934,"byte_end":371945,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":4960},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":370910,"byte_end":370975,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":370980,"byte_end":370995,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371000,"byte_end":371003,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371008,"byte_end":371078,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371083,"byte_end":371102,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371107,"byte_end":371110,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371115,"byte_end":371184,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371189,"byte_end":371262,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371267,"byte_end":371306,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371311,"byte_end":371314,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371319,"byte_end":371385,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371390,"byte_end":371456,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371461,"byte_end":371532,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371537,"byte_end":371593,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371598,"byte_end":371601,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371606,"byte_end":371613,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371618,"byte_end":371655,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371660,"byte_end":371697,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371702,"byte_end":371705,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371710,"byte_end":371746,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371751,"byte_end":371788,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371793,"byte_end":371796,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371801,"byte_end":371838,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371843,"byte_end":371884,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371889,"byte_end":371896,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":371901,"byte_end":371926,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":4970},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","parent":null,"children":[{"krate":0,"index":4971}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373350,"byte_end":373392,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373393,"byte_end":373396,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373397,"byte_end":373463,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4971},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":374100,"byte_end":374105,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373465,"byte_end":373500,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373501,"byte_end":373504,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373505,"byte_end":373580,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373581,"byte_end":373618,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373619,"byte_end":373622,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373623,"byte_end":373687,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373688,"byte_end":373691,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373692,"byte_end":373763,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373764,"byte_end":373815,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373816,"byte_end":373908,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373909,"byte_end":373912,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373913,"byte_end":373984,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":373985,"byte_end":374090,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":4972},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4983},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4990},{"krate":0,"index":4993},{"krate":0,"index":4996},{"krate":0,"index":4999},{"krate":0,"index":5002},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5187},{"krate":0,"index":5190},{"krate":0,"index":5262},{"krate":0,"index":5265},{"krate":0,"index":5321},{"krate":0,"index":5324},{"krate":0,"index":5354},{"krate":0,"index":5357},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5447},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5514},{"krate":0,"index":5517},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5558},{"krate":0,"index":5589},{"krate":0,"index":5592},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5734},{"krate":0,"index":5737},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5821},{"krate":0,"index":5824},{"krate":0,"index":5868},{"krate":0,"index":5871},{"krate":0,"index":5920},{"krate":0,"index":5923},{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5999},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6040},{"krate":0,"index":6043},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6082},{"krate":0,"index":6085},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6280},{"krate":0,"index":6283},{"krate":0,"index":6317},{"krate":0,"index":6320},{"krate":0,"index":6356},{"krate":0,"index":6359},{"krate":0,"index":6374},{"krate":0,"index":6376},{"krate":0,"index":6385},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6392},{"krate":0,"index":6400},{"krate":0,"index":6402},{"krate":0,"index":6404}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11723,"byte_end":11745,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11792,"byte_end":11815,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374136,"byte_end":374157,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374158,"byte_end":374161,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374162,"byte_end":374235,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374236,"byte_end":374315,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374316,"byte_end":374389,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374390,"byte_end":374465,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374466,"byte_end":374545,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374546,"byte_end":374621,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374622,"byte_end":374650,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374651,"byte_end":374654,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374655,"byte_end":374734,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374735,"byte_end":374813,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374814,"byte_end":374890,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374891,"byte_end":374933,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374934,"byte_end":374937,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":374938,"byte_end":375002,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":375003,"byte_end":375060,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13201},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402456,"byte_end":402466,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":401807,"byte_end":401872,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":401873,"byte_end":401922,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":401923,"byte_end":401994,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":401995,"byte_end":401998,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":401999,"byte_end":402075,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402076,"byte_end":402147,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402148,"byte_end":402216,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402217,"byte_end":402285,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402286,"byte_end":402361,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402362,"byte_end":402376,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":5066},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403031,"byte_end":403034,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402961,"byte_end":403019,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5067},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403143,"byte_end":403150,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403080,"byte_end":403131,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5068},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403264,"byte_end":403271,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403193,"byte_end":403252,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403392,"byte_end":403402,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403326,"byte_end":403380,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":13234},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408553,"byte_end":408562,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":13236},{"krate":0,"index":13237},{"krate":0,"index":13238},{"krate":0,"index":13239}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5166},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408857,"byte_end":408860,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408715,"byte_end":408807,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408812,"byte_end":408845,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5167},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409022,"byte_end":409035,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408945,"byte_end":409010,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5168},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409541,"byte_end":409547,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409381,"byte_end":409437,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409442,"byte_end":409445,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409450,"byte_end":409529,"line_start":62,"line_end":62,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":13287},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416576,"byte_end":416585,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":13289},{"krate":0,"index":13290},{"krate":0,"index":13291}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5241},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416860,"byte_end":416863,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416718,"byte_end":416810,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416815,"byte_end":416848,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":417025,"byte_end":417038,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416948,"byte_end":417013,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":418150,"byte_end":418156,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":418082,"byte_end":418138,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13336},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421036,"byte_end":421041,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":13339},{"krate":0,"index":13340},{"krate":0,"index":13341}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421407,"byte_end":421414,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421333,"byte_end":421395,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421746,"byte_end":421753,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421483,"byte_end":421553,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421558,"byte_end":421561,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421566,"byte_end":421639,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421644,"byte_end":421717,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421722,"byte_end":421734,"line_start":41,"line_end":41,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422112,"byte_end":422123,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421842,"byte_end":421919,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421924,"byte_end":421927,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421932,"byte_end":422005,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422010,"byte_end":422083,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422088,"byte_end":422100,"line_start":50,"line_end":50,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422326,"byte_end":422336,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422258,"byte_end":422314,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":13385},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425150,"byte_end":425155,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":13388}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":424988,"byte_end":425053,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425071,"byte_end":425138,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":5394},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426708,"byte_end":426712,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":425859,"byte_end":425934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":425935,"byte_end":425938,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":425939,"byte_end":426022,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426023,"byte_end":426103,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426104,"byte_end":426176,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426177,"byte_end":426190,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426191,"byte_end":426194,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426195,"byte_end":426242,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426243,"byte_end":426246,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426247,"byte_end":426261,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426262,"byte_end":426265,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426266,"byte_end":426273,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426274,"byte_end":426315,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426316,"byte_end":426367,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426368,"byte_end":426371,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426372,"byte_end":426415,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426416,"byte_end":426463,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426464,"byte_end":426467,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426468,"byte_end":426521,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426522,"byte_end":426548,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426549,"byte_end":426552,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426553,"byte_end":426578,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426579,"byte_end":426632,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426633,"byte_end":426692,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":426693,"byte_end":426700,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13402},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":427057,"byte_end":427061,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":13406}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5439},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428461,"byte_end":428469,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427605,"byte_end":427680,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427681,"byte_end":427684,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427685,"byte_end":427771,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427772,"byte_end":427852,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427853,"byte_end":427925,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427926,"byte_end":427939,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427940,"byte_end":427943,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427944,"byte_end":427991,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427992,"byte_end":427995,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":427996,"byte_end":428010,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428011,"byte_end":428014,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428015,"byte_end":428022,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428023,"byte_end":428064,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428065,"byte_end":428116,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428117,"byte_end":428120,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428121,"byte_end":428164,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428165,"byte_end":428212,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428213,"byte_end":428216,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428217,"byte_end":428274,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428275,"byte_end":428301,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428302,"byte_end":428305,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428306,"byte_end":428331,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428332,"byte_end":428385,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428386,"byte_end":428445,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428446,"byte_end":428453,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13456},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428802,"byte_end":428809,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":13460},{"krate":0,"index":13461},{"krate":0,"index":13462}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13509},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430731,"byte_end":430737,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":13511}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":429964,"byte_end":430027,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430028,"byte_end":430061,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430062,"byte_end":430065,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430066,"byte_end":430134,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430135,"byte_end":430217,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430218,"byte_end":430297,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430298,"byte_end":430323,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430324,"byte_end":430327,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430328,"byte_end":430394,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430395,"byte_end":430462,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430463,"byte_end":430496,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430497,"byte_end":430500,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430501,"byte_end":430540,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430541,"byte_end":430580,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430581,"byte_end":430622,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430623,"byte_end":430686,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5492},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431317,"byte_end":431320,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430796,"byte_end":430871,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430876,"byte_end":430879,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430884,"byte_end":430958,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430963,"byte_end":431031,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431036,"byte_end":431074,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431079,"byte_end":431082,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431087,"byte_end":431101,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431106,"byte_end":431109,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431114,"byte_end":431121,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431126,"byte_end":431154,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431159,"byte_end":431162,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431167,"byte_end":431206,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431211,"byte_end":431259,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431264,"byte_end":431293,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431298,"byte_end":431305,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5493},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431744,"byte_end":431754,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431399,"byte_end":431456,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431461,"byte_end":431464,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431469,"byte_end":431483,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431488,"byte_end":431491,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431496,"byte_end":431503,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431508,"byte_end":431536,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431541,"byte_end":431544,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431549,"byte_end":431588,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431593,"byte_end":431641,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431646,"byte_end":431675,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431680,"byte_end":431683,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431688,"byte_end":431720,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431725,"byte_end":431732,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432162,"byte_end":432169,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431811,"byte_end":431871,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431876,"byte_end":431879,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431884,"byte_end":431898,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431903,"byte_end":431906,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431911,"byte_end":431918,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431923,"byte_end":431951,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431956,"byte_end":431959,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":431964,"byte_end":432003,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432008,"byte_end":432056,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432061,"byte_end":432090,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432095,"byte_end":432098,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432103,"byte_end":432138,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432143,"byte_end":432150,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5495},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432741,"byte_end":432748,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432225,"byte_end":432293,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432298,"byte_end":432301,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432306,"byte_end":432379,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432384,"byte_end":432446,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432451,"byte_end":432454,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432459,"byte_end":432473,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432478,"byte_end":432481,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432486,"byte_end":432493,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432498,"byte_end":432526,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432531,"byte_end":432534,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432539,"byte_end":432582,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432587,"byte_end":432635,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432640,"byte_end":432669,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432674,"byte_end":432677,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432682,"byte_end":432717,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432722,"byte_end":432729,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5496},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433406,"byte_end":433414,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432812,"byte_end":432860,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432865,"byte_end":432868,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432873,"byte_end":432887,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432892,"byte_end":432895,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432900,"byte_end":432907,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432912,"byte_end":432953,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":432958,"byte_end":433012,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433017,"byte_end":433020,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433025,"byte_end":433077,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433082,"byte_end":433085,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433090,"byte_end":433125,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433130,"byte_end":433133,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433138,"byte_end":433181,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433186,"byte_end":433221,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433226,"byte_end":433229,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433234,"byte_end":433278,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433283,"byte_end":433318,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433323,"byte_end":433382,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433387,"byte_end":433394,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433882,"byte_end":433894,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433472,"byte_end":433509,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433514,"byte_end":433517,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433522,"byte_end":433536,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433541,"byte_end":433544,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433549,"byte_end":433556,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433561,"byte_end":433589,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433594,"byte_end":433597,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433602,"byte_end":433654,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433659,"byte_end":433662,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433667,"byte_end":433702,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433707,"byte_end":433710,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433715,"byte_end":433740,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433745,"byte_end":433780,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433785,"byte_end":433788,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433793,"byte_end":433818,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433823,"byte_end":433858,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433863,"byte_end":433870,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5541},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436730,"byte_end":436735,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5542}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436629,"byte_end":436669,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436670,"byte_end":436718,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5543},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437295,"byte_end":437300,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436756,"byte_end":436803,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436804,"byte_end":436807,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436808,"byte_end":436880,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436881,"byte_end":436884,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436885,"byte_end":436899,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436900,"byte_end":436903,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436904,"byte_end":436969,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436970,"byte_end":436973,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436974,"byte_end":436981,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":436982,"byte_end":437023,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437024,"byte_end":437066,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437067,"byte_end":437070,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437071,"byte_end":437106,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437107,"byte_end":437140,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437141,"byte_end":437187,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437188,"byte_end":437219,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437220,"byte_end":437279,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437280,"byte_end":437287,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13537},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438368,"byte_end":438375,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":13540}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438198,"byte_end":438271,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438289,"byte_end":438356,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13545},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440147,"byte_end":440152,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":13548}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":439985,"byte_end":440050,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440068,"byte_end":440135,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13558},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":441072,"byte_end":441077,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":13560},{"krate":0,"index":13561},{"krate":0,"index":13562},{"krate":0,"index":13563}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13601},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442277,"byte_end":442281,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":13604},{"krate":0,"index":13605}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442118,"byte_end":442180,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442198,"byte_end":442265,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13610},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443173,"byte_end":443185,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":13613},{"krate":0,"index":13614}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":442996,"byte_end":443076,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443094,"byte_end":443161,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13619},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444151,"byte_end":444160,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":13622},{"krate":0,"index":13623}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":443980,"byte_end":444054,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444072,"byte_end":444139,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13628},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445500,"byte_end":445508,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":13631},{"krate":0,"index":13632},{"krate":0,"index":13633},{"krate":0,"index":13634}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445328,"byte_end":445403,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445421,"byte_end":445488,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13639},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447316,"byte_end":447325,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":13642},{"krate":0,"index":13643},{"krate":0,"index":13644}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447143,"byte_end":447219,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447237,"byte_end":447304,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13649},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450331,"byte_end":450343,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":13652},{"krate":0,"index":13653},{"krate":0,"index":13654},{"krate":0,"index":13655}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450152,"byte_end":450234,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450252,"byte_end":450319,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13660},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452181,"byte_end":452190,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":13663},{"krate":0,"index":13664},{"krate":0,"index":13665},{"krate":0,"index":13666}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452007,"byte_end":452084,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452102,"byte_end":452169,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5991},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":453969,"byte_end":453975,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5992}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":453867,"byte_end":453908,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":453909,"byte_end":453957,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5993},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454532,"byte_end":454538,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":453995,"byte_end":454064,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454065,"byte_end":454068,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454069,"byte_end":454149,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454150,"byte_end":454169,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454170,"byte_end":454173,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454174,"byte_end":454188,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454189,"byte_end":454192,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454193,"byte_end":454200,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454201,"byte_end":454242,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454243,"byte_end":454285,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454286,"byte_end":454289,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454290,"byte_end":454318,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454319,"byte_end":454358,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454359,"byte_end":454409,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454410,"byte_end":454456,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454457,"byte_end":454516,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454517,"byte_end":454524,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13671},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455810,"byte_end":455814,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":13674},{"krate":0,"index":13675}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455647,"byte_end":455713,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455731,"byte_end":455798,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456584,"byte_end":456588,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":6068}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456484,"byte_end":456523,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456524,"byte_end":456572,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6069},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457196,"byte_end":457200,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456609,"byte_end":456686,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456687,"byte_end":456690,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456691,"byte_end":456786,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456787,"byte_end":456844,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456845,"byte_end":456848,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456849,"byte_end":456863,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456864,"byte_end":456867,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456868,"byte_end":456879,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456880,"byte_end":456921,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456922,"byte_end":456965,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456966,"byte_end":456969,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":456970,"byte_end":457007,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457008,"byte_end":457040,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457041,"byte_end":457090,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457091,"byte_end":457120,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457121,"byte_end":457180,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457181,"byte_end":457188,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13680},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":458387,"byte_end":458395,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":13682}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":458290,"byte_end":458358,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":13686},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":458524,"byte_end":458533,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":13688}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":458427,"byte_end":458495,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6130},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459266,"byte_end":459273,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459020,"byte_end":459097,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459102,"byte_end":459173,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459178,"byte_end":459254,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459775,"byte_end":459782,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459529,"byte_end":459606,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459611,"byte_end":459682,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459687,"byte_end":459763,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6151},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461370,"byte_end":461382,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461214,"byte_end":461289,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461290,"byte_end":461358,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6154},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461386,"byte_end":461401,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":6151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6155},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461403,"byte_end":461419,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":6151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13697},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462328,"byte_end":462332,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":13699},{"krate":0,"index":13700}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6208},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463277,"byte_end":463282,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462524,"byte_end":462577,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462582,"byte_end":462628,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462633,"byte_end":462636,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462641,"byte_end":462651,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462656,"byte_end":462659,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462664,"byte_end":462741,"line_start":31,"line_end":31,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462746,"byte_end":462815,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462820,"byte_end":462823,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462828,"byte_end":462842,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462847,"byte_end":462850,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462855,"byte_end":462862,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462867,"byte_end":462908,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462913,"byte_end":462957,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462962,"byte_end":462965,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462970,"byte_end":463017,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463022,"byte_end":463050,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463055,"byte_end":463058,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463063,"byte_end":463097,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463102,"byte_end":463144,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463149,"byte_end":463152,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463157,"byte_end":463189,"line_start":46,"line_end":46,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463194,"byte_end":463253,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463258,"byte_end":463265,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6209},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464193,"byte_end":464202,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463329,"byte_end":463400,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463405,"byte_end":463479,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463484,"byte_end":463559,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463564,"byte_end":463588,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463593,"byte_end":463596,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463601,"byte_end":463615,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463620,"byte_end":463623,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463628,"byte_end":463635,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463640,"byte_end":463681,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463686,"byte_end":463730,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463735,"byte_end":463738,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463743,"byte_end":463790,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463795,"byte_end":463823,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463828,"byte_end":463831,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463836,"byte_end":463870,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463875,"byte_end":463917,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463922,"byte_end":463925,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463930,"byte_end":463951,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463956,"byte_end":463988,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":463993,"byte_end":463996,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464001,"byte_end":464024,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464029,"byte_end":464071,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464076,"byte_end":464097,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464102,"byte_end":464105,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464110,"byte_end":464169,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464174,"byte_end":464181,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13736},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466757,"byte_end":466763,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":13738},{"krate":0,"index":13739}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":465802,"byte_end":465849,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":465850,"byte_end":465853,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":465854,"byte_end":465930,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":465931,"byte_end":466009,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466010,"byte_end":466086,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466087,"byte_end":466162,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466163,"byte_end":466236,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466237,"byte_end":466268,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466269,"byte_end":466272,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466273,"byte_end":466344,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466345,"byte_end":466424,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466425,"byte_end":466452,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466453,"byte_end":466456,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466457,"byte_end":466531,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466532,"byte_end":466606,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466607,"byte_end":466686,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466687,"byte_end":466728,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6233},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467072,"byte_end":467075,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466848,"byte_end":466919,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466924,"byte_end":466934,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466939,"byte_end":466942,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466947,"byte_end":467021,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467026,"byte_end":467060,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":6234},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467254,"byte_end":467261,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467157,"byte_end":467224,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467229,"byte_end":467242,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6235},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467406,"byte_end":467413,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467308,"byte_end":467376,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467381,"byte_end":467394,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6236},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467544,"byte_end":467554,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467472,"byte_end":467532,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6237},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467695,"byte_end":467700,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467598,"byte_end":467670,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467675,"byte_end":467683,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":6238},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467847,"byte_end":467850,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467755,"byte_end":467822,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467827,"byte_end":467835,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":6239},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468296,"byte_end":468299,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467903,"byte_end":467963,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467968,"byte_end":467971,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467976,"byte_end":467988,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":467993,"byte_end":467996,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468001,"byte_end":468074,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468079,"byte_end":468156,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468161,"byte_end":468164,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468169,"byte_end":468226,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468231,"byte_end":468284,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13743},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469486,"byte_end":469491,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":13746},{"krate":0,"index":13747}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469324,"byte_end":469389,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469407,"byte_end":469474,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13752},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470382,"byte_end":470395,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":13755},{"krate":0,"index":13756}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470202,"byte_end":470285,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470303,"byte_end":470370,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13761},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471354,"byte_end":471362,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":13764},{"krate":0,"index":13765}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471184,"byte_end":471257,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471275,"byte_end":471342,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":6359},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378087,"byte_end":378099,"line_start":152,"line_end":152,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":6360},{"krate":0,"index":6362},{"krate":0,"index":6364},{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6372},{"krate":0,"index":6373}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378005,"byte_end":378076,"line_start":151,"line_end":151,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378952,"byte_end":378957,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378117,"byte_end":378182,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378187,"byte_end":378190,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378195,"byte_end":378275,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378280,"byte_end":378352,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378357,"byte_end":378378,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378383,"byte_end":378386,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378391,"byte_end":378405,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378410,"byte_end":378413,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378418,"byte_end":378425,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378430,"byte_end":378471,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378476,"byte_end":378520,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378525,"byte_end":378528,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378533,"byte_end":378577,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378582,"byte_end":378626,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378631,"byte_end":378634,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378639,"byte_end":378683,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378688,"byte_end":378720,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378725,"byte_end":378728,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378733,"byte_end":378766,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378771,"byte_end":378814,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378819,"byte_end":378868,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378873,"byte_end":378932,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378937,"byte_end":378944,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6362},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380010,"byte_end":380014,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379108,"byte_end":379182,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379187,"byte_end":379223,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379228,"byte_end":379231,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379236,"byte_end":379314,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379319,"byte_end":379346,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379351,"byte_end":379354,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379359,"byte_end":379373,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379378,"byte_end":379381,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379386,"byte_end":379393,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379398,"byte_end":379439,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379444,"byte_end":379488,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379493,"byte_end":379496,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379501,"byte_end":379548,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379553,"byte_end":379583,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379588,"byte_end":379591,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379596,"byte_end":379648,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379653,"byte_end":379656,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379661,"byte_end":379732,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379737,"byte_end":379801,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379806,"byte_end":379851,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379856,"byte_end":379881,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379886,"byte_end":379926,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379931,"byte_end":379990,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":379995,"byte_end":380002,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6364},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380420,"byte_end":380433,"line_start":220,"line_end":220,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380182,"byte_end":380266,"line_start":215,"line_end":215,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380271,"byte_end":380289,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380294,"byte_end":380297,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380302,"byte_end":380380,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380385,"byte_end":380412,"line_start":219,"line_end":219,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6366},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381844,"byte_end":381854,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380631,"byte_end":380703,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380708,"byte_end":380766,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380771,"byte_end":380774,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380779,"byte_end":380853,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380858,"byte_end":380861,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380866,"byte_end":380943,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380948,"byte_end":380970,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380975,"byte_end":380978,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":380983,"byte_end":380997,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381002,"byte_end":381005,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381010,"byte_end":381017,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381022,"byte_end":381063,"line_start":238,"line_end":238,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381068,"byte_end":381112,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381117,"byte_end":381120,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381125,"byte_end":381172,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381177,"byte_end":381207,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381212,"byte_end":381215,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381220,"byte_end":381262,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381267,"byte_end":381270,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381275,"byte_end":381312,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381317,"byte_end":381376,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381381,"byte_end":381388,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381393,"byte_end":381396,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381401,"byte_end":381441,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381446,"byte_end":381449,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381454,"byte_end":381461,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381466,"byte_end":381507,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381512,"byte_end":381562,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381567,"byte_end":381570,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381575,"byte_end":381622,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381627,"byte_end":381657,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381662,"byte_end":381665,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381670,"byte_end":381724,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381729,"byte_end":381732,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381737,"byte_end":381810,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381815,"byte_end":381824,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":381829,"byte_end":381836,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6368},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382659,"byte_end":382670,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382029,"byte_end":382102,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382107,"byte_end":382110,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382115,"byte_end":382173,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382178,"byte_end":382181,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382186,"byte_end":382200,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382205,"byte_end":382208,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382213,"byte_end":382220,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382225,"byte_end":382266,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382271,"byte_end":382315,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382320,"byte_end":382323,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382328,"byte_end":382375,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382380,"byte_end":382423,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382428,"byte_end":382431,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382436,"byte_end":382491,"line_start":284,"line_end":284,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382496,"byte_end":382499,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382504,"byte_end":382529,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382534,"byte_end":382575,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382580,"byte_end":382639,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382644,"byte_end":382651,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6370},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383491,"byte_end":383505,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382851,"byte_end":382924,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382929,"byte_end":382932,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":382937,"byte_end":382995,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383000,"byte_end":383003,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383008,"byte_end":383022,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383027,"byte_end":383030,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383035,"byte_end":383042,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383047,"byte_end":383088,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383093,"byte_end":383137,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383142,"byte_end":383145,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383150,"byte_end":383197,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383202,"byte_end":383248,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383253,"byte_end":383256,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383261,"byte_end":383319,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383324,"byte_end":383327,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383332,"byte_end":383357,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383362,"byte_end":383407,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383412,"byte_end":383471,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383476,"byte_end":383483,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6372},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384848,"byte_end":384853,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383691,"byte_end":383762,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383767,"byte_end":383770,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383775,"byte_end":383845,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383850,"byte_end":383875,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383880,"byte_end":383883,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383888,"byte_end":383902,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383907,"byte_end":383910,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383915,"byte_end":383922,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383927,"byte_end":383968,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":383973,"byte_end":384023,"line_start":332,"line_end":332,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384028,"byte_end":384031,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384036,"byte_end":384106,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384111,"byte_end":384181,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384186,"byte_end":384237,"line_start":336,"line_end":336,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384242,"byte_end":384245,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384250,"byte_end":384293,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384298,"byte_end":384361,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384366,"byte_end":384413,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384418,"byte_end":384421,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384426,"byte_end":384431,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384436,"byte_end":384507,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384512,"byte_end":384564,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384569,"byte_end":384621,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384626,"byte_end":384631,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384636,"byte_end":384639,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384644,"byte_end":384706,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384711,"byte_end":384764,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384769,"byte_end":384828,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":384833,"byte_end":384840,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6373},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385634,"byte_end":385638,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385041,"byte_end":385111,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385116,"byte_end":385147,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385152,"byte_end":385155,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385160,"byte_end":385174,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385179,"byte_end":385182,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385187,"byte_end":385194,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385199,"byte_end":385240,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385245,"byte_end":385289,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385294,"byte_end":385297,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385302,"byte_end":385349,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385354,"byte_end":385382,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385387,"byte_end":385390,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385395,"byte_end":385429,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385434,"byte_end":385476,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385481,"byte_end":385484,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385489,"byte_end":385510,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385515,"byte_end":385550,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385555,"byte_end":385614,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":385619,"byte_end":385626,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":6376},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386447,"byte_end":386460,"line_start":405,"line_end":405,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6381},{"krate":0,"index":6383}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386364,"byte_end":386436,"line_start":404,"line_end":404,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387201,"byte_end":387206,"line_start":428,"line_end":428,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386479,"byte_end":386544,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386549,"byte_end":386552,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386557,"byte_end":386571,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386576,"byte_end":386579,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386584,"byte_end":386591,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386596,"byte_end":386637,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386642,"byte_end":386691,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386696,"byte_end":386733,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386738,"byte_end":386741,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386746,"byte_end":386780,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386785,"byte_end":386788,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386793,"byte_end":386798,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386803,"byte_end":386849,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386854,"byte_end":386921,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386926,"byte_end":386969,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386974,"byte_end":387017,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387022,"byte_end":387054,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387059,"byte_end":387064,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387069,"byte_end":387072,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387077,"byte_end":387117,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387122,"byte_end":387181,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387186,"byte_end":387193,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387415,"byte_end":387420,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387342,"byte_end":387407,"line_start":435,"line_end":435,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387762,"byte_end":387767,"line_start":447,"line_end":447,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387556,"byte_end":387627,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387632,"byte_end":387635,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387640,"byte_end":387722,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387727,"byte_end":387754,"line_start":446,"line_end":446,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6381},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388177,"byte_end":388191,"line_start":459,"line_end":459,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":387933,"byte_end":388019,"line_start":454,"line_end":454,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388024,"byte_end":388042,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388047,"byte_end":388050,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388055,"byte_end":388137,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388142,"byte_end":388169,"line_start":458,"line_end":458,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6383},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":389037,"byte_end":389046,"line_start":486,"line_end":486,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388384,"byte_end":388416,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388421,"byte_end":388424,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388429,"byte_end":388510,"line_start":468,"line_end":468,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388515,"byte_end":388537,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388542,"byte_end":388545,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388550,"byte_end":388628,"line_start":471,"line_end":471,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388633,"byte_end":388636,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388641,"byte_end":388655,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388660,"byte_end":388663,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388668,"byte_end":388675,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388680,"byte_end":388721,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388726,"byte_end":388771,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388776,"byte_end":388779,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388784,"byte_end":388831,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388836,"byte_end":388839,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388844,"byte_end":388887,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388892,"byte_end":388895,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388900,"byte_end":388953,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":388958,"byte_end":389017,"line_start":484,"line_end":484,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":389022,"byte_end":389029,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":6387},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392902,"byte_end":392914,"line_start":599,"line_end":599,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6389}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392820,"byte_end":392891,"line_start":598,"line_end":598,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6388},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393184,"byte_end":393188,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":6387},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392932,"byte_end":393001,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393006,"byte_end":393059,"line_start":601,"line_end":601,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393064,"byte_end":393067,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393072,"byte_end":393149,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393154,"byte_end":393176,"line_start":604,"line_end":604,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6389},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393526,"byte_end":393541,"line_start":616,"line_end":616,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":6387},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393343,"byte_end":393416,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393421,"byte_end":393445,"line_start":613,"line_end":613,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393450,"byte_end":393453,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393458,"byte_end":393518,"line_start":615,"line_end":615,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":6392},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393793,"byte_end":393808,"line_start":627,"line_end":627,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6397},{"krate":0,"index":6399}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393708,"byte_end":393782,"line_start":626,"line_end":626,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394762,"byte_end":394770,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":6392},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393829,"byte_end":393918,"line_start":628,"line_end":628,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393923,"byte_end":393955,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393960,"byte_end":393963,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393968,"byte_end":394061,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394066,"byte_end":394069,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394074,"byte_end":394085,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394090,"byte_end":394131,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394136,"byte_end":394215,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394220,"byte_end":394223,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394228,"byte_end":394316,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394321,"byte_end":394324,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394329,"byte_end":394385,"line_start":639,"line_end":639,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394390,"byte_end":394418,"line_start":640,"line_end":640,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394423,"byte_end":394426,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394431,"byte_end":394481,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394486,"byte_end":394514,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394519,"byte_end":394522,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394527,"byte_end":394583,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394588,"byte_end":394616,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394621,"byte_end":394624,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394629,"byte_end":394678,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394683,"byte_end":394742,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394747,"byte_end":394754,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6394},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395571,"byte_end":395584,"line_start":675,"line_end":675,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":6392},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394913,"byte_end":394991,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":394996,"byte_end":394999,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395004,"byte_end":395015,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395020,"byte_end":395061,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395066,"byte_end":395145,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395150,"byte_end":395153,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395158,"byte_end":395227,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395232,"byte_end":395235,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395240,"byte_end":395296,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395301,"byte_end":395329,"line_start":667,"line_end":667,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395334,"byte_end":395337,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395342,"byte_end":395392,"line_start":669,"line_end":669,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395397,"byte_end":395425,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395430,"byte_end":395433,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395438,"byte_end":395487,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395492,"byte_end":395551,"line_start":673,"line_end":673,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395556,"byte_end":395563,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6395},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397275,"byte_end":397285,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":6392},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395692,"byte_end":395767,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395772,"byte_end":395839,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395844,"byte_end":395941,"line_start":684,"line_end":684,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395946,"byte_end":395949,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":395954,"byte_end":396024,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396029,"byte_end":396103,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396108,"byte_end":396163,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396168,"byte_end":396171,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396176,"byte_end":396254,"line_start":690,"line_end":690,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396259,"byte_end":396286,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396291,"byte_end":396294,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396299,"byte_end":396376,"line_start":693,"line_end":693,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396381,"byte_end":396403,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396408,"byte_end":396411,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396416,"byte_end":396430,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396435,"byte_end":396438,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396443,"byte_end":396450,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396455,"byte_end":396496,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396501,"byte_end":396548,"line_start":700,"line_end":700,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396553,"byte_end":396556,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396561,"byte_end":396610,"line_start":702,"line_end":702,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396615,"byte_end":396640,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396645,"byte_end":396648,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396653,"byte_end":396676,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396681,"byte_end":396742,"line_start":706,"line_end":706,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396747,"byte_end":396776,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396781,"byte_end":396812,"line_start":708,"line_end":708,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396817,"byte_end":396833,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396838,"byte_end":396841,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396846,"byte_end":396869,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396874,"byte_end":396935,"line_start":712,"line_end":712,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396940,"byte_end":396969,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396974,"byte_end":397004,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397009,"byte_end":397025,"line_start":715,"line_end":715,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397030,"byte_end":397033,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397038,"byte_end":397061,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397066,"byte_end":397127,"line_start":718,"line_end":718,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397132,"byte_end":397161,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397166,"byte_end":397191,"line_start":720,"line_end":720,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397196,"byte_end":397255,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397260,"byte_end":397267,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6397},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399464,"byte_end":399473,"line_start":781,"line_end":781,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":6392},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397482,"byte_end":397557,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397562,"byte_end":397633,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397638,"byte_end":397733,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397738,"byte_end":397741,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397746,"byte_end":397816,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397821,"byte_end":397896,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397901,"byte_end":397971,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397976,"byte_end":397986,"line_start":737,"line_end":737,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397991,"byte_end":397994,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397999,"byte_end":398077,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398082,"byte_end":398109,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398114,"byte_end":398117,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398122,"byte_end":398199,"line_start":742,"line_end":742,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398204,"byte_end":398226,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398231,"byte_end":398234,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398239,"byte_end":398251,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398256,"byte_end":398259,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398264,"byte_end":398337,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398342,"byte_end":398415,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398420,"byte_end":398494,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398499,"byte_end":398555,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398560,"byte_end":398563,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398568,"byte_end":398615,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398620,"byte_end":398623,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398628,"byte_end":398642,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398647,"byte_end":398650,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398655,"byte_end":398662,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398667,"byte_end":398708,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398713,"byte_end":398760,"line_start":758,"line_end":758,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398765,"byte_end":398768,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398773,"byte_end":398819,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398824,"byte_end":398856,"line_start":761,"line_end":761,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398861,"byte_end":398864,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398869,"byte_end":398892,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398897,"byte_end":398951,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398956,"byte_end":398985,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398990,"byte_end":399019,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399024,"byte_end":399040,"line_start":767,"line_end":767,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399045,"byte_end":399048,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399053,"byte_end":399076,"line_start":769,"line_end":769,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399081,"byte_end":399135,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399140,"byte_end":399169,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399174,"byte_end":399201,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399206,"byte_end":399222,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399227,"byte_end":399230,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399235,"byte_end":399258,"line_start":775,"line_end":775,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399263,"byte_end":399317,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399322,"byte_end":399351,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399356,"byte_end":399380,"line_start":778,"line_end":778,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399385,"byte_end":399444,"line_start":779,"line_end":779,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399449,"byte_end":399456,"line_start":780,"line_end":780,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6399},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400997,"byte_end":401002,"line_start":820,"line_end":820,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":6392},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399651,"byte_end":399702,"line_start":788,"line_end":788,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399707,"byte_end":399794,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399799,"byte_end":399802,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399807,"byte_end":399873,"line_start":791,"line_end":791,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399878,"byte_end":399960,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399965,"byte_end":400025,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400030,"byte_end":400033,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400038,"byte_end":400073,"line_start":795,"line_end":795,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400078,"byte_end":400100,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400105,"byte_end":400108,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400113,"byte_end":400125,"line_start":798,"line_end":798,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400130,"byte_end":400133,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400138,"byte_end":400229,"line_start":800,"line_end":800,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400234,"byte_end":400237,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400242,"byte_end":400304,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400309,"byte_end":400312,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400317,"byte_end":400331,"line_start":804,"line_end":804,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400336,"byte_end":400339,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400344,"byte_end":400351,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400356,"byte_end":400397,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400402,"byte_end":400449,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400454,"byte_end":400489,"line_start":809,"line_end":809,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400494,"byte_end":400497,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400502,"byte_end":400557,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400562,"byte_end":400565,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400570,"byte_end":400632,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400637,"byte_end":400708,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400713,"byte_end":400784,"line_start":815,"line_end":815,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400789,"byte_end":400860,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400865,"byte_end":400913,"line_start":817,"line_end":817,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400918,"byte_end":400977,"line_start":818,"line_end":818,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400982,"byte_end":400989,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6431},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":13770},{"krate":0,"index":13952},{"krate":0,"index":13953},{"krate":0,"index":13956},{"krate":0,"index":13959},{"krate":0,"index":13962},{"krate":0,"index":13965},{"krate":0,"index":14047}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12031,"byte_end":12056,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472278,"byte_end":472325,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472326,"byte_end":472329,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472330,"byte_end":472405,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":472406,"byte_end":472463,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13824},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769449,"byte_end":10769454,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":13826},{"krate":0,"index":13827},{"krate":0,"index":13828}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769122,"byte_end":10769148,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769149,"byte_end":10769152,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769153,"byte_end":10769167,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769168,"byte_end":10769171,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769172,"byte_end":10769251,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769252,"byte_end":10769334,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769335,"byte_end":10769419,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769420,"byte_end":10769437,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":13851},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770766,"byte_end":10770769,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770716,"byte_end":10770754,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":13852},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771196,"byte_end":10771206,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770950,"byte_end":10771005,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771010,"byte_end":10771013,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771018,"byte_end":10771032,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771037,"byte_end":10771040,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771045,"byte_end":10771052,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771057,"byte_end":10771086,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771091,"byte_end":10771094,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771099,"byte_end":10771129,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771134,"byte_end":10771172,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771177,"byte_end":10771184,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13855},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771420,"byte_end":10771428,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771292,"byte_end":10771336,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771341,"byte_end":10771344,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771349,"byte_end":10771408,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":13856},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771849,"byte_end":10771853,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771684,"byte_end":10771720,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771725,"byte_end":10771728,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771733,"byte_end":10771806,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771811,"byte_end":10771837,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":13857},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772481,"byte_end":10772488,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771971,"byte_end":10772026,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772031,"byte_end":10772034,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772039,"byte_end":10772114,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772119,"byte_end":10772193,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772198,"byte_end":10772201,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772206,"byte_end":10772220,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772225,"byte_end":10772228,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772233,"byte_end":10772240,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772245,"byte_end":10772286,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772291,"byte_end":10772320,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772325,"byte_end":10772328,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772333,"byte_end":10772367,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772372,"byte_end":10772398,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772403,"byte_end":10772443,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772448,"byte_end":10772457,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10772462,"byte_end":10772469,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13861},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774210,"byte_end":10774225,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":13864},{"krate":0,"index":13865}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774117,"byte_end":10774198,"line_start":179,"line_end":179,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":13880},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776760,"byte_end":10776770,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":13883}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776596,"byte_end":10776660,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776661,"byte_end":10776734,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776735,"byte_end":10776748,"line_start":255,"line_end":255,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13887},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777339,"byte_end":10777342,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776860,"byte_end":10776920,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776925,"byte_end":10776928,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776933,"byte_end":10776946,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776951,"byte_end":10776954,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776959,"byte_end":10776966,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776971,"byte_end":10777012,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777017,"byte_end":10777060,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777065,"byte_end":10777068,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777073,"byte_end":10777126,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777131,"byte_end":10777136,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777141,"byte_end":10777230,"line_start":271,"line_end":271,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777235,"byte_end":10777277,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777282,"byte_end":10777287,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777292,"byte_end":10777301,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777306,"byte_end":10777313,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777318,"byte_end":10777327,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":13903},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778634,"byte_end":10778650,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":13907},{"krate":0,"index":13908},{"krate":0,"index":13909}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778450,"byte_end":10778538,"line_start":315,"line_end":315,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778539,"byte_end":10778622,"line_start":316,"line_end":316,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":13914},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779416,"byte_end":10779419,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778827,"byte_end":10778887,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778892,"byte_end":10778895,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778900,"byte_end":10778913,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778918,"byte_end":10778921,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778926,"byte_end":10778933,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778938,"byte_end":10778979,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778984,"byte_end":10779045,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779050,"byte_end":10779053,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779058,"byte_end":10779111,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779116,"byte_end":10779121,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779126,"byte_end":10779215,"line_start":334,"line_end":334,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779220,"byte_end":10779310,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779315,"byte_end":10779354,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779359,"byte_end":10779364,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779369,"byte_end":10779378,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779383,"byte_end":10779390,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779395,"byte_end":10779404,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":14380},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792473,"byte_end":10792482,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":14382},{"krate":0,"index":14383}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":10575825,"byte_end":10575834,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":14109},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793892,"byte_end":10793895,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792588,"byte_end":10792670,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792675,"byte_end":10792743,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792748,"byte_end":10792751,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792756,"byte_end":10792828,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792833,"byte_end":10792916,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792921,"byte_end":10792946,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792951,"byte_end":10792954,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792959,"byte_end":10792974,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792979,"byte_end":10792982,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792987,"byte_end":10793010,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793015,"byte_end":10793018,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793023,"byte_end":10793030,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793035,"byte_end":10793076,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793081,"byte_end":10793140,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793145,"byte_end":10793148,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793153,"byte_end":10793222,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793227,"byte_end":10793292,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793297,"byte_end":10793322,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793327,"byte_end":10793370,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793375,"byte_end":10793384,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793389,"byte_end":10793396,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793401,"byte_end":10793404,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793409,"byte_end":10793432,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793437,"byte_end":10793440,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793445,"byte_end":10793452,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793457,"byte_end":10793498,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793503,"byte_end":10793555,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793560,"byte_end":10793605,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793610,"byte_end":10793613,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793618,"byte_end":10793687,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793692,"byte_end":10793777,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793782,"byte_end":10793807,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793812,"byte_end":10793854,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793859,"byte_end":10793868,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793873,"byte_end":10793880,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":14110},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794400,"byte_end":10794410,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10793990,"byte_end":10794054,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794059,"byte_end":10794127,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794132,"byte_end":10794182,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794187,"byte_end":10794241,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794246,"byte_end":10794338,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794343,"byte_end":10794388,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":14133},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794678,"byte_end":10794695,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":14134}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794488,"byte_end":10794538,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794539,"byte_end":10794615,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794616,"byte_end":10794649,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":14137},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794801,"byte_end":10794812,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":14138}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794729,"byte_end":10794765,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":14112},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795083,"byte_end":10795091,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794869,"byte_end":10794943,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794948,"byte_end":10794988,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794993,"byte_end":10794996,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795001,"byte_end":10795071,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":14148},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795613,"byte_end":10795620,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795504,"byte_end":10795556,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":14132},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797754,"byte_end":10797759,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797387,"byte_end":10797455,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797460,"byte_end":10797463,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797468,"byte_end":10797535,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797540,"byte_end":10797608,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797613,"byte_end":10797687,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797692,"byte_end":10797742,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":6443},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473213,"byte_end":473220,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6445},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473235,"byte_end":473241,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":6443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6446},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473250,"byte_end":473259,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6453},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473452,"byte_end":473458,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6455},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473483,"byte_end":473491,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":6453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":474797,"byte_end":474801,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14179},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475157,"byte_end":475164,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14200},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475898,"byte_end":475911,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14216},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476253,"byte_end":476262,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14231},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477217,"byte_end":477224,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14246},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477935,"byte_end":477943,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14261},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478663,"byte_end":478674,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14273},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479559,"byte_end":479571,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14285},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":480719,"byte_end":480733,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6634},"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481498,"byte_end":481504,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35948,"byte_end":35955,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36085,"byte_end":36092,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36317,"byte_end":36324,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37098,"byte_end":37105,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37330,"byte_end":37337,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40351,"byte_end":40355,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40462,"byte_end":40466,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42195,"byte_end":42199,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42312,"byte_end":42316,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43294,"byte_end":43297,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43466,"byte_end":43469,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43731,"byte_end":43734,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":44940,"byte_end":44951,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":45094,"byte_end":45105,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46332,"byte_end":46342,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46543,"byte_end":46549,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46592,"byte_end":46598,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46856,"byte_end":46861,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47015,"byte_end":47025,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47257,"byte_end":47262,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47359,"byte_end":47364,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47608,"byte_end":47614,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48038,"byte_end":48044,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":50110,"byte_end":50115,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":51811,"byte_end":51817,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":51969,"byte_end":51975,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":53564,"byte_end":53569,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55276,"byte_end":55282,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55441,"byte_end":55447,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55875,"byte_end":55883,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56242,"byte_end":56252,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19099,"byte_end":19100,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78678,"byte_end":78688,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78839,"byte_end":78849,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78972,"byte_end":78982,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79691,"byte_end":79701,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79831,"byte_end":79841,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":80084,"byte_end":80094,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":81047,"byte_end":81057,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":81300,"byte_end":81310,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84634,"byte_end":84647,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84777,"byte_end":84790,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":85033,"byte_end":85046,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61224,"byte_end":61227,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86355,"byte_end":86359,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86955,"byte_end":86959,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":87103,"byte_end":87107,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87710,"byte_end":87717,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88278,"byte_end":88285,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88430,"byte_end":88437,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88463,"byte_end":88470,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89224,"byte_end":89233,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89836,"byte_end":89845,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90943,"byte_end":90952,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":91153,"byte_end":91162,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92482,"byte_end":92494,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92720,"byte_end":92732,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93845,"byte_end":93857,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":94061,"byte_end":94073,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":95730,"byte_end":95742,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":96056,"byte_end":96068,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":96255,"byte_end":96267,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96705,"byte_end":96711,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97405,"byte_end":97411,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97553,"byte_end":97559,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98062,"byte_end":98067,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98246,"byte_end":98251,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98283,"byte_end":98288,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98385,"byte_end":98390,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106004,"byte_end":106011,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107802,"byte_end":107809,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":108472,"byte_end":108479,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108975,"byte_end":108981,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111417,"byte_end":111423,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":112127,"byte_end":112133,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112696,"byte_end":112705,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113712,"byte_end":113721,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113904,"byte_end":113913,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":114583,"byte_end":114592,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123200,"byte_end":123210,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":125040,"byte_end":125050,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":126198,"byte_end":126208,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126690,"byte_end":126699,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128538,"byte_end":128547,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129909,"byte_end":129917,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130995,"byte_end":131003,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":132434,"byte_end":132442,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133421,"byte_end":133427,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133766,"byte_end":133772,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134157,"byte_end":134163,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134544,"byte_end":134550,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134791,"byte_end":134797,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135136,"byte_end":135142,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135418,"byte_end":135424,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135959,"byte_end":135965,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":137711,"byte_end":137717,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":138772,"byte_end":138778,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":140085,"byte_end":140091,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":140521,"byte_end":140527,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":195831,"byte_end":195836,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":196062,"byte_end":196067,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":196276,"byte_end":196281,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":197877,"byte_end":197884,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":198149,"byte_end":198156,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":198334,"byte_end":198341,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":199367,"byte_end":199372,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":199766,"byte_end":199771,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":200021,"byte_end":200026,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":201151,"byte_end":201157,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":201377,"byte_end":201383,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":202091,"byte_end":202097,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":202760,"byte_end":202765,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":202921,"byte_end":202926,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":203675,"byte_end":203680,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204428,"byte_end":204437,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":9392},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204623,"byte_end":204632,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204750,"byte_end":204759,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":206200,"byte_end":206206,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":206679,"byte_end":206685,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":9457},{"krate":0,"index":9458},{"krate":0,"index":9459},{"krate":0,"index":9460}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":207008,"byte_end":207014,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":207351,"byte_end":207357,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":209529,"byte_end":209538,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":209835,"byte_end":209844,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":9518},{"krate":0,"index":9519},{"krate":0,"index":9520},{"krate":0,"index":9521}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":210111,"byte_end":210120,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":210387,"byte_end":210396,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212498,"byte_end":212505,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":9571},{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9574}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212674,"byte_end":212681,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212873,"byte_end":212880,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":214394,"byte_end":214398,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":214754,"byte_end":214758,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":215019,"byte_end":215023,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":215258,"byte_end":215262,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":216851,"byte_end":216858,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217151,"byte_end":217158,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217389,"byte_end":217396,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217635,"byte_end":217642,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218743,"byte_end":218747,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":9796},{"krate":0,"index":9797},{"krate":0,"index":9798},{"krate":0,"index":9799}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219244,"byte_end":219248,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219346,"byte_end":219350,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220552,"byte_end":220564,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":223054,"byte_end":223066,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":223186,"byte_end":223198,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2433},{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224083,"byte_end":224086,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224275,"byte_end":224278,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2475},{"krate":0,"index":9920},{"krate":0,"index":9921},{"krate":0,"index":9922},{"krate":0,"index":9923}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224447,"byte_end":224450,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224618,"byte_end":224621,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225733,"byte_end":225737,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225788,"byte_end":225792,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225943,"byte_end":225947,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":226086,"byte_end":226090,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226741,"byte_end":226755,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226906,"byte_end":226920,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":227064,"byte_end":227078,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228389,"byte_end":228397,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":10063},{"krate":0,"index":10064},{"krate":0,"index":10065},{"krate":0,"index":10066},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232363,"byte_end":232371,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232513,"byte_end":232521,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":233680,"byte_end":233684,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":233929,"byte_end":233933,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":234044,"byte_end":234048,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":234753,"byte_end":234759,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":235111,"byte_end":235117,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":235386,"byte_end":235392,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":236653,"byte_end":236661,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":236981,"byte_end":236989,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":237173,"byte_end":237181,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":237552,"byte_end":237562,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238227,"byte_end":238231,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":10246},{"krate":0,"index":10247},{"krate":0,"index":10248},{"krate":0,"index":10249}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238422,"byte_end":238426,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238544,"byte_end":238548,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240145,"byte_end":240154,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240606,"byte_end":240615,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":10315},{"krate":0,"index":10316},{"krate":0,"index":10317},{"krate":0,"index":10318}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240941,"byte_end":240950,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":241198,"byte_end":241207,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":243507,"byte_end":243511,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":10359},{"krate":0,"index":10360},{"krate":0,"index":10361},{"krate":0,"index":10362}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":243684,"byte_end":243688,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":244660,"byte_end":244664,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":245687,"byte_end":245696,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":246144,"byte_end":246153,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":10428},{"krate":0,"index":10429},{"krate":0,"index":10430},{"krate":0,"index":10431}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":246472,"byte_end":246481,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":248000,"byte_end":248009,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249393,"byte_end":249402,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249690,"byte_end":249699,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2932},{"krate":0,"index":10485},{"krate":0,"index":10486},{"krate":0,"index":10487},{"krate":0,"index":10488},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251816,"byte_end":251825,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":252857,"byte_end":252866,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":253808,"byte_end":253812,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254063,"byte_end":254067,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":10546},{"krate":0,"index":10547},{"krate":0,"index":10548},{"krate":0,"index":10549}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254313,"byte_end":254317,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254543,"byte_end":254547,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256429,"byte_end":256432,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":258018,"byte_end":258021,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":258216,"byte_end":258219,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":260914,"byte_end":260920,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":10651},{"krate":0,"index":10652},{"krate":0,"index":10653},{"krate":0,"index":10654}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":261428,"byte_end":261434,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":263050,"byte_end":263056,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":264028,"byte_end":264039,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3136},{"krate":0,"index":10699},{"krate":0,"index":10700},{"krate":0,"index":10701},{"krate":0,"index":10702}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":264391,"byte_end":264402,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":266571,"byte_end":266582,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":267580,"byte_end":267584,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268070,"byte_end":268074,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268238,"byte_end":268242,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":10768},{"krate":0,"index":10769},{"krate":0,"index":10770},{"krate":0,"index":10771}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268604,"byte_end":268608,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":269835,"byte_end":269839,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10693686,"byte_end":10693701,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10811}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10694033,"byte_end":10694048,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10814},{"krate":0,"index":10938},{"krate":0,"index":10939},{"krate":0,"index":10940},{"krate":0,"index":10941}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10694435,"byte_end":10694450,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10817},{"krate":0,"index":10818},{"krate":0,"index":10819}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10695904,"byte_end":10695919,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10822}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697029,"byte_end":10697037,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10864}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697384,"byte_end":10697392,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":10867},{"krate":0,"index":10942},{"krate":0,"index":10943},{"krate":0,"index":10944},{"krate":0,"index":10945}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697672,"byte_end":10697680,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10870},{"krate":0,"index":10871},{"krate":0,"index":10872}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700017,"byte_end":10700034,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10917}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700380,"byte_end":10700397,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10922}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700830,"byte_end":10700847,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10927}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10701077,"byte_end":10701094,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10932},{"krate":0,"index":10933}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":270860,"byte_end":270871,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":10986},{"krate":0,"index":10987},{"krate":0,"index":10988},{"krate":0,"index":10989}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":271063,"byte_end":271074,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":271926,"byte_end":271937,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151032,"byte_end":151033,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":308807,"byte_end":308814,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":309107,"byte_end":309114,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":11047},{"krate":0,"index":11048},{"krate":0,"index":11049},{"krate":0,"index":11050}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":309395,"byte_end":309402,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":310545,"byte_end":310552,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311470,"byte_end":311480,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":11294},{"krate":0,"index":11295},{"krate":0,"index":11296},{"krate":0,"index":11297}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311673,"byte_end":311683,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311804,"byte_end":311814,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":312913,"byte_end":312919,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":313211,"byte_end":313217,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":11493},{"krate":0,"index":11494},{"krate":0,"index":11495},{"krate":0,"index":11496}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":313495,"byte_end":313501,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":314778,"byte_end":314784,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3683}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315688,"byte_end":315695,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315749,"byte_end":315756,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3720}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315919,"byte_end":315926,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":316068,"byte_end":316075,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3726},{"krate":0,"index":3727}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":316851,"byte_end":316861,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":317157,"byte_end":317167,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":317412,"byte_end":317422,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3776}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":318821,"byte_end":318830,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319226,"byte_end":319235,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3822},{"krate":0,"index":11623},{"krate":0,"index":11624},{"krate":0,"index":11625},{"krate":0,"index":11626}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319478,"byte_end":319487,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319744,"byte_end":319753,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":321894,"byte_end":321906,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322206,"byte_end":322218,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":11684},{"krate":0,"index":11685},{"krate":0,"index":11686},{"krate":0,"index":11687}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322415,"byte_end":322427,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322705,"byte_end":322717,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":324901,"byte_end":324911,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":11728},{"krate":0,"index":11729},{"krate":0,"index":11730},{"krate":0,"index":11731}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":325176,"byte_end":325186,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3930}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":325432,"byte_end":325442,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327051,"byte_end":327061,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327201,"byte_end":327211,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327399,"byte_end":327409,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":328407,"byte_end":328416,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4013}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":328635,"byte_end":328644,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":329907,"byte_end":329914,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330273,"byte_end":330280,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4065}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330560,"byte_end":330567,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330821,"byte_end":330828,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334691,"byte_end":334700,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334962,"byte_end":334971,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":336717,"byte_end":336729,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":337185,"byte_end":337197,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":12012},{"krate":0,"index":12013},{"krate":0,"index":12014},{"krate":0,"index":12015}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":337537,"byte_end":337549,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":339048,"byte_end":339060,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":340288,"byte_end":340300,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4230}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":340752,"byte_end":340764,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4235},{"krate":0,"index":12081},{"krate":0,"index":12082},{"krate":0,"index":12083},{"krate":0,"index":12084}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":341102,"byte_end":341114,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":342721,"byte_end":342733,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10703692,"byte_end":10703710,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12131},{"krate":0,"index":12258},{"krate":0,"index":12259},{"krate":0,"index":12260},{"krate":0,"index":12261}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10704049,"byte_end":10704067,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12134},{"krate":0,"index":12135}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10706273,"byte_end":10706284,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":12185},{"krate":0,"index":12262},{"krate":0,"index":12263},{"krate":0,"index":12264},{"krate":0,"index":12265}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10706621,"byte_end":10706632,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12188},{"krate":0,"index":12189}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10708790,"byte_end":10708810,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":12237}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709175,"byte_end":10709195,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":12242}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709434,"byte_end":10709454,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12247}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709902,"byte_end":10709922,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12252},{"krate":0,"index":12253}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":343877,"byte_end":343890,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":344106,"byte_end":344119,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":344331,"byte_end":344344,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":345965,"byte_end":345978,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":346585,"byte_end":346598,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":276967,"byte_end":276968,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348634,"byte_end":348638,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349260,"byte_end":349264,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350455,"byte_end":350461,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350488,"byte_end":350494,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350802,"byte_end":350808,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4508}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351405,"byte_end":351415,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351459,"byte_end":351469,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351783,"byte_end":351793,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4549}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354313,"byte_end":354318,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354350,"byte_end":354355,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4590}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354440,"byte_end":354445,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354694,"byte_end":354699,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4598}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355638,"byte_end":355642,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4640}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355771,"byte_end":355775,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":356380,"byte_end":356384,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357043,"byte_end":357050,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357082,"byte_end":357089,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357174,"byte_end":357181,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357426,"byte_end":357433,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357820,"byte_end":357826,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357857,"byte_end":357863,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358628,"byte_end":358634,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4736},{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360088,"byte_end":360094,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361517,"byte_end":361523,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361736,"byte_end":361742,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4793},{"krate":0,"index":4794}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365086,"byte_end":365092,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4850}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365332,"byte_end":365338,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365618,"byte_end":365624,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713064,"byte_end":10713076,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12522}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713181,"byte_end":10713193,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713224,"byte_end":10713236,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12527}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713359,"byte_end":10713371,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":12530}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713552,"byte_end":10713564,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12533},{"krate":0,"index":12534}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716146,"byte_end":10716160,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716186,"byte_end":10716200,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12546},{"krate":0,"index":12547},{"krate":0,"index":12548},{"krate":0,"index":12549}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717766,"byte_end":10717780,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12552}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717873,"byte_end":10717887,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12555},{"krate":0,"index":12556},{"krate":0,"index":12557}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719049,"byte_end":10719063,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":12560}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719229,"byte_end":10719243,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":12563}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719523,"byte_end":10719537,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12568}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719707,"byte_end":10719721,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12571}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":10746862,"byte_end":10746873,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":12673}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10748232,"byte_end":10748240,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12692},{"krate":0,"index":12693},{"krate":0,"index":12694}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10749314,"byte_end":10749322,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10749359,"byte_end":10749369,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12700},{"krate":0,"index":12701},{"krate":0,"index":12702}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750221,"byte_end":10750231,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750279,"byte_end":10750286,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":12708},{"krate":0,"index":12709},{"krate":0,"index":12710}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750549,"byte_end":10750556,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750597,"byte_end":10750607,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12716},{"krate":0,"index":12717},{"krate":0,"index":12718}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751476,"byte_end":10751486,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751534,"byte_end":10751538,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12724},{"krate":0,"index":12725},{"krate":0,"index":12726}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751797,"byte_end":10751801,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751970,"byte_end":10751980,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752025,"byte_end":10752035,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752081,"byte_end":10752091,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752136,"byte_end":10752146,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752200,"byte_end":10752208,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752257,"byte_end":10752265,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753750,"byte_end":10753754,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753789,"byte_end":10753793,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753825,"byte_end":10753829,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12813}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10754906,"byte_end":10754910,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":12816},{"krate":0,"index":12817}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10755910,"byte_end":10755914,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":12820}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10757364,"byte_end":10757379,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12876},{"krate":0,"index":12877},{"krate":0,"index":12878},{"krate":0,"index":12879}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10760035,"byte_end":10760050,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12882}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722108,"byte_end":10722124,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722165,"byte_end":10722181,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722210,"byte_end":10722226,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722251,"byte_end":10722267,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12902}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722452,"byte_end":10722468,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12904}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724175,"byte_end":10724191,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12907}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724265,"byte_end":10724281,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12910},{"krate":0,"index":12911},{"krate":0,"index":12912},{"krate":0,"index":12913},{"krate":0,"index":12914},{"krate":0,"index":12915},{"krate":0,"index":12916},{"krate":0,"index":12917},{"krate":0,"index":12918},{"krate":0,"index":12919},{"krate":0,"index":12920},{"krate":0,"index":12921},{"krate":0,"index":12922}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10735812,"byte_end":10735828,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":12925},{"krate":0,"index":12926},{"krate":0,"index":12935}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10741012,"byte_end":10741016,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12934}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743271,"byte_end":10743287,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12938}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743425,"byte_end":10743441,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12941},{"krate":0,"index":12942}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10744012,"byte_end":10744028,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12945}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10745678,"byte_end":10745694,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":12960},{"krate":0,"index":12961},{"krate":0,"index":12962}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746164,"byte_end":10746180,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12965}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746456,"byte_end":10746472,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":12970}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746594,"byte_end":10746610,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":12973}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761645,"byte_end":10761654,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13030}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761799,"byte_end":10761808,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13033},{"krate":0,"index":13034},{"krate":0,"index":13035},{"krate":0,"index":13036},{"krate":0,"index":13037},{"krate":0,"index":13038},{"krate":0,"index":13039}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763281,"byte_end":10763290,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13042}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763389,"byte_end":10763398,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":13045},{"krate":0,"index":13046}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764182,"byte_end":10764191,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":13049}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765209,"byte_end":10765218,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":13054}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765363,"byte_end":10765372,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":13058}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765555,"byte_end":10765564,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":13062},{"krate":0,"index":13063},{"krate":0,"index":13064}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766647,"byte_end":10766651,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13080},{"krate":0,"index":13081},{"krate":0,"index":13082}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767084,"byte_end":10767088,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767143,"byte_end":10767150,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":13088},{"krate":0,"index":13089},{"krate":0,"index":13090}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767587,"byte_end":10767594,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767645,"byte_end":10767653,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13095},{"krate":0,"index":13096},{"krate":0,"index":13097}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10768081,"byte_end":10768089,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":367986,"byte_end":367988,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368043,"byte_end":368045,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402493,"byte_end":402503,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402941,"byte_end":402951,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403462,"byte_end":403472,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":404017,"byte_end":404027,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":404819,"byte_end":404829,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":405554,"byte_end":405564,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406195,"byte_end":406205,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406349,"byte_end":406359,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406621,"byte_end":406631,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406847,"byte_end":406857,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408696,"byte_end":408705,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5166},{"krate":0,"index":5167},{"krate":0,"index":13279},{"krate":0,"index":13280},{"krate":0,"index":13281},{"krate":0,"index":13282},{"krate":0,"index":5168},{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409850,"byte_end":409859,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5172},{"krate":0,"index":5173}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":411471,"byte_end":411480,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5177},{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412310,"byte_end":412319,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":13283},{"krate":0,"index":13284},{"krate":0,"index":13285},{"krate":0,"index":13286}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412397,"byte_end":412406,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412722,"byte_end":412731,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5186}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416699,"byte_end":416708,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":13328},{"krate":0,"index":13329},{"krate":0,"index":13330},{"krate":0,"index":13331},{"krate":0,"index":5244}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":418237,"byte_end":418246,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419669,"byte_end":419678,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":13332},{"krate":0,"index":13333}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419759,"byte_end":419768,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":13334},{"krate":0,"index":13335}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419849,"byte_end":419858,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5258}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":420217,"byte_end":420226,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5261}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421163,"byte_end":421168,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422424,"byte_end":422429,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422759,"byte_end":422764,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5314}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":424117,"byte_end":424122,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425233,"byte_end":425238,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425291,"byte_end":425296,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425438,"byte_end":425443,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":427213,"byte_end":427217,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428940,"byte_end":428947,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430780,"byte_end":430786,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433986,"byte_end":433992,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5500}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":434279,"byte_end":434285,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5503},{"krate":0,"index":5504}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":434917,"byte_end":434923,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5508}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436127,"byte_end":436133,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13521},{"krate":0,"index":13522},{"krate":0,"index":13523},{"krate":0,"index":13524}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436208,"byte_end":436214,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13525},{"krate":0,"index":13526},{"krate":0,"index":13527},{"krate":0,"index":13528}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436292,"byte_end":436298,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13529},{"krate":0,"index":13530},{"krate":0,"index":13531},{"krate":0,"index":13532}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436371,"byte_end":436377,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":13533},{"krate":0,"index":13534},{"krate":0,"index":13535},{"krate":0,"index":13536}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437360,"byte_end":437365,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437713,"byte_end":437718,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437950,"byte_end":437955,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5550}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438453,"byte_end":438460,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438515,"byte_end":438522,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5583}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438653,"byte_end":438660,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5587},{"krate":0,"index":5588}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440230,"byte_end":440235,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440288,"byte_end":440293,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440406,"byte_end":440411,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":441214,"byte_end":441219,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5659}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":441382,"byte_end":441387,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5662},{"krate":0,"index":5663}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442382,"byte_end":442386,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442438,"byte_end":442442,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5692}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442607,"byte_end":442611,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5695},{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443299,"byte_end":443311,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443363,"byte_end":443375,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5729}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443554,"byte_end":443566,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5732},{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444261,"byte_end":444270,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444322,"byte_end":444331,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444496,"byte_end":444505,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5771},{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445648,"byte_end":445656,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445711,"byte_end":445719,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5813}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":446688,"byte_end":446696,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5820}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447451,"byte_end":447460,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447512,"byte_end":447521,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447766,"byte_end":447771,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5861}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":449606,"byte_end":449615,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5866},{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450488,"byte_end":450500,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450552,"byte_end":450564,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":451493,"byte_end":451505,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5918},{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452325,"byte_end":452334,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452389,"byte_end":452398,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":453370,"byte_end":453379,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":5960}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454603,"byte_end":454609,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5995},{"krate":0,"index":5996}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":455389,"byte_end":455395,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455909,"byte_end":455913,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455965,"byte_end":455969,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6035}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":456126,"byte_end":456130,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6038},{"krate":0,"index":6039}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457259,"byte_end":457263,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6074},{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457981,"byte_end":457985,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6077}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459002,"byte_end":459010,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6130}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459510,"byte_end":459519,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459911,"byte_end":459919,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6137},{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":460422,"byte_end":460431,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6143},{"krate":0,"index":6145},{"krate":0,"index":6147},{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461446,"byte_end":461458,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6158}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461622,"byte_end":461634,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6161}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461868,"byte_end":461880,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462419,"byte_end":462423,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":13732},{"krate":0,"index":13733},{"krate":0,"index":13734},{"krate":0,"index":13735}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464340,"byte_end":464344,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464985,"byte_end":464989,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6215},{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466832,"byte_end":466838,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6239}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468908,"byte_end":468914,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6243}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":469061,"byte_end":469067,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469588,"byte_end":469593,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469646,"byte_end":469651,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469813,"byte_end":469818,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470502,"byte_end":470515,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470568,"byte_end":470581,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470754,"byte_end":470767,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6315},{"krate":0,"index":6316}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471459,"byte_end":471467,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471520,"byte_end":471528,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471690,"byte_end":471698,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6354},{"krate":0,"index":6355}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386358,"byte_end":386359,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392814,"byte_end":392815,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393702,"byte_end":393703,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401182,"byte_end":401183,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769589,"byte_end":10769594,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13831}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769927,"byte_end":10769932,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":13834}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770025,"byte_end":10770030,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13837}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770163,"byte_end":10770169,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":13845},{"krate":0,"index":13846}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770701,"byte_end":10770706,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13851},{"krate":0,"index":13852}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771277,"byte_end":10771282,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":13855},{"krate":0,"index":13856},{"krate":0,"index":13857},{"krate":0,"index":13858},{"krate":0,"index":13859}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774397,"byte_end":10774412,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13868}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774843,"byte_end":10774858,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":13871}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774975,"byte_end":10774990,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":13875},{"krate":0,"index":13876}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776219,"byte_end":10776234,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":13879}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776836,"byte_end":10776846,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":13887}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777858,"byte_end":10777868,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":13892}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778074,"byte_end":10778084,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13895}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778182,"byte_end":10778192,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13898},{"krate":0,"index":13899}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778333,"byte_end":10778343,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13902}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778794,"byte_end":10778810,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":13914}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779940,"byte_end":10779956,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":13920}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780221,"byte_end":10780237,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":13924}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780349,"byte_end":10780365,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":13928},{"krate":0,"index":13929}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780508,"byte_end":10780524,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":13933}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780801,"byte_end":10780806,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780852,"byte_end":10780857,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781024,"byte_end":10781039,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781143,"byte_end":10781158,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781362,"byte_end":10781372,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781422,"byte_end":10781432,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781500,"byte_end":10781516,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781587,"byte_end":10781603,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783607,"byte_end":10783612,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783649,"byte_end":10783654,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783670,"byte_end":10783676,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":14010},{"krate":0,"index":14011},{"krate":0,"index":14013},{"krate":0,"index":14014}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789296,"byte_end":10789301,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":14017}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789423,"byte_end":10789428,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14020}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789756,"byte_end":10789768,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14028}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789932,"byte_end":10789944,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":14031}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790165,"byte_end":10790177,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790559,"byte_end":10790570,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14036},{"krate":0,"index":14037}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790733,"byte_end":10790744,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":14040}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790882,"byte_end":10790893,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":14043}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10791245,"byte_end":10791256,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":14046}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792569,"byte_end":10792578,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":14109},{"krate":0,"index":14110}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794851,"byte_end":10794862,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":14112}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795645,"byte_end":10795652,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14114}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795835,"byte_end":10795842,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795855,"byte_end":10795864,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":14118}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10796853,"byte_end":10796862,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":14123},{"krate":0,"index":14124}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797101,"byte_end":10797110,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14128},{"krate":0,"index":14129}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797369,"byte_end":10797380,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":14132}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473323,"byte_end":473324,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473559,"byte_end":473560,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473830,"byte_end":473831,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6468}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":474847,"byte_end":474851,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6476}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":474945,"byte_end":474949,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6480},{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475208,"byte_end":475215,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":6487}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475438,"byte_end":475445,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475636,"byte_end":475643,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475948,"byte_end":475961,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6504}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476378,"byte_end":476387,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6509},{"krate":0,"index":6510}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476671,"byte_end":476680,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476942,"byte_end":476951,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477273,"byte_end":477280,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6527},{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477499,"byte_end":477506,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6534}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477684,"byte_end":477691,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6540}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477992,"byte_end":478000,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478223,"byte_end":478231,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6555}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478413,"byte_end":478421,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478731,"byte_end":478742,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6570},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479002,"byte_end":479013,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479250,"byte_end":479261,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479628,"byte_end":479640,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6592}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479901,"byte_end":479913,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6598}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":480151,"byte_end":480163,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6604}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":480782,"byte_end":480796,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6617},{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481019,"byte_end":481033,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481234,"byte_end":481248,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481554,"byte_end":481560,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481653,"byte_end":481659,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6644},{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":482264,"byte_end":482275,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6656},{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11238,"byte_end":11244,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11339,"byte_end":11345,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1741}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":143908,"byte_end":143925,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":12576}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":144074,"byte_end":144084,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"ref_id":{"krate":0,"index":12978}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11606,"byte_end":11610,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4887}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11621,"byte_end":11626,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4970}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11824,"byte_end":11826,"line_start":327,"line_end":327,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4972}},{"kind":"Mod","span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12065,"byte_end":12069,"line_start":337,"line_end":337,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6431}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":35948,"byte_end":35955,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36085,"byte_end":36092,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6662},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":36317,"byte_end":36324,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6662},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37098,"byte_end":37105,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6662},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":37330,"byte_end":37337,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6662},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40351,"byte_end":40355,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":40462,"byte_end":40466,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42195,"byte_end":42199,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6710},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":42312,"byte_end":42316,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6710},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43294,"byte_end":43297,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43466,"byte_end":43469,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6745},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":43731,"byte_end":43734,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6745},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":44940,"byte_end":44951,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":7298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":45094,"byte_end":45105,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":7298},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46332,"byte_end":46342,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46543,"byte_end":46549,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46592,"byte_end":46598,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":46856,"byte_end":46861,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47015,"byte_end":47025,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47257,"byte_end":47262,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47359,"byte_end":47364,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":47608,"byte_end":47614,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":48038,"byte_end":48044,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":50110,"byte_end":50115,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":51811,"byte_end":51817,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":338},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":51969,"byte_end":51975,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":53564,"byte_end":53569,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55276,"byte_end":55282,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55441,"byte_end":55447,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":55875,"byte_end":55883,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":346},"to":{"krate":20,"index":327}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":56242,"byte_end":56252,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19099,"byte_end":19100,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":436},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":19231,"byte_end":19237,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":11835},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78678,"byte_end":78688,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":7334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78839,"byte_end":78849,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":7334},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":78972,"byte_end":78982,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79691,"byte_end":79701,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":7369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":79831,"byte_end":79841,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":7369},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":80084,"byte_end":80094,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":7369},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":81047,"byte_end":81057,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":7369},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":81300,"byte_end":81310,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":7369},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84634,"byte_end":84647,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":7416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":84777,"byte_end":84790,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":7416},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":85033,"byte_end":85046,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":7416},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61224,"byte_end":61227,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":715},"to":{"krate":0,"index":716}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":61310,"byte_end":61319,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":44},"to":{"krate":0,"index":716}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86355,"byte_end":86359,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":8279},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":86955,"byte_end":86959,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":8279},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":87103,"byte_end":87107,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":8279},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":87710,"byte_end":87717,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":8285},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88278,"byte_end":88285,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88430,"byte_end":88437,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":88463,"byte_end":88470,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89224,"byte_end":89233,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":8291},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":89836,"byte_end":89845,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":8291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":90943,"byte_end":90952,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":8291},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":91153,"byte_end":91162,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":8291},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92482,"byte_end":92494,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":8304},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":92720,"byte_end":92732,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":8304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":93845,"byte_end":93857,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":8304},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":94061,"byte_end":94073,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":8304},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":95730,"byte_end":95742,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":8322},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":96056,"byte_end":96068,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":8322},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":96255,"byte_end":96267,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":8322},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":96705,"byte_end":96711,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97405,"byte_end":97411,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":97553,"byte_end":97559,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98062,"byte_end":98067,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":8356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98246,"byte_end":98251,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":8356},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98283,"byte_end":98288,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8356},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":98385,"byte_end":98390,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8356},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":106004,"byte_end":106011,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":107802,"byte_end":107809,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":108472,"byte_end":108479,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":108975,"byte_end":108981,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":111417,"byte_end":111423,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":112127,"byte_end":112133,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8710},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":112696,"byte_end":112705,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8718},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113712,"byte_end":113721,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":113904,"byte_end":113913,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8718},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":114583,"byte_end":114592,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8718},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":123200,"byte_end":123210,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":125040,"byte_end":125050,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":126198,"byte_end":126208,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":126690,"byte_end":126699,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9046},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":128538,"byte_end":128547,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9046},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":129909,"byte_end":129917,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9054},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":130995,"byte_end":131003,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9054},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":132434,"byte_end":132442,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9054},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133421,"byte_end":133427,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":133766,"byte_end":133772,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134157,"byte_end":134163,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134544,"byte_end":134550,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":134791,"byte_end":134797,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9060},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135136,"byte_end":135142,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9060},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135418,"byte_end":135424,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9060},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":135959,"byte_end":135965,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9060},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":137711,"byte_end":137717,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9060},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":138772,"byte_end":138778,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9060},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":140085,"byte_end":140091,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9060},"to":{"krate":23,"index":47}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":140521,"byte_end":140527,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9060},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":195831,"byte_end":195836,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":196062,"byte_end":196067,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9119},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":196276,"byte_end":196281,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9119},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":197877,"byte_end":197884,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":198149,"byte_end":198156,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9168},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":198334,"byte_end":198341,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":9168},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":199367,"byte_end":199372,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":199766,"byte_end":199771,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9219},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":200021,"byte_end":200026,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9219},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":201151,"byte_end":201157,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":201377,"byte_end":201383,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":9277},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":202091,"byte_end":202097,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9277},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":202760,"byte_end":202765,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":202921,"byte_end":202926,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9317},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":203675,"byte_end":203680,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9317},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204428,"byte_end":204437,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204623,"byte_end":204632,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9357},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":204750,"byte_end":204759,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9357},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":206200,"byte_end":206206,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9396},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":206679,"byte_end":206685,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":207008,"byte_end":207014,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9396},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":207351,"byte_end":207357,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9396},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":209529,"byte_end":209538,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9461},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":209835,"byte_end":209844,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":210111,"byte_end":210120,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9461},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":210387,"byte_end":210396,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9461},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212498,"byte_end":212505,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212674,"byte_end":212681,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":9529},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":212873,"byte_end":212880,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":9529},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":214394,"byte_end":214398,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":9630},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":214754,"byte_end":214758,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":9630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":215019,"byte_end":215023,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9630},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":215258,"byte_end":215262,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9630},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":216851,"byte_end":216858,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9699},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217151,"byte_end":217158,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":9699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217389,"byte_end":217396,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":9699},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":217635,"byte_end":217642,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9699},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":218743,"byte_end":218747,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219244,"byte_end":219248,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9761},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":219346,"byte_end":219350,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9761},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":220552,"byte_end":220564,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":9800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":223054,"byte_end":223066,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":9800},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":223186,"byte_end":223198,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9800},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224083,"byte_end":224086,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9875},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224275,"byte_end":224278,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224447,"byte_end":224450,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9875},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":224618,"byte_end":224621,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9875},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225733,"byte_end":225737,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225788,"byte_end":225792,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":225943,"byte_end":225947,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10007},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":226086,"byte_end":226090,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226741,"byte_end":226755,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":226906,"byte_end":226920,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10015},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":227064,"byte_end":227078,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10015},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":228389,"byte_end":228397,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232363,"byte_end":232371,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10028},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":232513,"byte_end":232521,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10028},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":233680,"byte_end":233684,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10067},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":233929,"byte_end":233933,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10067},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":234044,"byte_end":234048,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10067},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":234753,"byte_end":234759,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":10108},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":235111,"byte_end":235117,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10108},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":235386,"byte_end":235392,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":10108},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":236653,"byte_end":236661,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":10157},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":236981,"byte_end":236989,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":10157},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":237173,"byte_end":237181,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":10157},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":237552,"byte_end":237562,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2681},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238227,"byte_end":238231,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":10211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238422,"byte_end":238426,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":10211},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":238544,"byte_end":238548,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10211},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240145,"byte_end":240154,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240606,"byte_end":240615,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":240941,"byte_end":240950,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10250},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":241198,"byte_end":241207,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":10250},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":243507,"byte_end":243511,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":10324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":243684,"byte_end":243688,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":10324},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":244660,"byte_end":244664,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":10324},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":245687,"byte_end":245696,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":10363},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":246144,"byte_end":246153,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":10363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":246472,"byte_end":246481,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":10363},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":248000,"byte_end":248009,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":10363},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249393,"byte_end":249402,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":10432},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":249690,"byte_end":249699,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":10432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":251816,"byte_end":251825,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10432},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":252857,"byte_end":252866,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":10432},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":253808,"byte_end":253812,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":10489},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254063,"byte_end":254067,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":10489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254313,"byte_end":254317,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":10489},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":254543,"byte_end":254547,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":10489},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":256429,"byte_end":256432,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":10557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":258018,"byte_end":258021,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":10557},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":258216,"byte_end":258219,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":10557},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":260914,"byte_end":260920,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":10612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":261428,"byte_end":261434,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":10612},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":263050,"byte_end":263056,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":10612},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":264028,"byte_end":264039,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":10660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":264391,"byte_end":264402,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":10660},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":266571,"byte_end":266582,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":10660},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":267580,"byte_end":267584,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":10703},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268070,"byte_end":268074,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":10703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268238,"byte_end":268242,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":10703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":268604,"byte_end":268608,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":10703},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":269835,"byte_end":269839,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":10703},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10693686,"byte_end":10693701,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":14767},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10694033,"byte_end":10694048,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":14767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10694435,"byte_end":10694450,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":14767},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10695904,"byte_end":10695919,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":14767},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697029,"byte_end":10697037,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":14726},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697384,"byte_end":10697392,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":14726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10697672,"byte_end":10697680,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":14726},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700017,"byte_end":10700034,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":14665},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700380,"byte_end":10700397,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":14665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10700830,"byte_end":10700847,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":14665},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10701077,"byte_end":10701094,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":14665},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":270860,"byte_end":270871,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":10951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":271063,"byte_end":271074,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":10951},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":271926,"byte_end":271937,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":10951},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151032,"byte_end":151033,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3273},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":151176,"byte_end":151182,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":96},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":308807,"byte_end":308814,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":10990},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":309107,"byte_end":309114,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":10990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":309395,"byte_end":309402,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":10990},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":310545,"byte_end":310552,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":10990},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311470,"byte_end":311480,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":11263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311673,"byte_end":311683,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":11263},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":311804,"byte_end":311814,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":11263},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":312913,"byte_end":312919,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":313211,"byte_end":313217,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":11436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":313495,"byte_end":313501,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":11436},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":314778,"byte_end":314784,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":11436},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315688,"byte_end":315695,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":11497},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315749,"byte_end":315756,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":11497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":315919,"byte_end":315926,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":11497},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":316068,"byte_end":316075,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":11497},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":316851,"byte_end":316861,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":11505},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":317157,"byte_end":317167,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":11505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":317412,"byte_end":317422,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":11505},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":318821,"byte_end":318830,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11562},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319226,"byte_end":319235,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319478,"byte_end":319487,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":11562},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":319744,"byte_end":319753,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":11562},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":321894,"byte_end":321906,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11627},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322206,"byte_end":322218,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":11627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322415,"byte_end":322427,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":11627},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":322705,"byte_end":322717,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":11627},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":324901,"byte_end":324911,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":11693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":325176,"byte_end":325186,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":11693},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":325432,"byte_end":325442,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":11693},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327051,"byte_end":327061,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":11739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327201,"byte_end":327211,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":11739},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":327399,"byte_end":327409,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":11739},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":328407,"byte_end":328416,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":11786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":328635,"byte_end":328644,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":11786},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":329907,"byte_end":329914,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":11821},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330273,"byte_end":330280,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":11821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330560,"byte_end":330567,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":11821},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":330821,"byte_end":330828,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":11821},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334691,"byte_end":334700,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":334962,"byte_end":334971,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":11890},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":336717,"byte_end":336729,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":11947},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":337185,"byte_end":337197,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":11947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":337537,"byte_end":337549,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":11947},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":339048,"byte_end":339060,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":11947},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":340288,"byte_end":340300,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":12016},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":340752,"byte_end":340764,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":12016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":341102,"byte_end":341114,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":12016},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":342721,"byte_end":342733,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":12016},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10703692,"byte_end":10703710,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":14626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10704049,"byte_end":10704067,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":14626},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10706273,"byte_end":10706284,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":14582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10706621,"byte_end":10706632,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14582},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10708790,"byte_end":10708810,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14516},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709175,"byte_end":10709195,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14516},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709434,"byte_end":10709454,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":14516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10709902,"byte_end":10709922,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14516},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":343877,"byte_end":343890,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":12266},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":344106,"byte_end":344119,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":12266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":344331,"byte_end":344344,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":12266},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":345965,"byte_end":345978,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":12266},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":346585,"byte_end":346598,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":12266},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":276967,"byte_end":276968,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4312},"to":{"krate":0,"index":4313}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":277049,"byte_end":277058,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":127},"to":{"krate":0,"index":4313}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":348634,"byte_end":348638,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":12285},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":349260,"byte_end":349264,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":12285},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350455,"byte_end":350461,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":12294},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350488,"byte_end":350494,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":12294},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":350802,"byte_end":350808,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":12294},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351405,"byte_end":351415,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":12303},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351459,"byte_end":351469,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":12303},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":351783,"byte_end":351793,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":12303},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354313,"byte_end":354318,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":12312},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354350,"byte_end":354355,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":12312},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354440,"byte_end":354445,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":12312},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":354694,"byte_end":354699,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":12312},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355638,"byte_end":355642,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":12323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":355771,"byte_end":355775,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":12323},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":356380,"byte_end":356384,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":12323},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357043,"byte_end":357050,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":12354},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357082,"byte_end":357089,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":12354},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357174,"byte_end":357181,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":12354},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":357426,"byte_end":357433,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":12354},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357820,"byte_end":357826,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4722},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":357857,"byte_end":357863,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4722},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":358628,"byte_end":358634,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4722},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":360088,"byte_end":360094,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":12367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361517,"byte_end":361523,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":12367},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":361736,"byte_end":361742,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":12367},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365086,"byte_end":365092,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":12413},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365332,"byte_end":365338,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":12413},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":365618,"byte_end":365624,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":12413},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713064,"byte_end":10713076,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14481},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713181,"byte_end":10713193,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14481},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713224,"byte_end":10713236,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14481},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713359,"byte_end":10713371,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14481},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10713552,"byte_end":10713564,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14481},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716146,"byte_end":10716160,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10716186,"byte_end":10716200,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":12536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717766,"byte_end":10717780,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10717873,"byte_end":10717887,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":12536},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719049,"byte_end":10719063,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719229,"byte_end":10719243,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719523,"byte_end":10719537,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":12536},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10719707,"byte_end":10719721,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":7007}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":10746862,"byte_end":10746873,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":12670},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10748232,"byte_end":10748240,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":13178},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10749314,"byte_end":10749322,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":13178},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10749359,"byte_end":10749369,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":13139},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750221,"byte_end":10750231,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":13139},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750279,"byte_end":10750286,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":13149},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750549,"byte_end":10750556,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":13149},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10750597,"byte_end":10750607,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":13158},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751476,"byte_end":10751486,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":13158},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751534,"byte_end":10751538,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":13169},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751797,"byte_end":10751801,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":13169},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10751970,"byte_end":10751980,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":13158},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752025,"byte_end":10752035,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":13158},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752081,"byte_end":10752091,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":13139},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752136,"byte_end":10752146,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":13139},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752200,"byte_end":10752208,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":13178},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10752257,"byte_end":10752265,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":13178},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753750,"byte_end":10753754,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":12798},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753789,"byte_end":10753793,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":12798},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10753825,"byte_end":10753829,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":12798},"to":{"krate":20,"index":327}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10754906,"byte_end":10754910,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":12798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10755910,"byte_end":10755914,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":12798},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10757364,"byte_end":10757379,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":12868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10760035,"byte_end":10760050,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":12868},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722108,"byte_end":10722124,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722165,"byte_end":10722181,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722210,"byte_end":10722226,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722251,"byte_end":10722267,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":12890},"to":{"krate":20,"index":16}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10722452,"byte_end":10722468,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":12890},"to":{"krate":20,"index":19}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724175,"byte_end":10724191,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10724265,"byte_end":10724281,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":12890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10735812,"byte_end":10735828,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":12890},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10741012,"byte_end":10741016,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":12927},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743271,"byte_end":10743287,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10743425,"byte_end":10743441,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":12890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10744012,"byte_end":10744028,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10745678,"byte_end":10745694,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746164,"byte_end":10746180,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746456,"byte_end":10746472,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":12890},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10746594,"byte_end":10746610,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":7007}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761645,"byte_end":10761654,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14443},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10761799,"byte_end":10761808,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":14443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763281,"byte_end":10763290,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14443},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10763389,"byte_end":10763398,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14443},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10764182,"byte_end":10764191,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14443},"to":{"krate":18,"index":110}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765209,"byte_end":10765218,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14443},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765363,"byte_end":10765372,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14443},"to":{"krate":2,"index":7007}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10765555,"byte_end":10765564,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14443},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10766647,"byte_end":10766651,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14434},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767084,"byte_end":10767088,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14434},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767143,"byte_end":10767150,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":14425},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767587,"byte_end":10767594,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":14425},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10767645,"byte_end":10767653,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":14418},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10768081,"byte_end":10768089,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":14418},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":367986,"byte_end":367988,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4954},"to":{"krate":0,"index":4957}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368043,"byte_end":368045,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4956},"to":{"krate":0,"index":4960}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":368124,"byte_end":368129,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":20,"index":16},"to":{"krate":0,"index":4957}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":370893,"byte_end":370903,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":19},"to":{"krate":0,"index":4960}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402493,"byte_end":402503,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":13201},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":402941,"byte_end":402951,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":13201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":403462,"byte_end":403472,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":13201},"to":{"krate":1,"index":4310}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":404017,"byte_end":404027,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":13201},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":404819,"byte_end":404829,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":13201},"to":{"krate":1,"index":4249}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":405554,"byte_end":405564,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":13201},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406195,"byte_end":406205,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":13201},"to":{"krate":1,"index":4328}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406349,"byte_end":406359,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":13201},"to":{"krate":23,"index":47}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406621,"byte_end":406631,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":13201},"to":{"krate":1,"index":4334}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":406847,"byte_end":406857,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":13201},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":408696,"byte_end":408705,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":13234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":409850,"byte_end":409859,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":13234},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":411471,"byte_end":411480,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":13234},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412310,"byte_end":412319,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":13234},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412397,"byte_end":412406,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":13234},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":412722,"byte_end":412731,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":13234},"to":{"krate":23,"index":47}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":416699,"byte_end":416708,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":13287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":418237,"byte_end":418246,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":13287},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419669,"byte_end":419678,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":13287},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419759,"byte_end":419768,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":13287},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":419849,"byte_end":419858,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":13287},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":420217,"byte_end":420226,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":13287},"to":{"krate":23,"index":47}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":421163,"byte_end":421168,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":13336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422424,"byte_end":422429,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":13336},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":422759,"byte_end":422764,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":13336},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":424117,"byte_end":424122,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":13336},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425233,"byte_end":425238,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":13385},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425291,"byte_end":425296,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":13385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":425438,"byte_end":425443,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":13385},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":427213,"byte_end":427217,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":13402},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":428940,"byte_end":428947,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":13456},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":430780,"byte_end":430786,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":13509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":433986,"byte_end":433992,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":47}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":434279,"byte_end":434285,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":434917,"byte_end":434923,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436127,"byte_end":436133,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436208,"byte_end":436214,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436292,"byte_end":436298,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":436371,"byte_end":436377,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":13509},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437360,"byte_end":437365,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5541},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437713,"byte_end":437718,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5541},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":437950,"byte_end":437955,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5541},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438453,"byte_end":438460,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":13537},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438515,"byte_end":438522,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":13537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":438653,"byte_end":438660,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":13537},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440230,"byte_end":440235,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":13545},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440288,"byte_end":440293,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":13545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":440406,"byte_end":440411,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":13545},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":441214,"byte_end":441219,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":13558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":441382,"byte_end":441387,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":13558},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442382,"byte_end":442386,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":13601},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442438,"byte_end":442442,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":13601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":442607,"byte_end":442611,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":13601},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443299,"byte_end":443311,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":13610},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443363,"byte_end":443375,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":13610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":443554,"byte_end":443566,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":13610},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444261,"byte_end":444270,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":13619},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444322,"byte_end":444331,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":13619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":444496,"byte_end":444505,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":13619},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445648,"byte_end":445656,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":13628},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":445711,"byte_end":445719,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":13628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":446688,"byte_end":446696,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":13628},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447451,"byte_end":447460,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":13639},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447512,"byte_end":447521,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":13639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":447766,"byte_end":447771,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5856},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":449606,"byte_end":449615,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":13639},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450488,"byte_end":450500,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":13649},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":450552,"byte_end":450564,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":13649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":451493,"byte_end":451505,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":13649},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452325,"byte_end":452334,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":13660},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":452389,"byte_end":452398,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":13660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":453370,"byte_end":453379,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":13660},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":454603,"byte_end":454609,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5991},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":455389,"byte_end":455395,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455909,"byte_end":455913,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":13671},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":455965,"byte_end":455969,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":13671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":456126,"byte_end":456130,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":13671},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457259,"byte_end":457263,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6067},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":457981,"byte_end":457985,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459002,"byte_end":459010,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":13680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459510,"byte_end":459519,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":13686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":459911,"byte_end":459919,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":13680},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":460422,"byte_end":460431,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":13686},"to":{"krate":23,"index":42}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461446,"byte_end":461458,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6151},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461622,"byte_end":461634,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6151},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":461868,"byte_end":461880,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6151},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":462419,"byte_end":462423,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":13697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464340,"byte_end":464344,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":13697},"to":{"krate":23,"index":39}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":464985,"byte_end":464989,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":13697},"to":{"krate":23,"index":49}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":466832,"byte_end":466838,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":13736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":468908,"byte_end":468914,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":13736},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":469061,"byte_end":469067,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":13736},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469588,"byte_end":469593,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":13743},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469646,"byte_end":469651,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":13743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":469813,"byte_end":469818,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":13743},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470502,"byte_end":470515,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":13752},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470568,"byte_end":470581,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":13752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":470754,"byte_end":470767,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":13752},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471459,"byte_end":471467,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":13761},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471520,"byte_end":471528,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":13761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":471690,"byte_end":471698,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":13761},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":378101,"byte_end":378110,"line_start":152,"line_end":152,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":39},"to":{"krate":0,"index":6359}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386358,"byte_end":386359,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6375},"to":{"krate":0,"index":6359}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":386462,"byte_end":386472,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":42},"to":{"krate":0,"index":6376}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392814,"byte_end":392815,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6386},"to":{"krate":0,"index":6376}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":392916,"byte_end":392925,"line_start":599,"line_end":599,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":47},"to":{"krate":0,"index":6387}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393702,"byte_end":393703,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6391},"to":{"krate":0,"index":6387}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":393810,"byte_end":393822,"line_start":627,"line_end":627,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":23,"index":49},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401182,"byte_end":401183,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6401},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769589,"byte_end":10769594,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10769927,"byte_end":10769932,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770025,"byte_end":10770030,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770163,"byte_end":10770169,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":13838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10770701,"byte_end":10770706,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":13824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10771277,"byte_end":10771282,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":13824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774397,"byte_end":10774412,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":13861},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774843,"byte_end":10774858,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":13861},"to":{"krate":18,"index":27}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10774975,"byte_end":10774990,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":13861},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776219,"byte_end":10776234,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":13861},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10776836,"byte_end":10776846,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":13880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10777858,"byte_end":10777868,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778074,"byte_end":10778084,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778182,"byte_end":10778192,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778333,"byte_end":10778343,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10778794,"byte_end":10778810,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":13903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10779940,"byte_end":10779956,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780221,"byte_end":10780237,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780349,"byte_end":10780365,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780508,"byte_end":10780524,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780801,"byte_end":10780806,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10780852,"byte_end":10780857,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":13824},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781024,"byte_end":10781039,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":13861},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781143,"byte_end":10781158,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":13861},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781362,"byte_end":10781372,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781422,"byte_end":10781432,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":13880},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781500,"byte_end":10781516,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10781587,"byte_end":10781603,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":13903},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783607,"byte_end":10783612,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":14056},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783649,"byte_end":10783654,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":14056},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10783670,"byte_end":10783676,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":14050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789296,"byte_end":10789301,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":14056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789423,"byte_end":10789428,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":14056},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789756,"byte_end":10789768,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":14021},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10789932,"byte_end":10789944,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":14021},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790165,"byte_end":10790177,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":14021},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790559,"byte_end":10790570,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":14063},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790733,"byte_end":10790744,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":14063},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10790882,"byte_end":10790893,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":14063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10791245,"byte_end":10791256,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":14063},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10792569,"byte_end":10792578,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":14380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10794851,"byte_end":10794862,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":14137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795645,"byte_end":10795652,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":14148},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795835,"byte_end":10795842,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":14148},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10795855,"byte_end":10795864,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":14380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10796853,"byte_end":10796862,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":14380},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797101,"byte_end":10797110,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":14380},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10797369,"byte_end":10797380,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":14137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473323,"byte_end":473324,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6448},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473463,"byte_end":473470,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":6443},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473559,"byte_end":473560,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6457},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473746,"byte_end":473752,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":6453},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":473830,"byte_end":473831,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6465},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":474847,"byte_end":474851,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":474945,"byte_end":474949,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6470},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475208,"byte_end":475215,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":14179},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475438,"byte_end":475445,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":14179},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475636,"byte_end":475643,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":14179},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":475948,"byte_end":475961,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":14200},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476378,"byte_end":476387,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":14216},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476671,"byte_end":476680,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":14216},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":476942,"byte_end":476951,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":14216},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477273,"byte_end":477280,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":14231},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477499,"byte_end":477506,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":14231},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477684,"byte_end":477691,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":14231},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":477992,"byte_end":478000,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":14246},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478223,"byte_end":478231,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":14246},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478413,"byte_end":478421,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":14246},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":478731,"byte_end":478742,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":14261},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479002,"byte_end":479013,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":14261},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479250,"byte_end":479261,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":14261},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479628,"byte_end":479640,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":14273},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":479901,"byte_end":479913,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":14273},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":480151,"byte_end":480163,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":14273},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":480782,"byte_end":480796,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":14285},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481019,"byte_end":481033,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":14285},"to":{"krate":0,"index":6453}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481234,"byte_end":481248,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":14285},"to":{"krate":0,"index":6461}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481554,"byte_end":481560,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6634},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":481653,"byte_end":481659,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6634},"to":{"krate":0,"index":6443}},{"span":{"file_name":"/home/santiago/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":482264,"byte_end":482275,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":14322},"to":{"krate":4294967295,"index":4294967295}}]}